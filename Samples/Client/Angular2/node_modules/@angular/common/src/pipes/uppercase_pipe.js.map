{"version":3,"file":"uppercase_pipe.js","sourceRoot":"","sources":["../../../../../modules/@angular/common/src/pipes/uppercase_pipe.ts"],"names":[],"mappings":";AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,qBAAgC,gBAAgB,CAAC,CAAA;AACjD,gDAA2C,mCAAmC,CAAC,CAAA;AAC/E;IAAA;IAYA,CAAC;IAXC,iCAAS,GAAT,UAAU,KAAa;QACrB,EAAE,CAAC,CAAC,cAAO,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QACjC,EAAE,CAAC,CAAC,CAAC,eAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,IAAI,8DAA4B,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;IACH,kBAAkB;IACX,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,WAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,WAAW,EAAC,EAAG,EAAE;KAC5C,CAAC;IACF,oBAAC;AAAD,CAAC,AAZD,IAYC;AAZY,qBAAa,gBAYzB,CAAA","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\nimport {isBlank, isString} from '../facade/lang';\nimport {InvalidPipeArgumentException} from './invalid_pipe_argument_exception';\nexport class UpperCasePipe implements PipeTransform {\n  transform(value: string): string {\n    if (isBlank(value)) return value;\n    if (!isString(value)) {\n      throw new InvalidPipeArgumentException(UpperCasePipe, value);\n    }\n    return value.toUpperCase();\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'uppercase'}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}