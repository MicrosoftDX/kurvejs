{"version":3,"file":"ng_form_model.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/forms-deprecated/directives/ng_form_model.ts"],"names":[],"mappings":"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","sourcesContent":["import {Directive, Inject, OnChanges, Optional, Self, SimpleChanges, forwardRef} from '@angular/core';\n\nimport {EventEmitter, ObservableWrapper} from '../../facade/async';\nimport {ListWrapper, StringMapWrapper} from '../../facade/collection';\nimport {BaseException} from '../../facade/exceptions';\nimport {isBlank} from '../../facade/lang';\nimport {Control, ControlGroup} from '../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators} from '../validators';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {NgControl} from './ng_control';\nimport {NgControlGroup} from './ng_control_group';\nimport {composeAsyncValidators, composeValidators, setUpControl, setUpControlGroup} from './shared';\n\nexport const formDirectiveProvider: any =\n    /*@ts2dart_const*/ /* @ts2dart_Provider */ {\n      provide: ControlContainer,\n      useExisting: forwardRef(() => NgFormModel)\n    };\n\nlet _formModelWarningDisplayed: boolean = false;\nexport class NgFormModel extends ControlContainer implements Form,\n    OnChanges {\n  private _submitted: boolean = false;\n\n  form: ControlGroup = null;\n  directives: NgControl[] = [];\n  ngSubmit = new EventEmitter();\n\n  constructor( private _validators: any[], private _asyncValidators: any[]) {\n    super();\n    this._displayWarning();\n  }\n\n  private _displayWarning() {\n    // TODO(kara): Update this when the new forms module becomes the default\n    if (!_formModelWarningDisplayed) {\n      _formModelWarningDisplayed = true;\n      console.warn(`\n      *It looks like you're using the old forms module. This will be opt-in in the next RC, and\n      will eventually be removed in favor of the new forms module. For more information, see:\n      https://docs.google.com/document/u/1/d/1RIezQqE4aEhBRmArIAS1mRIZtWFf6JxN_7B4meyWK0Y/pub\n    `);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._checkFormPresent();\n    if (StringMapWrapper.contains(changes, 'form')) {\n      var sync = composeValidators(this._validators);\n      this.form.validator = Validators.compose([this.form.validator, sync]);\n\n      var async = composeAsyncValidators(this._asyncValidators);\n      this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n\n      this.form.updateValueAndValidity({onlySelf: true, emitEvent: false});\n    }\n\n    this._updateDomValue();\n  }\n\n  get submitted(): boolean { return this._submitted; }\n\n  get formDirective(): Form { return this; }\n\n  get control(): ControlGroup { return this.form; }\n\n  get path(): string[] { return []; }\n\n  addControl(dir: NgControl): void {\n    var ctrl: any = this.form.find(dir.path);\n    setUpControl(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n    this.directives.push(dir);\n  }\n\n  getControl(dir: NgControl): Control { return <Control>this.form.find(dir.path); }\n\n  removeControl(dir: NgControl): void { ListWrapper.remove(this.directives, dir); }\n\n  addControlGroup(dir: NgControlGroup) {\n    var ctrl: any = this.form.find(dir.path);\n    setUpControlGroup(ctrl, dir);\n    ctrl.updateValueAndValidity({emitEvent: false});\n  }\n\n  removeControlGroup(dir: NgControlGroup) {}\n\n  getControlGroup(dir: NgControlGroup): ControlGroup {\n    return <ControlGroup>this.form.find(dir.path);\n  }\n\n  updateModel(dir: NgControl, value: any): void {\n    var ctrlÂ  = <Control>this.form.find(dir.path);\n    ctrl.updateValue(value);\n  }\n\n  onSubmit(): boolean {\n    this._submitted = true;\n    ObservableWrapper.callEmit(this.ngSubmit, null);\n    return false;\n  }\n\n  /** @internal */\n  _updateDomValue() {\n    this.directives.forEach(dir => {\n      var ctrl: any = this.form.find(dir.path);\n      dir.valueAccessor.writeValue(ctrl.value);\n    });\n  }\n\n  private _checkFormPresent() {\n    if (isBlank(this.form)) {\n      throw new BaseException(\n          `ngFormModel expects a form. Please pass one in. Example: <form [ngFormModel]=\"myCoolForm\">`);\n    }\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngFormModel]',\n  providers: [formDirectiveProvider],\n  inputs: ['form: ngFormModel'],\n  host: {'(submit)': 'onSubmit()'},\n  outputs: ['ngSubmit'],\n  exportAs: 'ngForm'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}