{"version":3,"file":"i18n_plural_pipe.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/pipes/i18n_plural_pipe.ts"],"names":[],"mappings":"OAAO,EAAC,IAAI,EAAgB,MAAM,eAAe;OAC1C,EAAC,aAAa,EAAE,SAAS,EAAE,WAAW,EAAC,MAAM,gBAAgB;OAC7D,EAAC,4BAA4B,EAAC,MAAM,mCAAmC;AAE9E,MAAM,qBAAqB,GAAW,IAAI,CAAC;AAC3C;IACE,SAAS,CAAC,KAAa,EAAE,SAAoC;QAC3D,IAAI,GAAW,CAAC;QAChB,IAAI,QAAgB,CAAC;QAErB,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,IAAI,4BAA4B,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;QACpE,CAAC;QAED,GAAG,GAAG,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,GAAG,IAAI,KAAK,EAAE,GAAG,OAAO,CAAC;QACzD,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC;QAEpD,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,qBAAqB,EAAE,QAAQ,CAAC,CAAC;IACnF,CAAC;AAKH,CAAC;AAJD,kBAAkB;AACX,yBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,EAAC,EAAG,EAAE;CACzD,CACA","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\nimport {StringWrapper, isPresent, isStringMap} from '../facade/lang';\nimport {InvalidPipeArgumentException} from './invalid_pipe_argument_exception';\n\nconst _INTERPOLATION_REGEXP: RegExp = /#/g;\nexport class I18nPluralPipe implements PipeTransform {\n  transform(value: number, pluralMap: {[count: string]: string}): string {\n    var key: string;\n    var valueStr: string;\n\n    if (!isStringMap(pluralMap)) {\n      throw new InvalidPipeArgumentException(I18nPluralPipe, pluralMap);\n    }\n\n    key = value === 0 || value === 1 ? `=${value}` : 'other';\n    valueStr = isPresent(value) ? value.toString() : '';\n\n    return StringWrapper.replaceAll(pluralMap[key], _INTERPOLATION_REGEXP, valueStr);\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'i18nPlural', pure: true}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}