{"version":3,"file":"date_pipe.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/pipes/date_pipe.ts"],"names":[],"mappings":"OAAO,EAAC,IAAI,EAAgB,MAAM,eAAe;OAC1C,EAAC,gBAAgB,EAAC,MAAM,sBAAsB;OAC9C,EAAC,aAAa,EAAC,MAAM,gBAAgB;OACrC,EAAC,WAAW,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAC,MAAM,gBAAgB;OAC7E,EAAC,4BAA4B,EAAC,MAAM,mCAAmC;AAE9E,iFAAiF;AACjF,IAAI,aAAa,GAAW,OAAO,CAAC;AACpC;IAcE,SAAS,CAAC,KAAU,EAAE,OAAO,GAAW,YAAY;QAClD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAEhC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,IAAI,4BAA4B,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC1D,CAAC;QAED,EAAE,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,KAAK,GAAG,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;QACpE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,KAAK,GAAG,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC;QACD,EAAE,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1D,OAAO,GAAW,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACrE,CAAC;QACD,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,OAAO,CAAC,CAAC;IAC7D,CAAC;IAEO,QAAQ,CAAC,GAAQ;QACvB,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;AAKH,CAAC;AA5CC,gBAAgB;AACT,iBAAQ,GAA4B;IACzC,QAAQ,EAAE,UAAU;IACpB,OAAO,EAAE,OAAO;IAChB,UAAU,EAAE,YAAY;IACxB,UAAU,EAAE,QAAQ;IACpB,YAAY,EAAE,OAAO;IACrB,WAAW,EAAE,KAAK;IAClB,YAAY,EAAE,KAAK;IACnB,WAAW,EAAE,IAAI;CAClB,CAAC;AA8BJ,kBAAkB;AACX,mBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAC,EAAG,EAAE;CACnD,CACA","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\nimport {StringMapWrapper} from '../facade/collection';\nimport {DateFormatter} from '../facade/intl';\nimport {DateWrapper, NumberWrapper, isBlank, isDate, isString} from '../facade/lang';\nimport {InvalidPipeArgumentException} from './invalid_pipe_argument_exception';\n\n// TODO: move to a global configurable location along with other i18n components.\nvar defaultLocale: string = 'en-US';\nexport class DatePipe implements PipeTransform {\n  /** @internal */\n  static _ALIASES: {[key: string]: String} = {\n    'medium': 'yMMMdjms',\n    'short': 'yMdjm',\n    'fullDate': 'yMMMMEEEEd',\n    'longDate': 'yMMMMd',\n    'mediumDate': 'yMMMd',\n    'shortDate': 'yMd',\n    'mediumTime': 'jms',\n    'shortTime': 'jm'\n  };\n\n\n  transform(value: any, pattern: string = 'mediumDate'): string {\n    if (isBlank(value)) return null;\n\n    if (!this.supports(value)) {\n      throw new InvalidPipeArgumentException(DatePipe, value);\n    }\n\n    if (NumberWrapper.isNumeric(value)) {\n      value = DateWrapper.fromMillis(NumberWrapper.parseInt(value, 10));\n    } else if (isString(value)) {\n      value = DateWrapper.fromISOString(value);\n    }\n    if (StringMapWrapper.contains(DatePipe._ALIASES, pattern)) {\n      pattern = <string>StringMapWrapper.get(DatePipe._ALIASES, pattern);\n    }\n    return DateFormatter.format(value, defaultLocale, pattern);\n  }\n\n  private supports(obj: any): boolean {\n    if (isDate(obj) || NumberWrapper.isNumeric(obj)) {\n      return true;\n    }\n    if (isString(obj) && isDate(DateWrapper.fromISOString(obj))) {\n      return true;\n    }\n    return false;\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'date', pure: true}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}