{"version":3,"file":"lowercase_pipe.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/pipes/lowercase_pipe.ts"],"names":[],"mappings":"OAAO,EAAC,IAAI,EAAgB,MAAM,eAAe;OAC1C,EAAC,OAAO,EAAE,QAAQ,EAAC,MAAM,gBAAgB;OACzC,EAAC,4BAA4B,EAAC,MAAM,mCAAmC;AAC9E;IACE,SAAS,CAAC,KAAa;QACrB,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QACjC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,MAAM,IAAI,4BAA4B,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QAC/D,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;IAC7B,CAAC;AAKH,CAAC;AAJD,kBAAkB;AACX,wBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,WAAW,EAAC,EAAG,EAAE;CAC5C,CACA","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\nimport {isBlank, isString} from '../facade/lang';\nimport {InvalidPipeArgumentException} from './invalid_pipe_argument_exception';\nexport class LowerCasePipe implements PipeTransform {\n  transform(value: string): string {\n    if (isBlank(value)) return value;\n    if (!isString(value)) {\n      throw new InvalidPipeArgumentException(LowerCasePipe, value);\n    }\n    return value.toLowerCase();\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'lowercase'}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}