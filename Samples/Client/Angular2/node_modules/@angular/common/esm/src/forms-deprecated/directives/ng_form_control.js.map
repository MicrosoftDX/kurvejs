{"version":3,"file":"ng_form_control.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/common/src/forms-deprecated/directives/ng_form_control.ts"],"names":[],"mappings":"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","sourcesContent":["import {Directive, Inject, OnChanges, Optional, Self, SimpleChanges, forwardRef} from '@angular/core';\n\nimport {EventEmitter, ObservableWrapper} from '../../facade/async';\nimport {StringMapWrapper} from '../../facade/collection';\nimport {Control} from '../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\nimport {NgControl} from './ng_control';\nimport {composeAsyncValidators, composeValidators, isPropertyUpdated, selectValueAccessor, setUpControl} from './shared';\nimport {AsyncValidatorFn, ValidatorFn} from './validators';\n\nexport const formControlBinding: any =\n    /*@ts2dart_const*/ /* @ts2dart_Provider */ {\n      provide: NgControl,\n      useExisting: forwardRef(() => NgFormControl)\n    };\nexport class NgFormControl extends NgControl implements OnChanges {\n  form: Control;\n  update = new EventEmitter();\n  model: any;\n  viewModel: any;\n\n  constructor( private _validators:\n                  /* Array<Validator|Function> */ any[], private _asyncValidators:\n                  /* Array<Validator|Function> */ any[],\n              valueAccessors: ControlValueAccessor[]) {\n                super();\n                this.valueAccessor = selectValueAccessor(this, valueAccessors);\n              }\n\n              ngOnChanges(changes: SimpleChanges): void {\n                if (this._isControlChanged(changes)) {\n                  setUpControl(this.form, this);\n                  this.form.updateValueAndValidity({emitEvent: false});\n                }\n                if (isPropertyUpdated(changes, this.viewModel)) {\n                  this.form.updateValue(this.model);\n                  this.viewModel = this.model;\n                }\n              }\n\n              get path(): string[] { return []; }\n\n              get validator(): ValidatorFn { return composeValidators(this._validators); }\n\n              get asyncValidator(): AsyncValidatorFn {\n                return composeAsyncValidators(this._asyncValidators);\n              }\n\n              get control(): Control { return this.form; }\n\n              viewToModelUpdate(newValue: any): void {\n                this.viewModel = newValue;\n                ObservableWrapper.callEmit(this.update, newValue);\n              }\n\n              private _isControlChanged(changes: {[key: string]: any}): boolean {\n                return StringMapWrapper.contains(changes, 'form');\n              }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngFormControl]',\n  providers: [formControlBinding],\n  inputs: ['form: ngFormControl', 'model: ngModel'],\n  outputs: ['update: ngModelChange'],\n  exportAs: 'ngForm'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}