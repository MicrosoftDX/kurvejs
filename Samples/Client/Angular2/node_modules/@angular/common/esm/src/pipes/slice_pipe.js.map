{"version":3,"file":"slice_pipe.js","sourceRoot":"","sources":["../../../../../../modules/@angular/common/src/pipes/slice_pipe.ts"],"names":[],"mappings":"OAAO,EAAC,IAAI,EAAgB,MAAM,eAAe;OAC1C,EAAC,WAAW,EAAC,MAAM,sBAAsB;OACzC,EAAC,aAAa,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAC,MAAM,gBAAgB;OACjE,EAAC,4BAA4B,EAAC,MAAM,mCAAmC;AAC9E;IACE,SAAS,CAAC,KAAU,EAAE,KAAa,EAAE,GAAG,GAAW,IAAI;QACrD,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QACjC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,IAAI,4BAA4B,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC3D,CAAC;QACD,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;QAChD,CAAC;QACD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IAC9C,CAAC;IAEO,QAAQ,CAAC,GAAQ,IAAa,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAK/E,CAAC;AAJD,kBAAkB;AACX,oBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAC,EAAG,EAAE;CACrD,CACA","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\nimport {ListWrapper} from '../facade/collection';\nimport {StringWrapper, isArray, isBlank, isString} from '../facade/lang';\nimport {InvalidPipeArgumentException} from './invalid_pipe_argument_exception';\nexport class SlicePipe implements PipeTransform {\n  transform(value: any, start: number, end: number = null): any {\n    if (isBlank(value)) return value;\n    if (!this.supports(value)) {\n      throw new InvalidPipeArgumentException(SlicePipe, value);\n    }\n    if (isString(value)) {\n      return StringWrapper.slice(value, start, end);\n    }\n    return ListWrapper.slice(value, start, end);\n  }\n\n  private supports(obj: any): boolean { return isString(obj) || isArray(obj); }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{name: 'slice', pure: false}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}