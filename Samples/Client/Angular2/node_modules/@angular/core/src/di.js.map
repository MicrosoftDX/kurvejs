{"version":3,"file":"di.js","sourceRoot":"","sources":["../../../../modules/@angular/core/src/di.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;AAEH,yBAAiH,eAAe,CAAC;AAAzH,+CAAY;AAAE,mDAAc;AAAE,2DAAkB;AAAE,uDAAgB;AAAE,+CAAY;AAAE,uDAAuC;AAGjI,+EAA+E;AAC/E,iBAAc,iBAAiB,CAAC,EAAA;AAEhC,4BAA0D,kBAAkB,CAAC;AAArE,8CAAU;AAAE,4DAAyD;AAE7E,yBAAuB,eAAe,CAAC;AAA/B,uCAA+B;AACvC,oCAAiC,0BAA0B,CAAC;AAApD,sEAAoD;AAC5D,yBAAgE,eAAe,CAAC;AAAxE,qCAAO;AAAE,qDAAe;AAAE,+BAAI;AAAE,uCAAQ;AAAE,qCAA8B;AAChF,oCAA+F,0BAA0B,CAAC;AAAvF,oFAAuF;AAC1H,+BAA4B,qBAAqB,CAAC;AAA1C,uDAA0C;AAClD,sCAA2J,4BAA4B,CAAC;AAAhL,kEAAe;AAAE,8EAAqB;AAAE,8EAAqB;AAAE,wEAAkB;AAAE,4EAAoB;AAAE,sEAAiB;AAAE,oEAAoD;AACxL,6BAA0B,mBAAmB,CAAC;AAAtC,iDAAsC","sourcesContent":["/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport {HostMetadata, InjectMetadata, InjectableMetadata, OptionalMetadata, SelfMetadata, SkipSelfMetadata} from './di/metadata';\n\n\n// we have to reexport * because Dart and TS export two different sets of types\nexport * from './di/decorators';\n\nexport {forwardRef, resolveForwardRef, ForwardRefFn} from './di/forward_ref';\n\nexport {Injector} from './di/injector';\nexport {ReflectiveInjector} from './di/reflective_injector';\nexport {Binding, ProviderBuilder, bind, Provider, provide} from './di/provider';\nexport {ResolvedReflectiveBinding, ResolvedReflectiveFactory, ResolvedReflectiveProvider} from './di/reflective_provider';\nexport {ReflectiveKey} from './di/reflective_key';\nexport {NoProviderError, AbstractProviderError, CyclicDependencyError, InstantiationError, InvalidProviderError, NoAnnotationError, OutOfBoundsError} from './di/reflective_exceptions';\nexport {OpaqueToken} from './di/opaque_token';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}