{"version":3,"file":"application_tokens.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/application_tokens.ts"],"names":[],"mappings":"OAAO,EAAC,IAAI,EAAE,aAAa,EAAC,MAAM,oBAAoB;OAE/C,EAAC,WAAW,EAAC,MAAM,MAAM;AAGhC;;;;;;;;;GASG;AACH,OAAO,MAAM,MAAM,GAA2B,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;AAEvE;IACE,MAAM,CAAC,GAAG,WAAW,EAAE,GAAG,WAAW,EAAE,GAAG,WAAW,EAAE,EAAE,CAAC;AAC5D,CAAC;AAED;;;GAGG;AACH,OAAO,MAAM,sBAAsB;AAC/B,kBAAkB,CAAC,uBAAuB,CAAC;IACzC,OAAO,EAAE,MAAM;IACf,UAAU,EAAE,2BAA2B;IACvC,IAAI,EAAE,EAAS;CAChB,CAAC;AAEN;IACE,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACzE,CAAC;AAED;;;GAGG;AACH,OAAO,MAAM,oBAAoB;AAC7B,kBAAkB,CAAC,IAAI,WAAW,CAAC,sBAAsB,CAAC,CAAC;AAE/D;;;GAGG;AACH,OAAO,MAAM,eAAe;AACxB,kBAAkB,CAAC,IAAI,WAAW,CAAC,yBAAyB,CAAC,CAAC;AAElE;;;GAGG;AACH,OAAO,MAAM,gBAAgB;AACzB,kBAAkB,CAAC,IAAI,WAAW,CAAC,+BAA+B,CAAC,CAAC","sourcesContent":["import {Math, StringWrapper} from '../src/facade/lang';\n\nimport {OpaqueToken} from './di';\n\n\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @experimental\n */\nexport const APP_ID: any = /*@ts2dart_const*/ new OpaqueToken('AppId');\n\nfunction _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @experimental\n */\nexport const APP_ID_RANDOM_PROVIDER =\n    /*@ts2dart_const*/ /* @ts2dart_Provider */ {\n      provide: APP_ID,\n      useFactory: _appIdRandomProviderFactory,\n      deps: [] as any\n    };\n\nfunction _randomChar(): string {\n  return StringWrapper.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n\n/**\n * A function that will be executed when a platform is initialized.\n * @experimental\n */\nexport const PLATFORM_INITIALIZER: any =\n    /*@ts2dart_const*/ new OpaqueToken('Platform Initializer');\n\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nexport const APP_INITIALIZER: any =\n    /*@ts2dart_const*/ new OpaqueToken('Application Initializer');\n\n/**\n * A token which indicates the root directory of the application\n * @experimental\n */\nexport const PACKAGE_ROOT_URL: any =\n    /*@ts2dart_const*/ new OpaqueToken('Application Packages Root URL');\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}