{"version":3,"file":"animation_group_player.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/animation/animation_group_player.ts"],"names":[],"mappings":"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","sourcesContent":["import {isPresent, scheduleMicroTask} from '../facade/lang';\nimport {Math} from '../facade/math';\n\nimport {AnimationPlayer} from './animation_player';\n\nexport class AnimationGroupPlayer implements AnimationPlayer {\n  private _subscriptions: Function[] = [];\n  private _finished = false;\n  public parentPlayer: AnimationPlayer = null;\n\n  constructor(private _players: AnimationPlayer[]) {\n    var count = 0;\n    var total = this._players.length;\n    if (total == 0) {\n      scheduleMicroTask(() => this._onFinish());\n    } else {\n      this._players.forEach(player => {\n        player.parentPlayer = this;\n        player.onDone(() => {\n          if (++count >= total) {\n            this._onFinish();\n          }\n        });\n      });\n    }\n  }\n\n  private _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      if (!isPresent(this.parentPlayer)) {\n        this.destroy();\n      }\n      this._subscriptions.forEach(subscription => subscription());\n      this._subscriptions = [];\n    }\n  }\n\n  onDone(fn: Function): void { this._subscriptions.push(fn); }\n\n  play() { this._players.forEach(player => player.play()); }\n\n  pause(): void { this._players.forEach(player => player.pause()); }\n\n  restart(): void { this._players.forEach(player => player.restart()); }\n\n  finish(): void {\n    this._onFinish();\n    this._players.forEach(player => player.finish());\n  }\n\n  destroy(): void {\n    this._onFinish();\n    this._players.forEach(player => player.destroy());\n  }\n\n  reset(): void { this._players.forEach(player => player.reset()); }\n\n  setPosition(p: any /** TODO #9100 */): void {\n    this._players.forEach(player => { player.setPosition(p); });\n  }\n\n  getPosition(): number {\n    var min = 0;\n    this._players.forEach(player => {\n      var p = player.getPosition();\n      min = Math.min(p, min);\n    });\n    return min;\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}