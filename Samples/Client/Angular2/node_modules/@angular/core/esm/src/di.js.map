{"version":3,"file":"di.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/di.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,SAAQ,YAAY,EAAE,cAAc,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,YAAY,EAAE,gBAAgB,QAAO,eAAe,CAAC;AAGjI,+EAA+E;AAC/E,cAAc,iBAAiB,CAAC;AAEhC,SAAQ,UAAU,EAAE,iBAAiB,QAAqB,kBAAkB,CAAC;AAE7E,SAAQ,QAAQ,QAAO,eAAe,CAAC;AACvC,SAAQ,kBAAkB,QAAO,0BAA0B,CAAC;AAC5D,SAAQ,OAAO,EAAE,eAAe,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,QAAO,eAAe,CAAC;AAChF,SAAmC,yBAAyB,QAAmC,0BAA0B,CAAC;AAC1H,SAAQ,aAAa,QAAO,qBAAqB,CAAC;AAClD,SAAQ,eAAe,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,gBAAgB,QAAO,4BAA4B,CAAC;AACxL,SAAQ,WAAW,QAAO,mBAAmB,CAAC","sourcesContent":["/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport {HostMetadata, InjectMetadata, InjectableMetadata, OptionalMetadata, SelfMetadata, SkipSelfMetadata} from './di/metadata';\n\n\n// we have to reexport * because Dart and TS export two different sets of types\nexport * from './di/decorators';\n\nexport {forwardRef, resolveForwardRef, ForwardRefFn} from './di/forward_ref';\n\nexport {Injector} from './di/injector';\nexport {ReflectiveInjector} from './di/reflective_injector';\nexport {Binding, ProviderBuilder, bind, Provider, provide} from './di/provider';\nexport {ResolvedReflectiveBinding, ResolvedReflectiveFactory, ResolvedReflectiveProvider} from './di/reflective_provider';\nexport {ReflectiveKey} from './di/reflective_key';\nexport {NoProviderError, AbstractProviderError, CyclicDependencyError, InstantiationError, InvalidProviderError, NoAnnotationError, OutOfBoundsError} from './di/reflective_exceptions';\nexport {OpaqueToken} from './di/opaque_token';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}