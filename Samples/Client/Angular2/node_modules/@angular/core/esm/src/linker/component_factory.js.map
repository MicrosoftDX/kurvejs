{"version":3,"file":"component_factory.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/linker/component_factory.ts"],"names":[],"mappings":"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","sourcesContent":["import {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {unimplemented} from '../facade/exceptions';\nimport {Type, isBlank, isPresent} from '../facade/lang';\n\nimport {AppElement} from './element';\nimport {ElementRef} from './element_ref';\nimport {ViewRef, ViewRef_} from './view_ref';\nimport {ViewUtils} from './view_utils';\n\n\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n * @stable\n */\nexport abstract class ComponentRef<C> {\n  /**\n   * Location of the Host Element of this Component Instance.\n   */\n  get location(): ElementRef { return unimplemented(); }\n\n  /**\n   * The injector on which the component instance exists.\n   */\n  get injector(): Injector { return unimplemented(); }\n\n  /**\n   * The instance of the Component.\n   */\n  get instance(): C { return unimplemented(); };\n\n  /**\n   * The {@link ViewRef} of the Host View of this Component instance.\n   */\n  get hostView(): ViewRef { return unimplemented(); };\n\n  /**\n   * The {@link ChangeDetectorRef} of the Component instance.\n   */\n  get changeDetectorRef(): ChangeDetectorRef { return unimplemented(); }\n\n  /**\n   * The component type.\n   */\n  get componentType(): Type { return unimplemented(); }\n\n  /**\n   * Destroys the component instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the component is destroyed.\n   */\n  abstract onDestroy(callback: Function): void;\n}\n\nexport class ComponentRef_<C> extends ComponentRef<C> {\n  constructor(private _hostElement: AppElement, private _componentType: Type) { super(); }\n  get location(): ElementRef { return this._hostElement.elementRef; }\n  get injector(): Injector { return this._hostElement.injector; }\n  get instance(): C { return this._hostElement.component; };\n  get hostView(): ViewRef { return this._hostElement.parentView.ref; };\n  get changeDetectorRef(): ChangeDetectorRef { return this._hostElement.parentView.ref; };\n  get componentType(): Type { return this._componentType; }\n\n  destroy(): void { this._hostElement.parentView.destroy(); }\n  onDestroy(callback: Function): void { this.hostView.onDestroy(callback); }\n}\n\n\n/**\n * @experimental\n * @ts2dart_const\n */\nconst EMPTY_CONTEXT = /*@ts2dart_const*/ new Object();\nexport class ComponentFactory<C> {\n  constructor(\n      public selector: string, private _viewFactory: Function, private _componentType: Type) {}\n\n  get componentType(): Type { return this._componentType; }\n\n  /**\n   * Creates a new component.\n   */\n  create(\n      injector: Injector, projectableNodes: any[][] = null,\n      rootSelectorOrNode: string|any = null): ComponentRef<C> {\n    var vu: ViewUtils = injector.get(ViewUtils);\n    if (isBlank(projectableNodes)) {\n      projectableNodes = [];\n    }\n    // Note: Host views don't need a declarationAppElement!\n    var hostView = this._viewFactory(vu, injector, null);\n    var hostElement = hostView.create(EMPTY_CONTEXT, projectableNodes, rootSelectorOrNode);\n    return new ComponentRef_<C>(hostElement, this._componentType);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}