{"version":3,"file":"async.js","sourceRoot":"","sources":["../../../../modules/@angular/core/testing/async.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;AACH,eAAsB,EAAY;IAChC,MAAM,CAAC,cAAM,OAAA,IAAI,OAAO,CAAO,UAAC,cAAc,EAAE,YAAY;QACnD,IAAI,iBAAiB,GAAI,IAA8B,CAAC,mBAAmB,CAAC,CAAC;QAC7E,IAAI,YAAY,GAAG,IAAI,iBAAiB,CAAC,cAAc,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;QAC/E,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/C,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC,CAAC,EALI,CAKJ,CAAC;AACZ,CAAC;AAPe,aAAK,QAOpB,CAAA","sourcesContent":["/**\n * Wraps a test function in an asynchronous test zone. The test will automatically\n * complete when all asynchronous calls within this zone are done. Can be used\n * to wrap an {@link inject} call.\n *\n * Example:\n *\n * ```\n * it('...', async(inject([AClass], (object) => {\n *   object.doSomething.then(() => {\n *     expect(...);\n *   })\n * });\n * ```\n */\nexport function async(fn: Function): Function {\n  return () => new Promise<void>((finishCallback, failCallback) => {\n           var AsyncTestZoneSpec = (Zone as any /** TODO #9100 */)['AsyncTestZoneSpec'];\n           var testZoneSpec = new AsyncTestZoneSpec(finishCallback, failCallback, 'test');\n           var testZone = Zone.current.fork(testZoneSpec);\n           return testZone.run(fn);\n         });\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}