{"version":3,"file":"matchers.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser/testing/matchers.ts"],"names":[],"mappings":"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","sourcesContent":["import {getDOM} from '../src/dom/dom_adapter';\nimport {StringMapWrapper} from '../src/facade/collection';\nimport {global, isString} from '../src/facade/lang';\n\n\n/**\n * Jasmine matchers that check Angular specific conditions.\n */\nexport interface NgMatchers extends jasmine.Matchers {\n  /**\n   * Expect the value to be a `Promise`.\n   *\n   * ## Example\n   *\n   * {@example testing/ts/matchers.ts region='toBePromise'}\n   */\n  toBePromise(): boolean;\n\n  /**\n   * Expect the value to be an instance of a class.\n   *\n   * ## Example\n   *\n   * {@example testing/ts/matchers.ts region='toBeAnInstanceOf'}\n   */\n  toBeAnInstanceOf(expected: any): boolean;\n\n  /**\n   * Expect the element to have exactly the given text.\n   *\n   * ## Example\n   *\n   * {@example testing/ts/matchers.ts region='toHaveText'}\n   */\n  toHaveText(expected: any): boolean;\n\n  /**\n   * Expect the element to have the given CSS class.\n   *\n   * ## Example\n   *\n   * {@example testing/ts/matchers.ts region='toHaveCssClass'}\n   */\n  toHaveCssClass(expected: any): boolean;\n\n  /**\n   * Expect the element to have the given CSS styles.\n   *\n   * ## Example\n   *\n   * {@example testing/ts/matchers.ts region='toHaveCssStyle'}\n   */\n  toHaveCssStyle(expected: any): boolean;\n\n  /**\n   * Expect a class to implement the interface of the given class.\n   *\n   * ## Example\n   *\n   * {@example testing/ts/matchers.ts region='toImplement'}\n   */\n  toImplement(expected: any): boolean;\n\n  /**\n   * Expect an exception to contain the given error text.\n   *\n   * ## Example\n   *\n   * {@example testing/ts/matchers.ts region='toContainError'}\n   */\n  toContainError(expected: any): boolean;\n\n  /**\n   * Expect a function to throw an error with the given error text when executed.\n   *\n   * ## Example\n   *\n   * {@example testing/ts/matchers.ts region='toThrowErrorWith'}\n   */\n  toThrowErrorWith(expectedMessage: any): boolean;\n\n  /**\n   * Expect a string to match the given regular expression.\n   *\n   * ## Example\n   *\n   * {@example testing/ts/matchers.ts region='toMatchPattern'}\n   */\n  toMatchPattern(expectedMessage: any): boolean;\n\n  /**\n   * Invert the matchers.\n   */\n  not: NgMatchers;\n}\n\nvar _global = <any>(typeof window === 'undefined' ? global : window);\n\n/**\n * Jasmine matching function with Angular matchers mixed in.\n *\n * ## Example\n *\n * {@example testing/ts/matchers.ts region='toHaveText'}\n */\nexport var expect: (actual: any) => NgMatchers = <any>_global.expect;\n\n\n// Some Map polyfills don't polyfill Map.toString correctly, which\n// gives us bad error messages in tests.\n// The only way to do this in Jasmine is to monkey patch a method\n// to the object :-(\n(Map as any /** TODO #???? */).prototype['jasmineToString'] = function() {\n  var m = this;\n  if (!m) {\n    return '' + m;\n  }\n  var res: any[] /** TODO #???? */ = [];\n  m.forEach((v: any /** TODO #???? */, k: any /** TODO #???? */) => { res.push(`${k}:${v}`); });\n  return `{ ${res.join(',')} }`;\n};\n\n_global.beforeEach(function() {\n  jasmine.addMatchers({\n    // Custom handler for Map as Jasmine does not support it yet\n    toEqual: function(util, customEqualityTesters) {\n      return {\n        compare: function(actual: any /** TODO #???? */, expected: any /** TODO #???? */) {\n          return {pass: util.equals(actual, expected, [compareMap])};\n        }\n      };\n\n      function compareMap(actual: any /** TODO #???? */, expected: any /** TODO #???? */) {\n        if (actual instanceof Map) {\n          var pass = actual.size === expected.size;\n          if (pass) {\n            actual.forEach((v: any /** TODO #???? */, k: any /** TODO #???? */) => {\n              pass = pass && util.equals(v, expected.get(k));\n            });\n          }\n          return pass;\n        } else {\n          return undefined;\n        }\n      }\n    },\n\n    toBePromise: function() {\n      return {\n        compare: function(actual: any /** TODO #???? */, expectedClass: any /** TODO #???? */) {\n          var pass = typeof actual === 'object' && typeof actual.then === 'function';\n          return {pass: pass, get message() { return 'Expected ' + actual + ' to be a promise'; }};\n        }\n      };\n    },\n\n    toBeAnInstanceOf: function() {\n      return {\n        compare: function(actual: any /** TODO #???? */, expectedClass: any /** TODO #???? */) {\n          var pass = typeof actual === 'object' && actual instanceof expectedClass;\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be an instance of ' + expectedClass;\n            }\n          };\n        }\n      };\n    },\n\n    toHaveText: function() {\n      return {\n        compare: function(actual: any /** TODO #???? */, expectedText: any /** TODO #???? */) {\n          var actualText = elementText(actual);\n          return {\n            pass: actualText == expectedText,\n            get message() { return 'Expected ' + actualText + ' to be equal to ' + expectedText; }\n          };\n        }\n      };\n    },\n\n    toHaveCssClass: function() {\n      return {compare: buildError(false), negativeCompare: buildError(true)};\n\n      function buildError(isNot: any /** TODO #???? */) {\n        return function(actual: any /** TODO #???? */, className: any /** TODO #???? */) {\n          return {\n            pass: getDOM().hasClass(actual, className) == !isNot,\n            get message() {\n              return `Expected ${actual.outerHTML} ${isNot ? 'not ' : ''}to contain the CSS class \"${className}\"`;\n            }\n          };\n        };\n      }\n    },\n\n    toHaveCssStyle: function() {\n      return {\n        compare: function(actual: any /** TODO #???? */, styles: any /** TODO #???? */) {\n          var allPassed: any /** TODO #???? */;\n          if (isString(styles)) {\n            allPassed = getDOM().hasStyle(actual, styles);\n          } else {\n            allPassed = !StringMapWrapper.isEmpty(styles);\n            StringMapWrapper.forEach(\n                styles, (style: any /** TODO #???? */, prop: any /** TODO #???? */) => {\n                  allPassed = allPassed && getDOM().hasStyle(actual, prop, style);\n                });\n          }\n\n          return {\n            pass: allPassed,\n            get message() {\n              var expectedValueStr = isString(styles) ? styles : JSON.stringify(styles);\n              return `Expected ${actual.outerHTML} ${!allPassed ? ' ' : 'not '}to contain the\n                      CSS ${isString(styles) ? 'property' : 'styles'} \"${expectedValueStr}\"`;\n            }\n          };\n        }\n      };\n    },\n\n    toContainError: function() {\n      return {\n        compare: function(actual: any /** TODO #???? */, expectedText: any /** TODO #???? */) {\n          var errorMessage = actual.toString();\n          return {\n            pass: errorMessage.indexOf(expectedText) > -1,\n            get message() { return 'Expected ' + errorMessage + ' to contain ' + expectedText; }\n          };\n        }\n      };\n    },\n\n    toThrowErrorWith: function() {\n      return {\n        compare: function(actual: any /** TODO #???? */, expectedText: any /** TODO #???? */) {\n          try {\n            actual();\n            return {\n              pass: false,\n              get message() { return 'Was expected to throw, but did not throw'; }\n            };\n          } catch (e) {\n            var errorMessage = e.toString();\n            return {\n              pass: errorMessage.indexOf(expectedText) > -1,\n              get message() { return 'Expected ' + errorMessage + ' to contain ' + expectedText; }\n            };\n          }\n        }\n      };\n    },\n\n    toMatchPattern() {\n      return {compare: buildError(false), negativeCompare: buildError(true)};\n\n      function buildError(isNot: any /** TODO #???? */) {\n        return function(actual: any /** TODO #???? */, regex: any /** TODO #???? */) {\n          return {\n            pass: regex.test(actual) == !isNot,\n            get message() {\n              return `Expected ${actual} ${isNot ? 'not ' : ''}to match ${regex.toString()}`;\n            }\n          };\n        };\n      }\n    },\n\n    toImplement: function() {\n      return {\n        compare: function(\n            actualObject: any /** TODO #???? */, expectedInterface: any /** TODO #???? */) {\n          var objProps = Object.keys(actualObject.constructor.prototype);\n          var intProps = Object.keys(expectedInterface.prototype);\n\n          var missedMethods: any[] /** TODO #???? */ = [];\n          intProps.forEach((k) => {\n            if (!actualObject.constructor.prototype[k]) missedMethods.push(k);\n          });\n\n          return {\n            pass: missedMethods.length == 0,\n            get message() {\n              return 'Expected ' + actualObject + ' to have the following methods: ' +\n                  missedMethods.join(', ');\n            }\n          };\n        }\n      };\n    }\n  });\n});\n\nfunction elementText(n: any /** TODO #???? */): any /** TODO #???? */ {\n  var hasNodes = (n: any /** TODO #???? */) => {\n    var children = getDOM().childNodes(n);\n    return children && children.length > 0;\n  };\n\n  if (n instanceof Array) {\n    return n.map(elementText).join('');\n  }\n\n  if (getDOM().isCommentNode(n)) {\n    return '';\n  }\n\n  if (getDOM().isElementNode(n) && getDOM().tagName(n) == 'CONTENT') {\n    return elementText(Array.prototype.slice.apply(getDOM().getDistributedNodes(n)));\n  }\n\n  if (getDOM().hasShadowRoot(n)) {\n    return elementText(getDOM().childNodesAsList(getDOM().getShadowRoot(n)));\n  }\n\n  if (hasNodes(n)) {\n    return elementText(getDOM().childNodesAsList(n));\n  }\n\n  return getDOM().getText(n);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}