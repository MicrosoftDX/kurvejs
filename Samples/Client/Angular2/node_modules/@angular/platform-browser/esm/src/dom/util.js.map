{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/dom/util.ts"],"names":[],"mappings":"OAAO,EAAC,aAAa,EAAC,MAAM,gBAAgB;AAE5C,IAAI,iBAAiB,GAAG,UAAU,CAAC;AACnC,IAAI,gBAAgB,GAAG,WAAW,CAAC;AAGnC,oCAAoC,KAAa;IAC/C,MAAM,CAAC,aAAa,CAAC,gBAAgB,CACjC,KAAK,EAAE,iBAAiB,EAAE,CAAC,CAAM,CAAC,iBAAiB,OAAO,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACpG,CAAC;AAED,oCAAoC,KAAa;IAC/C,MAAM,CAAC,aAAa,CAAC,gBAAgB,CACjC,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAM,CAAC,iBAAiB,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7F,CAAC","sourcesContent":["import {StringWrapper} from '../facade/lang';\n\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nvar DASH_CASE_REGEXP = /-([a-z])/g;\n\n\nexport function camelCaseToDashCase(input: string): string {\n  return StringWrapper.replaceAllMapped(\n      input, CAMEL_CASE_REGEXP, (m: any /** TODO #9100 */) => { return '-' + m[1].toLowerCase(); });\n}\n\nexport function dashCaseToCamelCase(input: string): string {\n  return StringWrapper.replaceAllMapped(\n      input, DASH_CASE_REGEXP, (m: any /** TODO #9100 */) => { return m[1].toUpperCase(); });\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}