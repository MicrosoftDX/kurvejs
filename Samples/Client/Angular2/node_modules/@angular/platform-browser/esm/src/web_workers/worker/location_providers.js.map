{"version":3,"file":"location_providers.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/platform-browser/src/web_workers/worker/location_providers.ts"],"names":[],"mappings":"OAAO,EAAC,gBAAgB,EAAC,MAAM,iBAAiB;OACzC,EAAC,eAAe,EAAE,MAAM,EAAC,MAAM,eAAe;OAE9C,EAAC,yBAAyB,EAAC,MAAM,qBAAqB;AAG7D;;;;GAIG;AACH,OAAO,MAAM,6BAA6B,GAAG;IAC3C,EAAC,OAAO,EAAE,gBAAgB,EAAE,QAAQ,EAAE,yBAAyB,EAAC,EAAE;QAChE,OAAO,EAAE,eAAe;QACxB,UAAU,EAAE,gBAAgB;QAC5B,KAAK,EAAE,IAAI;QACX,IAAI,EAAE,CAAC,gBAAgB,EAAE,MAAM,CAAC;KACjC;CACF,CAAC;AAEF,0BAA0B,gBAA2C,EAAE,IAAY;IAEjF,MAAM,CAAC,QAAQ,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC","sourcesContent":["import {PlatformLocation} from '@angular/common';\nimport {APP_INITIALIZER, NgZone} from '@angular/core';\n\nimport {WebWorkerPlatformLocation} from './platform_location';\n\n\n/**\n * Those providers should be added when the router is used in a worker context in addition to the\n * {@link ROUTER_PROVIDERS} and after them.\n * @experimental\n */\nexport const WORKER_APP_LOCATION_PROVIDERS = [\n  {provide: PlatformLocation, useClass: WebWorkerPlatformLocation}, {\n    provide: APP_INITIALIZER,\n    useFactory: appInitFnFactory,\n    multi: true,\n    deps: [PlatformLocation, NgZone]\n  }\n];\n\nfunction appInitFnFactory(platformLocation: WebWorkerPlatformLocation, zone: NgZone): () =>\n    Promise<boolean> {\n  return () => { return zone.runGuarded(() => platformLocation.init()); };\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}