{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/web_workers/shared/serializer.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable, RenderComponentType, ViewEncapsulation} from '@angular/core';\n\nimport {VIEW_ENCAPSULATION_VALUES} from '../../../core_private';\nimport {Map, MapWrapper, StringMapWrapper} from '../../facade/collection';\nimport {BaseException} from '../../facade/exceptions';\nimport {Type, isArray, isPresent, serializeEnum} from '../../facade/lang';\n\nimport {RenderStore} from './render_store';\nimport {LocationType} from './serialized_types';\n\n\n// PRIMITIVE is any type that does not need to be serialized (string, number, boolean)\n// We set it to String so that it is considered a Type.\n/**\n * @experimental\n */\nexport const PRIMITIVE: Type = String;\nexport class Serializer {\n  constructor(private _renderStore: RenderStore) {}\n\n  serialize(obj: any, type: any): Object {\n    if (!isPresent(obj)) {\n      return null;\n    }\n    if (isArray(obj)) {\n      return (<any[]>obj).map(v => this.serialize(v, type));\n    }\n    if (type == PRIMITIVE) {\n      return obj;\n    }\n    if (type == RenderStoreObject) {\n      return this._renderStore.serialize(obj);\n    } else if (type === RenderComponentType) {\n      return this._serializeRenderComponentType(obj);\n    } else if (type === ViewEncapsulation) {\n      return serializeEnum(obj);\n    } else if (type === LocationType) {\n      return this._serializeLocation(obj);\n    } else {\n      throw new BaseException('No serializer for ' + type.toString());\n    }\n  }\n\n  deserialize(map: any, type: any, data?: any): any {\n    if (!isPresent(map)) {\n      return null;\n    }\n    if (isArray(map)) {\n      var obj: any[] = [];\n      (<any[]>map).forEach(val => obj.push(this.deserialize(val, type, data)));\n      return obj;\n    }\n    if (type == PRIMITIVE) {\n      return map;\n    }\n\n    if (type == RenderStoreObject) {\n      return this._renderStore.deserialize(map);\n    } else if (type === RenderComponentType) {\n      return this._deserializeRenderComponentType(map);\n    } else if (type === ViewEncapsulation) {\n      return VIEW_ENCAPSULATION_VALUES[map];\n    } else if (type === LocationType) {\n      return this._deserializeLocation(map);\n    } else {\n      throw new BaseException('No deserializer for ' + type.toString());\n    }\n  }\n\n  private _serializeLocation(loc: LocationType): Object {\n    return {\n      'href': loc.href,\n      'protocol': loc.protocol,\n      'host': loc.host,\n      'hostname': loc.hostname,\n      'port': loc.port,\n      'pathname': loc.pathname,\n      'search': loc.search,\n      'hash': loc.hash,\n      'origin': loc.origin\n    };\n  }\n\n  private _deserializeLocation(loc: {[key: string]: any}): LocationType {\n    return new LocationType(\n        loc['href'], loc['protocol'], loc['host'], loc['hostname'], loc['port'], loc['pathname'],\n        loc['search'], loc['hash'], loc['origin']);\n  }\n\n  private _serializeRenderComponentType(obj: RenderComponentType): Object {\n    return {\n      'id': obj.id,\n      'templateUrl': obj.templateUrl,\n      'slotCount': obj.slotCount,\n      'encapsulation': this.serialize(obj.encapsulation, ViewEncapsulation),\n      'styles': this.serialize(obj.styles, PRIMITIVE)\n    };\n  }\n\n  private _deserializeRenderComponentType(map: {[key: string]: any}): RenderComponentType {\n    return new RenderComponentType(\n        map['id'], map['templateUrl'], map['slotCount'],\n        this.deserialize(map['encapsulation'], ViewEncapsulation),\n        this.deserialize(map['styles'], PRIMITIVE));\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: RenderStore, },\n];\n}\n\n\nexport class RenderStoreObject {}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}