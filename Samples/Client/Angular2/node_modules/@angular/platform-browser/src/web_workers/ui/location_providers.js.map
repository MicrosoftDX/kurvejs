{"version":3,"file":"location_providers.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/web_workers/ui/location_providers.ts"],"names":[],"mappings":";AAAA,qBAAgD,eAAe,CAAC,CAAA;AAEhE,0CAAsC,kDAAkD,CAAC,CAAA;AAEzF,kCAA2C,qBAAqB,CAAC,CAAA;AAGjE;;;;GAIG;AACU,oCAA4B,GAAG;IAC1C,gDAA4B,EAAE,mDAAuB;IACrD,EAAC,OAAO,EAAE,sBAAe,EAAE,UAAU,EAAE,cAAc,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,eAAQ,CAAC,EAAC;CACtF,CAAC;AAEF,wBAAwB,QAAkB;IACxC,MAAM,CAAC;QACL,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,aAAM,CAAC,CAAC;QAEhC,IAAI,CAAC,UAAU,CAAC,cAAM,OAAA,QAAQ,CAAC,GAAG,CAAC,gDAA4B,CAAC,CAAC,KAAK,EAAE,EAAlD,CAAkD,CAAC,CAAC;IAC5E,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import {APP_INITIALIZER, Injector, NgZone} from '@angular/core';\n\nimport {BrowserPlatformLocation} from '../../browser/location/browser_platform_location';\n\nimport {MessageBasedPlatformLocation} from './platform_location';\n\n\n/**\n * A list of {@link Provider}s. To use the router in a Worker enabled application you must\n * include these providers when setting up the render thread.\n * @experimental\n */\nexport const WORKER_UI_LOCATION_PROVIDERS = [\n  MessageBasedPlatformLocation, BrowserPlatformLocation,\n  {provide: APP_INITIALIZER, useFactory: initUiLocation, multi: true, deps: [Injector]}\n];\n\nfunction initUiLocation(injector: Injector): () => void {\n  return () => {\n    let zone = injector.get(NgZone);\n\n    zone.runGuarded(() => injector.get(MessageBasedPlatformLocation).start());\n  };\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}