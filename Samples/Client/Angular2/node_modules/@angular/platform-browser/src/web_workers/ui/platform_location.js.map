{"version":3,"file":"platform_location.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/web_workers/ui/platform_location.ts"],"names":[],"mappings":"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","sourcesContent":["import {UrlChangeListener} from '@angular/common';\nimport {Injectable} from '@angular/core';\n\nimport {BrowserPlatformLocation} from '../../browser/location/browser_platform_location';\nimport {EventEmitter, ObservableWrapper, PromiseWrapper} from '../../facade/async';\nimport {FunctionWrapper} from '../../facade/lang';\nimport {MessageBus} from '../shared/message_bus';\nimport {ROUTER_CHANNEL} from '../shared/messaging_api';\nimport {LocationType} from '../shared/serialized_types';\nimport {PRIMITIVE, Serializer} from '../shared/serializer';\nimport {ServiceMessageBroker, ServiceMessageBrokerFactory} from '../shared/service_message_broker';\nexport class MessageBasedPlatformLocation {\n  private _channelSink: EventEmitter<Object>;\n  private _broker: ServiceMessageBroker;\n\n  constructor(\n      private _brokerFactory: ServiceMessageBrokerFactory,\n      private _platformLocation: BrowserPlatformLocation, bus: MessageBus,\n      private _serializer: Serializer) {\n    this._platformLocation.onPopState(\n        <UrlChangeListener>FunctionWrapper.bind(this._sendUrlChangeEvent, this));\n    this._platformLocation.onHashChange(\n        <UrlChangeListener>FunctionWrapper.bind(this._sendUrlChangeEvent, this));\n    this._broker = this._brokerFactory.createMessageBroker(ROUTER_CHANNEL);\n    this._channelSink = bus.to(ROUTER_CHANNEL);\n  }\n\n  start(): void {\n    this._broker.registerMethod(\n        'getLocation', null, FunctionWrapper.bind(this._getLocation, this), LocationType);\n    this._broker.registerMethod(\n        'setPathname', [PRIMITIVE], FunctionWrapper.bind(this._setPathname, this));\n    this._broker.registerMethod(\n        'pushState', [PRIMITIVE, PRIMITIVE, PRIMITIVE],\n        FunctionWrapper.bind(this._platformLocation.pushState, this._platformLocation));\n    this._broker.registerMethod(\n        'replaceState', [PRIMITIVE, PRIMITIVE, PRIMITIVE],\n        FunctionWrapper.bind(this._platformLocation.replaceState, this._platformLocation));\n    this._broker.registerMethod(\n        'forward', null,\n        FunctionWrapper.bind(this._platformLocation.forward, this._platformLocation));\n    this._broker.registerMethod(\n        'back', null, FunctionWrapper.bind(this._platformLocation.back, this._platformLocation));\n  }\n\n  private _getLocation(): Promise<Location> {\n    return PromiseWrapper.resolve(this._platformLocation.location);\n  }\n\n\n  private _sendUrlChangeEvent(e: Event): void {\n    let loc = this._serializer.serialize(this._platformLocation.location, LocationType);\n    let serializedEvent = {'type': e.type};\n    ObservableWrapper.callEmit(this._channelSink, {'event': serializedEvent, 'location': loc});\n  }\n\n  private _setPathname(pathname: string): void { this._platformLocation.pathname = pathname; }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ServiceMessageBrokerFactory, },\n{type: BrowserPlatformLocation, },\n{type: MessageBus, },\n{type: Serializer, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}