{"version":3,"file":"browser.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser/src/browser.ts"],"names":[],"mappings":"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","sourcesContent":["import {FORM_PROVIDERS, PlatformLocation} from '@angular/common';\nimport {APPLICATION_COMMON_PROVIDERS, ExceptionHandler, OpaqueToken, PLATFORM_COMMON_PROVIDERS, PLATFORM_INITIALIZER, PlatformRef, ReflectiveInjector, RootRenderer, Testability, assertPlatform, createPlatform, getPlatform} from '@angular/core';\n\nimport {AnimationDriver, NoOpAnimationDriver, SanitizationService, wtfInit} from '../core_private';\nimport {WebAnimationsDriver} from '../src/dom/web_animations_driver';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nimport {BrowserGetTestability} from './browser/testability';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {getDOM} from './dom/dom_adapter';\nimport {DomRootRenderer, DomRootRenderer_} from './dom/dom_renderer';\nimport {DOCUMENT} from './dom/dom_tokens';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {isBlank} from './facade/lang';\nimport {DomSanitizationService, DomSanitizationServiceImpl} from './security/dom_sanitization_service';\n\n\nconst BROWSER_PLATFORM_MARKER = new OpaqueToken('BrowserPlatformMarker');\n\n/**\n * A set of providers to initialize the Angular platform in a web browser.\n *\n * Used automatically by `bootstrap`, or can be passed to {@link platform}.\n */\nexport const BROWSER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: BROWSER_PLATFORM_MARKER, useValue: true}, PLATFORM_COMMON_PROVIDERS,\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation}\n];\n\nexport const BROWSER_SANITIZATION_PROVIDERS: Array<any> = [\n  {provide: SanitizationService, useExisting: DomSanitizationService},\n  {provide: DomSanitizationService, useClass: DomSanitizationServiceImpl},\n];\n\n/**\n * A set of providers to initialize an Angular application in a web browser.\n *\n * Used automatically by `bootstrap`, or can be passed to {@link PlatformRef.application}.\n */\nexport const BROWSER_APP_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  APPLICATION_COMMON_PROVIDERS, FORM_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS,\n  {provide: ExceptionHandler, useFactory: _exceptionHandler, deps: []},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n  {provide: DomRootRenderer, useClass: DomRootRenderer_},\n  {provide: RootRenderer, useExisting: DomRootRenderer},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver}, DomSharedStylesHost,\n  Testability, EventManager, ELEMENT_PROBE_PROVIDERS\n];\n\nexport function browserPlatform(): PlatformRef {\n  if (isBlank(getPlatform())) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(BROWSER_PLATFORM_PROVIDERS));\n  }\n  return assertPlatform(BROWSER_PLATFORM_MARKER);\n}\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  wtfInit();\n  BrowserGetTestability.init();\n}\n\nfunction _exceptionHandler(): ExceptionHandler {\n  return new ExceptionHandler(getDOM());\n}\n\nfunction _document(): any {\n  return getDOM().defaultDoc();\n}\n\nfunction _resolveDefaultAnimationDriver(): AnimationDriver {\n  if (getDOM().supportsWebAnimation()) {\n    return new WebAnimationsDriver();\n  }\n  return new NoOpAnimationDriver();\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}