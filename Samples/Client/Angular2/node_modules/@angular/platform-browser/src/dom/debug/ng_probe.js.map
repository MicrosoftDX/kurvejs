{"version":3,"file":"ng_probe.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/dom/debug/ng_probe.ts"],"names":[],"mappings":";AAAA,qBAAuF,eAAe,CAAC,CAAA;AAEvG,6BAAmC,uBAAuB,CAAC,CAAA;AAC3D,4BAAqB,gBAAgB,CAAC,CAAA;AACtC,6BAA8B,iBAAiB,CAAC,CAAA;AAGhD,IAAM,WAAW,GAAG;IAClB,gBAAgB,EAAE,qBAAc;IAChC,QAAQ,EAAE,aAAM;CACjB,CAAC;AAEF,IAAM,mBAAmB,GAAG,UAAU,CAAC;AACvC,IAAM,uBAAuB,GAAG,eAAe,CAAC;AAEhD;;;;GAIG;AACH,8BAAqC,OAAY,CAAC,iBAAiB;IACjE,MAAM,CAAC,mBAAY,CAAC,OAAO,CAAC,CAAC;AAC/B,CAAC;AAFe,4BAAoB,uBAEnC,CAAA;AAED,wCAAwC,YAAiB,CAAC,iBAAiB;IACzE,EAAE,CAAC,CAAC,gBAAS,EAAE,CAAC,CAAC,CAAC;QAChB,MAAM,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;IAC3C,CAAC;IACD,MAAM,CAAC,YAAY,CAAC;AACtB,CAAC;AAED,6BAA6B,YAAiB,CAAC,iBAAiB;IAC9D,oBAAM,EAAE,CAAC,YAAY,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;IACjE,oBAAM,EAAE,CAAC,YAAY,CAAC,uBAAuB,EAAE,WAAW,CAAC,CAAC;IAC5D,MAAM,CAAC,IAAI,mCAAoB,CAAC,YAAY,CAAC,CAAC;AAChD,CAAC;AAED;;GAEG;AACU,+BAAuB,GAChC,CAAC,EAAC,OAAO,EAAE,mBAAY,EAAE,UAAU,EAAE,8BAA8B,EAAE,IAAI,EAAE,CAAC,8BAAe,CAAC,EAAC,CAAC,CAAC;AAEtF,yCAAiC,GAC1C,CAAC,EAAC,OAAO,EAAE,mBAAY,EAAE,UAAU,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,8BAAe,CAAC,EAAC,CAAC,CAAC","sourcesContent":["import {ApplicationRef, DebugNode, NgZone, RootRenderer, getDebugNode, isDevMode} from '@angular/core';\n\nimport {DebugDomRootRenderer} from '../../../core_private';\nimport {getDOM} from '../dom_adapter';\nimport {DomRootRenderer} from '../dom_renderer';\n\n\nconst CORE_TOKENS = {\n  'ApplicationRef': ApplicationRef,\n  'NgZone': NgZone\n};\n\nconst INSPECT_GLOBAL_NAME = 'ng.probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'ng.coreTokens';\n\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nexport function inspectNativeElement(element: any /** TODO #9100 */): DebugNode {\n  return getDebugNode(element);\n}\n\nfunction _createConditionalRootRenderer(rootRenderer: any /** TODO #9100 */) {\n  if (isDevMode()) {\n    return _createRootRenderer(rootRenderer);\n  }\n  return rootRenderer;\n}\n\nfunction _createRootRenderer(rootRenderer: any /** TODO #9100 */) {\n  getDOM().setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n  getDOM().setGlobalVar(CORE_TOKENS_GLOBAL_NAME, CORE_TOKENS);\n  return new DebugDomRootRenderer(rootRenderer);\n}\n\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nexport const ELEMENT_PROBE_PROVIDERS: any[] =\n    [{provide: RootRenderer, useFactory: _createConditionalRootRenderer, deps: [DomRootRenderer]}];\n\nexport const ELEMENT_PROBE_PROVIDERS_PROD_MODE: any[] =\n    [{provide: RootRenderer, useFactory: _createRootRenderer, deps: [DomRootRenderer]}];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}