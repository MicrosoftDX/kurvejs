{"version":3,"file":"worker_render.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser/src/worker_render.ts"],"names":[],"mappings":"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","sourcesContent":["import {APPLICATION_COMMON_PROVIDERS, APP_INITIALIZER, ApplicationRef, ExceptionHandler, Injectable, Injector, NgZone, OpaqueToken, PLATFORM_COMMON_PROVIDERS, PLATFORM_INITIALIZER, PlatformRef, ReflectiveInjector, RootRenderer, Testability, assertPlatform, createPlatform, getPlatform} from '@angular/core';\n\nimport {AnimationDriver, NoOpAnimationDriver, wtfInit} from '../core_private';\n\nimport {BROWSER_SANITIZATION_PROVIDERS} from './browser';\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserGetTestability} from './browser/testability';\nimport {getDOM} from './dom/dom_adapter';\nimport {DomRootRenderer, DomRootRenderer_} from './dom/dom_renderer';\nimport {DOCUMENT} from './dom/dom_tokens';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {BaseException} from './facade/exceptions';\nimport {isBlank} from './facade/lang';\nimport {ON_WEB_WORKER} from './web_workers/shared/api';\nimport {ClientMessageBrokerFactory, ClientMessageBrokerFactory_} from './web_workers/shared/client_message_broker';\nimport {MessageBus} from './web_workers/shared/message_bus';\nimport {PostMessageBus, PostMessageBusSink, PostMessageBusSource} from './web_workers/shared/post_message_bus';\nimport {RenderStore} from './web_workers/shared/render_store';\nimport {Serializer} from './web_workers/shared/serializer';\nimport {ServiceMessageBrokerFactory, ServiceMessageBrokerFactory_} from './web_workers/shared/service_message_broker';\nimport {MessageBasedRenderer} from './web_workers/ui/renderer';\n\nconst WORKER_RENDER_PLATFORM_MARKER = new OpaqueToken('WorkerRenderPlatformMarker');\nexport class WebWorkerInstance {\n  public worker: Worker;\n  public bus: MessageBus;\n\n  /** @internal */\n  public init(worker: Worker, bus: MessageBus) {\n    this.worker = worker;\n    this.bus = bus;\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n}\n\n/**\n * @experimental\n */\nexport const WORKER_SCRIPT: OpaqueToken = new OpaqueToken('WebWorkerScript');\n\n/**\n * A multiple providers used to automatically call the `start()` method after the service is\n * created.\n *\n * TODO(vicb): create an interface for startable services to implement\n * @experimental\n */\nexport const WORKER_UI_STARTABLE_MESSAGING_SERVICE =\n    new OpaqueToken('WorkerRenderStartableMsgService');\n\n/**\n * @experimental\n */\nexport const WORKER_UI_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  PLATFORM_COMMON_PROVIDERS, {provide: WORKER_RENDER_PLATFORM_MARKER, useValue: true},\n  {provide: PLATFORM_INITIALIZER, useValue: initWebWorkerRenderPlatform, multi: true}\n];\n\n/**\n * @experimental\n */\nexport const WORKER_UI_APPLICATION_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  APPLICATION_COMMON_PROVIDERS,\n  MessageBasedRenderer,\n  {provide: WORKER_UI_STARTABLE_MESSAGING_SERVICE, useExisting: MessageBasedRenderer, multi: true},\n  BROWSER_SANITIZATION_PROVIDERS,\n  {provide: ExceptionHandler, useFactory: _exceptionHandler, deps: []},\n  {provide: DOCUMENT, useFactory: _document, deps: []},\n  // TODO(jteplitz602): Investigate if we definitely need EVENT_MANAGER on the render thread\n  // #5298\n  {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n  {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n  {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n  {provide: DomRootRenderer, useClass: DomRootRenderer_},\n  {provide: RootRenderer, useExisting: DomRootRenderer},\n  {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n  {provide: ServiceMessageBrokerFactory, useClass: ServiceMessageBrokerFactory_},\n  {provide: ClientMessageBrokerFactory, useClass: ClientMessageBrokerFactory_},\n  {provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver},\n  Serializer,\n  {provide: ON_WEB_WORKER, useValue: false},\n  RenderStore,\n  DomSharedStylesHost,\n  Testability,\n  EventManager,\n  WebWorkerInstance,\n  {provide: APP_INITIALIZER, useFactory: initWebWorkerAppFn, multi: true, deps: [Injector]},\n  {provide: MessageBus, useFactory: messageBusFactory, deps: [WebWorkerInstance]}\n];\n\nfunction initializeGenericWorkerRenderer(injector: Injector) {\n  var bus = injector.get(MessageBus);\n  let zone = injector.get(NgZone);\n  bus.attachToZone(zone);\n\n  // initialize message services after the bus has been created\n  let services = injector.get(WORKER_UI_STARTABLE_MESSAGING_SERVICE);\n  zone.runGuarded(() => { services.forEach((svc: any /** TODO #9100 */) => { svc.start(); }); });\n}\n\nfunction messageBusFactory(instance: WebWorkerInstance): MessageBus {\n  return instance.bus;\n}\n\nfunction initWebWorkerRenderPlatform(): void {\n  BrowserDomAdapter.makeCurrent();\n  wtfInit();\n  BrowserGetTestability.init();\n}\n\n/**\n * @experimental\n */\nexport function workerUiPlatform(): PlatformRef {\n  if (isBlank(getPlatform())) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(WORKER_UI_PLATFORM_PROVIDERS));\n  }\n  return assertPlatform(WORKER_RENDER_PLATFORM_MARKER);\n}\n\nfunction _exceptionHandler(): ExceptionHandler {\n  return new ExceptionHandler(getDOM());\n}\n\nfunction _document(): any {\n  return getDOM().defaultDoc();\n}\n\nfunction initWebWorkerAppFn(injector: Injector): () => void {\n  return () => {\n    var scriptUri: string;\n    try {\n      scriptUri = injector.get(WORKER_SCRIPT);\n    } catch (e) {\n      throw new BaseException(\n          'You must provide your WebWorker\\'s initialization script with the WORKER_SCRIPT token');\n    }\n\n    let instance = injector.get(WebWorkerInstance);\n    spawnWebWorker(scriptUri, instance);\n\n    initializeGenericWorkerRenderer(injector);\n  };\n}\n\n/**\n * Spawns a new class and initializes the WebWorkerInstance\n */\nfunction spawnWebWorker(uri: string, instance: WebWorkerInstance): void {\n  var webWorker: Worker = new Worker(uri);\n  var sink = new PostMessageBusSink(webWorker);\n  var source = new PostMessageBusSource(webWorker);\n  var bus = new PostMessageBus(sink, source);\n\n  instance.init(webWorker, bus);\n}\n\nfunction _resolveDefaultAnimationDriver(): AnimationDriver {\n  // web workers have not been tested or configured to\n  // work with animations just yet...\n  return new NoOpAnimationDriver();\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}