{"version":3,"file":"checkbox_value_accessor.js","sourceRoot":"","sources":["../../../../../modules/@angular/forms/src/directives/checkbox_value_accessor.ts"],"names":[],"mappings":";AAAA,qBAA0D,eAAe,CAAC,CAAA;AAE1E,uCAAsD,0BAA0B,CAAC,CAAA;AAEpE,+BAAuB,GAA2B;IAC7D,OAAO,EAAE,0CAAiB;IAC1B,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,4BAA4B,EAA5B,CAA4B,CAAC;IAC3D,KAAK,EAAE,IAAI;CACZ,CAAC;AACF;IAIE,sCAAoB,SAAmB,EAAU,WAAuB;QAApD,cAAS,GAAT,SAAS,CAAU;QAAU,gBAAW,GAAX,WAAW,CAAY;QAHxE,aAAQ,GAAG,UAAC,CAAM,IAAM,CAAC,CAAC;QAC1B,cAAS,GAAG,cAAO,CAAC,CAAC;IAEsD,CAAC;IAE5E,iDAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IACtF,CAAC;IACD,uDAAgB,GAAhB,UAAiB,EAAkB,IAAU,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC;IAClE,wDAAiB,GAAjB,UAAkB,EAAY,IAAU,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC,CAAC;IAChE,kBAAkB;IACX,uCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EACJ,uGAAuG;oBAC3G,IAAI,EAAE,EAAC,UAAU,EAAE,iCAAiC,EAAE,QAAQ,EAAE,aAAa,EAAC;oBAC9E,SAAS,EAAE,CAAC,+BAAuB,CAAC;iBACrC,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,2CAAc,GAA2D;QAChF,EAAC,IAAI,EAAE,eAAQ,GAAG;QAClB,EAAC,IAAI,EAAE,iBAAU,GAAG;KACnB,CAAC;IACF,mCAAC;AAAD,CAAC,AAzBD,IAyBC;AAzBY,oCAA4B,+BAyBxC,CAAA","sourcesContent":["import {Directive, ElementRef, Renderer, forwardRef} from '@angular/core';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\n\nexport const CHECKBOX_VALUE_ACCESSOR: any = /*@ts2dart_const*/ {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CheckboxControlValueAccessor),\n  multi: true\n};\nexport class CheckboxControlValueAccessor implements ControlValueAccessor {\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  constructor(private _renderer: Renderer, private _elementRef: ElementRef) {}\n\n  writeValue(value: any): void {\n    this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n  }\n  registerOnChange(fn: (_: any) => {}): void { this.onChange = fn; }\n  registerOnTouched(fn: () => {}): void { this.onTouched = fn; }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n  host: {'(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()'},\n  providers: [CHECKBOX_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Renderer, },\n{type: ElementRef, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}