{"version":3,"file":"radio_control_value_accessor.js","sourceRoot":"","sources":["../../../../../modules/@angular/forms/src/directives/radio_control_value_accessor.ts"],"names":[],"mappings":"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","sourcesContent":["import {Directive, ElementRef, Injectable, Injector, Input, OnDestroy, OnInit, Renderer, forwardRef} from '@angular/core';\n\nimport {ListWrapper} from '../facade/collection';\nimport {isPresent} from '../facade/lang';\n\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\nimport {NgControl} from './ng_control';\n\nexport const RADIO_VALUE_ACCESSOR: any = /*@ts2dart_const*/ /*@ts2dart_Provider*/ {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\nexport class RadioControlRegistry {\n  private _accessors: any[] = [];\n\n  add(control: NgControl, accessor: RadioControlValueAccessor) {\n    this._accessors.push([control, accessor]);\n  }\n\n  remove(accessor: RadioControlValueAccessor) {\n    var indexToRemove = -1;\n    for (var i = 0; i < this._accessors.length; ++i) {\n      if (this._accessors[i][1] === accessor) {\n        indexToRemove = i;\n      }\n    }\n    ListWrapper.removeAt(this._accessors, indexToRemove);\n  }\n\n  select(accessor: RadioControlValueAccessor) {\n    this._accessors.forEach((c) => {\n      if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n        c[1].fireUncheck(accessor.value);\n      }\n    });\n  }\n\n  private _isSameGroup(\n      controlPair: [NgControl, RadioControlValueAccessor], accessor: RadioControlValueAccessor) {\n    return controlPair[0].control.root === accessor._control.control.root &&\n        controlPair[1].name === accessor.name;\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n}\nexport class RadioControlValueAccessor implements ControlValueAccessor,\n    OnDestroy, OnInit {\n  /** @internal */\n  _state: boolean;\n  /** @internal */\n  _control: NgControl;\n  /** @internal */\n  _fn: Function;\n  onChange = () => {};\n  onTouched = () => {} name: string; value: any;\n\n  constructor(\n      private _renderer: Renderer, private _elementRef: ElementRef,\n      private _registry: RadioControlRegistry, private _injector: Injector) {}\n\n  ngOnInit(): void {\n    this._control = this._injector.get(NgControl);\n    this._registry.add(this._control, this);\n  }\n\n  ngOnDestroy(): void { this._registry.remove(this); }\n\n  writeValue(value: any): void {\n    this._state = value === this.value;\n    if (isPresent(value)) {\n      this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n    }\n  }\n\n  registerOnChange(fn: (_: any) => {}): void {\n    this._fn = fn;\n    this.onChange = () => {\n      fn(this.value);\n      this._registry.select(this);\n    };\n  }\n\n  fireUncheck(value: any): void { this.writeValue(value); }\n\n  registerOnTouched(fn: () => {}): void { this.onTouched = fn; }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n  host: {'(change)': 'onChange()', '(blur)': 'onTouched()'},\n  providers: [RADIO_VALUE_ACCESSOR]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Renderer, },\n{type: ElementRef, },\n{type: RadioControlRegistry, },\n{type: Injector, },\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}