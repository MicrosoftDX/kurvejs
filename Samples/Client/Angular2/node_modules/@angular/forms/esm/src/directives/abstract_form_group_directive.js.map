{"version":3,"file":"abstract_form_group_directive.js","sourceRoot":"","sources":["../../../../../../modules/@angular/forms/src/directives/abstract_form_group_directive.ts"],"names":[],"mappings":"OAIO,EAAC,gBAAgB,EAAC,MAAM,qBAAqB;OAE7C,EAAC,sBAAsB,EAAE,iBAAiB,EAAE,WAAW,EAAC,MAAM,UAAU;AAG/E;;GAEG;AAEH,gDAAgD,gBAAgB;IAU9D,QAAQ,KAAW,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAE3D,WAAW,KAAW,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAEjE;;OAEG;IACH,IAAI,OAAO,KAAgB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAE1E;;OAEG;IACH,IAAI,IAAI,KAAe,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAErE;;OAEG;IACH,IAAI,aAAa,KAAW,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;IAEhE,IAAI,SAAS,KAAkB,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAE5E,IAAI,cAAc,KAAuB,MAAM,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;AAClG,CAAC;AAAA","sourcesContent":["import {OnDestroy, OnInit} from '@angular/core';\n\nimport {FormGroup} from '../model';\n\nimport {ControlContainer} from './control_container';\nimport {Form} from './form_interface';\nimport {composeAsyncValidators, composeValidators, controlPath} from './shared';\nimport {AsyncValidatorFn, ValidatorFn} from './validators';\n\n/**\n  This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n */\n\nexport class AbstractFormGroupDirective extends ControlContainer implements OnInit, OnDestroy {\n  /** @internal */\n  _parent: ControlContainer;\n\n  /** @internal */\n  _validators: any[];\n\n  /** @internal */\n  _asyncValidators: any[];\n\n  ngOnInit(): void { this.formDirective.addFormGroup(this); }\n\n  ngOnDestroy(): void { this.formDirective.removeFormGroup(this); }\n\n  /**\n   * Get the {@link FormGroup} backing this binding.\n   */\n  get control(): FormGroup { return this.formDirective.getFormGroup(this); }\n\n  /**\n   * Get the path to this control group.\n   */\n  get path(): string[] { return controlPath(this.name, this._parent); }\n\n  /**\n   * Get the {@link Form} to which this group belongs.\n   */\n  get formDirective(): Form { return this._parent.formDirective; }\n\n  get validator(): ValidatorFn { return composeValidators(this._validators); }\n\n  get asyncValidator(): AsyncValidatorFn { return composeAsyncValidators(this._asyncValidators); }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}