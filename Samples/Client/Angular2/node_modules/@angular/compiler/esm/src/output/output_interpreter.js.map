{"version":3,"file":"output_interpreter.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/output/output_interpreter.ts"],"names":[],"mappings":"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","sourcesContent":["import {reflector} from '../../core_private';\nimport {ObservableWrapper} from '../facade/async';\nimport {ListWrapper} from '../facade/collection';\nimport {BaseException, unimplemented} from '../facade/exceptions';\nimport {FunctionWrapper, IS_DART, isPresent} from '../facade/lang';\n\nimport {debugOutputAstAsDart} from './dart_emitter';\nimport * as o from './output_ast';\nimport {debugOutputAstAsTypeScript} from './ts_emitter';\n\nexport function interpretStatements(\n    statements: o.Statement[], resultVar: string, instanceFactory: InstanceFactory): any {\n  var stmtsWithReturn = statements.concat([new o.ReturnStatement(o.variable(resultVar))]);\n  var ctx = new _ExecutionContext(\n      null, null, null, null, new Map<string, any>(), new Map<string, any>(),\n      new Map<string, Function>(), new Map<string, Function>(), instanceFactory);\n  var visitor = new StatementInterpreter();\n  var result = visitor.visitAllStatements(stmtsWithReturn, ctx);\n  return isPresent(result) ? result.value : null;\n}\n\nexport interface InstanceFactory {\n  createInstance(\n      superClass: any, clazz: any, constructorArgs: any[], props: Map<string, any>,\n      getters: Map<string, Function>, methods: Map<string, Function>): DynamicInstance;\n}\n\nexport abstract class DynamicInstance {\n  get props(): Map<string, any> { return unimplemented(); }\n  get getters(): Map<string, Function> { return unimplemented(); }\n  get methods(): Map<string, any> { return unimplemented(); }\n  get clazz(): any { return unimplemented(); }\n}\n\nfunction isDynamicInstance(instance: any): any {\n  if (IS_DART) {\n    return instance instanceof DynamicInstance;\n  } else {\n    return isPresent(instance) && isPresent(instance.props) && isPresent(instance.getters) &&\n        isPresent(instance.methods);\n  }\n}\n\nfunction _executeFunctionStatements(\n    varNames: string[], varValues: any[], statements: o.Statement[], ctx: _ExecutionContext,\n    visitor: StatementInterpreter): any {\n  var childCtx = ctx.createChildWihtLocalVars();\n  for (var i = 0; i < varNames.length; i++) {\n    childCtx.vars.set(varNames[i], varValues[i]);\n  }\n  var result = visitor.visitAllStatements(statements, childCtx);\n  return isPresent(result) ? result.value : null;\n}\n\nclass _ExecutionContext {\n  constructor(\n      public parent: _ExecutionContext, public superClass: any, public superInstance: any,\n      public className: string, public vars: Map<string, any>, public props: Map<string, any>,\n      public getters: Map<string, Function>, public methods: Map<string, Function>,\n      public instanceFactory: InstanceFactory) {}\n\n  createChildWihtLocalVars(): _ExecutionContext {\n    return new _ExecutionContext(\n        this, this.superClass, this.superInstance, this.className, new Map<string, any>(),\n        this.props, this.getters, this.methods, this.instanceFactory);\n  }\n}\n\nclass ReturnValue {\n  constructor(public value: any) {}\n}\n\nclass _DynamicClass {\n  constructor(\n      private _classStmt: o.ClassStmt, private _ctx: _ExecutionContext,\n      private _visitor: StatementInterpreter) {}\n\n  instantiate(args: any[]): DynamicInstance {\n    var props = new Map<string, any>();\n    var getters = new Map<string, Function>();\n    var methods = new Map<string, Function>();\n    var superClass = this._classStmt.parent.visitExpression(this._visitor, this._ctx);\n    var instanceCtx = new _ExecutionContext(\n        this._ctx, superClass, null, this._classStmt.name, this._ctx.vars, props, getters, methods,\n        this._ctx.instanceFactory);\n\n    this._classStmt.fields.forEach((field: o.ClassField) => { props.set(field.name, null); });\n    this._classStmt.getters.forEach((getter: o.ClassGetter) => {\n      getters.set(\n          getter.name,\n          () => _executeFunctionStatements([], [], getter.body, instanceCtx, this._visitor));\n    });\n    this._classStmt.methods.forEach((method: o.ClassMethod) => {\n      var paramNames = method.params.map(param => param.name);\n      methods.set(method.name, _declareFn(paramNames, method.body, instanceCtx, this._visitor));\n    });\n\n    var ctorParamNames = this._classStmt.constructorMethod.params.map(param => param.name);\n    _executeFunctionStatements(\n        ctorParamNames, args, this._classStmt.constructorMethod.body, instanceCtx, this._visitor);\n    return instanceCtx.superInstance;\n  }\n\n  debugAst(): string { return this._visitor.debugAst(this._classStmt); }\n}\n\nclass StatementInterpreter implements o.StatementVisitor, o.ExpressionVisitor {\n  debugAst(ast: o.Expression|o.Statement|o.Type): string {\n    return IS_DART ? debugOutputAstAsDart(ast) : debugOutputAstAsTypeScript(ast);\n  }\n\n  visitDeclareVarStmt(stmt: o.DeclareVarStmt, ctx: _ExecutionContext): any {\n    ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n    return null;\n  }\n  visitWriteVarExpr(expr: o.WriteVarExpr, ctx: _ExecutionContext): any {\n    var value = expr.value.visitExpression(this, ctx);\n    var currCtx = ctx;\n    while (currCtx != null) {\n      if (currCtx.vars.has(expr.name)) {\n        currCtx.vars.set(expr.name, value);\n        return value;\n      }\n      currCtx = currCtx.parent;\n    }\n    throw new BaseException(`Not declared variable ${expr.name}`);\n  }\n  visitReadVarExpr(ast: o.ReadVarExpr, ctx: _ExecutionContext): any {\n    var varName = ast.name;\n    if (isPresent(ast.builtin)) {\n      switch (ast.builtin) {\n        case o.BuiltinVar.Super:\n        case o.BuiltinVar.This:\n          return ctx.superInstance;\n        case o.BuiltinVar.CatchError:\n          varName = CATCH_ERROR_VAR;\n          break;\n        case o.BuiltinVar.CatchStack:\n          varName = CATCH_STACK_VAR;\n          break;\n        default:\n          throw new BaseException(`Unknown builtin variable ${ast.builtin}`);\n      }\n    }\n    var currCtx = ctx;\n    while (currCtx != null) {\n      if (currCtx.vars.has(varName)) {\n        return currCtx.vars.get(varName);\n      }\n      currCtx = currCtx.parent;\n    }\n    throw new BaseException(`Not declared variable ${varName}`);\n  }\n  visitWriteKeyExpr(expr: o.WriteKeyExpr, ctx: _ExecutionContext): any {\n    var receiver = expr.receiver.visitExpression(this, ctx);\n    var index = expr.index.visitExpression(this, ctx);\n    var value = expr.value.visitExpression(this, ctx);\n    receiver[index] = value;\n    return value;\n  }\n  visitWritePropExpr(expr: o.WritePropExpr, ctx: _ExecutionContext): any {\n    var receiver = expr.receiver.visitExpression(this, ctx);\n    var value = expr.value.visitExpression(this, ctx);\n    if (isDynamicInstance(receiver)) {\n      var di = <DynamicInstance>receiver;\n      if (di.props.has(expr.name)) {\n        di.props.set(expr.name, value);\n      } else {\n        reflector.setter(expr.name)(receiver, value);\n      }\n    } else {\n      reflector.setter(expr.name)(receiver, value);\n    }\n    return value;\n  }\n\n  visitInvokeMethodExpr(expr: o.InvokeMethodExpr, ctx: _ExecutionContext): any {\n    var receiver = expr.receiver.visitExpression(this, ctx);\n    var args = this.visitAllExpressions(expr.args, ctx);\n    var result: any /** TODO #9100 */;\n    if (isPresent(expr.builtin)) {\n      switch (expr.builtin) {\n        case o.BuiltinMethod.ConcatArray:\n          result = ListWrapper.concat(receiver, args[0]);\n          break;\n        case o.BuiltinMethod.SubscribeObservable:\n          result = ObservableWrapper.subscribe(receiver, args[0]);\n          break;\n        case o.BuiltinMethod.bind:\n          if (IS_DART) {\n            result = receiver;\n          } else {\n            result = receiver.bind(args[0]);\n          }\n          break;\n        default:\n          throw new BaseException(`Unknown builtin method ${expr.builtin}`);\n      }\n    } else if (isDynamicInstance(receiver)) {\n      var di = <DynamicInstance>receiver;\n      if (di.methods.has(expr.name)) {\n        result = FunctionWrapper.apply(di.methods.get(expr.name), args);\n      } else {\n        result = reflector.method(expr.name)(receiver, args);\n      }\n    } else {\n      result = reflector.method(expr.name)(receiver, args);\n    }\n    return result;\n  }\n  visitInvokeFunctionExpr(stmt: o.InvokeFunctionExpr, ctx: _ExecutionContext): any {\n    var args = this.visitAllExpressions(stmt.args, ctx);\n    var fnExpr = stmt.fn;\n    if (fnExpr instanceof o.ReadVarExpr && fnExpr.builtin === o.BuiltinVar.Super) {\n      ctx.superInstance = ctx.instanceFactory.createInstance(\n          ctx.superClass, ctx.className, args, ctx.props, ctx.getters, ctx.methods);\n      ctx.parent.superInstance = ctx.superInstance;\n      return null;\n    } else {\n      var fn = stmt.fn.visitExpression(this, ctx);\n      return FunctionWrapper.apply(fn, args);\n    }\n  }\n  visitReturnStmt(stmt: o.ReturnStatement, ctx: _ExecutionContext): any {\n    return new ReturnValue(stmt.value.visitExpression(this, ctx));\n  }\n  visitDeclareClassStmt(stmt: o.ClassStmt, ctx: _ExecutionContext): any {\n    var clazz = new _DynamicClass(stmt, ctx, this);\n    ctx.vars.set(stmt.name, clazz);\n    return null;\n  }\n  visitExpressionStmt(stmt: o.ExpressionStatement, ctx: _ExecutionContext): any {\n    return stmt.expr.visitExpression(this, ctx);\n  }\n  visitIfStmt(stmt: o.IfStmt, ctx: _ExecutionContext): any {\n    var condition = stmt.condition.visitExpression(this, ctx);\n    if (condition) {\n      return this.visitAllStatements(stmt.trueCase, ctx);\n    } else if (isPresent(stmt.falseCase)) {\n      return this.visitAllStatements(stmt.falseCase, ctx);\n    }\n    return null;\n  }\n  visitTryCatchStmt(stmt: o.TryCatchStmt, ctx: _ExecutionContext): any {\n    try {\n      return this.visitAllStatements(stmt.bodyStmts, ctx);\n    } catch (e) {\n      var childCtx = ctx.createChildWihtLocalVars();\n      childCtx.vars.set(CATCH_ERROR_VAR, e);\n      childCtx.vars.set(CATCH_STACK_VAR, e.stack);\n      return this.visitAllStatements(stmt.catchStmts, childCtx);\n    }\n  }\n  visitThrowStmt(stmt: o.ThrowStmt, ctx: _ExecutionContext): any {\n    throw stmt.error.visitExpression(this, ctx);\n  }\n  visitCommentStmt(stmt: o.CommentStmt, context?: any): any { return null; }\n  visitInstantiateExpr(ast: o.InstantiateExpr, ctx: _ExecutionContext): any {\n    var args = this.visitAllExpressions(ast.args, ctx);\n    var clazz = ast.classExpr.visitExpression(this, ctx);\n    if (clazz instanceof _DynamicClass) {\n      return clazz.instantiate(args);\n    } else {\n      return FunctionWrapper.apply(reflector.factory(clazz), args);\n    }\n  }\n  visitLiteralExpr(ast: o.LiteralExpr, ctx: _ExecutionContext): any { return ast.value; }\n  visitExternalExpr(ast: o.ExternalExpr, ctx: _ExecutionContext): any { return ast.value.runtime; }\n  visitConditionalExpr(ast: o.ConditionalExpr, ctx: _ExecutionContext): any {\n    if (ast.condition.visitExpression(this, ctx)) {\n      return ast.trueCase.visitExpression(this, ctx);\n    } else if (isPresent(ast.falseCase)) {\n      return ast.falseCase.visitExpression(this, ctx);\n    }\n    return null;\n  }\n  visitNotExpr(ast: o.NotExpr, ctx: _ExecutionContext): any {\n    return !ast.condition.visitExpression(this, ctx);\n  }\n  visitCastExpr(ast: o.CastExpr, ctx: _ExecutionContext): any {\n    return ast.value.visitExpression(this, ctx);\n  }\n  visitFunctionExpr(ast: o.FunctionExpr, ctx: _ExecutionContext): any {\n    var paramNames = ast.params.map((param) => param.name);\n    return _declareFn(paramNames, ast.statements, ctx, this);\n  }\n  visitDeclareFunctionStmt(stmt: o.DeclareFunctionStmt, ctx: _ExecutionContext): any {\n    var paramNames = stmt.params.map((param) => param.name);\n    ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n    return null;\n  }\n  visitBinaryOperatorExpr(ast: o.BinaryOperatorExpr, ctx: _ExecutionContext): any {\n    var lhs = () => ast.lhs.visitExpression(this, ctx);\n    var rhs = () => ast.rhs.visitExpression(this, ctx);\n\n    switch (ast.operator) {\n      case o.BinaryOperator.Equals:\n        return lhs() == rhs();\n      case o.BinaryOperator.Identical:\n        return lhs() === rhs();\n      case o.BinaryOperator.NotEquals:\n        return lhs() != rhs();\n      case o.BinaryOperator.NotIdentical:\n        return lhs() !== rhs();\n      case o.BinaryOperator.And:\n        return lhs() && rhs();\n      case o.BinaryOperator.Or:\n        return lhs() || rhs();\n      case o.BinaryOperator.Plus:\n        return lhs() + rhs();\n      case o.BinaryOperator.Minus:\n        return lhs() - rhs();\n      case o.BinaryOperator.Divide:\n        return lhs() / rhs();\n      case o.BinaryOperator.Multiply:\n        return lhs() * rhs();\n      case o.BinaryOperator.Modulo:\n        return lhs() % rhs();\n      case o.BinaryOperator.Lower:\n        return lhs() < rhs();\n      case o.BinaryOperator.LowerEquals:\n        return lhs() <= rhs();\n      case o.BinaryOperator.Bigger:\n        return lhs() > rhs();\n      case o.BinaryOperator.BiggerEquals:\n        return lhs() >= rhs();\n      default:\n        throw new BaseException(`Unknown operator ${ast.operator}`);\n    }\n  }\n  visitReadPropExpr(ast: o.ReadPropExpr, ctx: _ExecutionContext): any {\n    var result: any /** TODO #9100 */;\n    var receiver = ast.receiver.visitExpression(this, ctx);\n    if (isDynamicInstance(receiver)) {\n      var di = <DynamicInstance>receiver;\n      if (di.props.has(ast.name)) {\n        result = di.props.get(ast.name);\n      } else if (di.getters.has(ast.name)) {\n        result = di.getters.get(ast.name)();\n      } else if (di.methods.has(ast.name)) {\n        result = di.methods.get(ast.name);\n      } else {\n        result = reflector.getter(ast.name)(receiver);\n      }\n    } else {\n      result = reflector.getter(ast.name)(receiver);\n    }\n    return result;\n  }\n  visitReadKeyExpr(ast: o.ReadKeyExpr, ctx: _ExecutionContext): any {\n    var receiver = ast.receiver.visitExpression(this, ctx);\n    var prop = ast.index.visitExpression(this, ctx);\n    return receiver[prop];\n  }\n  visitLiteralArrayExpr(ast: o.LiteralArrayExpr, ctx: _ExecutionContext): any {\n    return this.visitAllExpressions(ast.entries, ctx);\n  }\n  visitLiteralMapExpr(ast: o.LiteralMapExpr, ctx: _ExecutionContext): any {\n    var result = {};\n    ast.entries.forEach(\n        (entry) => (result as any /** TODO #9100 */)[<string>entry[0]] =\n            (<o.Expression>entry[1]).visitExpression(this, ctx));\n    return result;\n  }\n\n  visitAllExpressions(expressions: o.Expression[], ctx: _ExecutionContext): any {\n    return expressions.map((expr) => expr.visitExpression(this, ctx));\n  }\n\n  visitAllStatements(statements: o.Statement[], ctx: _ExecutionContext): ReturnValue {\n    for (var i = 0; i < statements.length; i++) {\n      var stmt = statements[i];\n      var val = stmt.visitStatement(this, ctx);\n      if (val instanceof ReturnValue) {\n        return val;\n      }\n    }\n    return null;\n  }\n}\n\nfunction _declareFn(\n    varNames: string[], statements: o.Statement[], ctx: _ExecutionContext,\n    visitor: StatementInterpreter): Function {\n  switch (varNames.length) {\n    case 0:\n      return () => _executeFunctionStatements(varNames, [], statements, ctx, visitor);\n    case 1:\n      return (d0: any /** TODO #9100 */) =>\n                 _executeFunctionStatements(varNames, [d0], statements, ctx, visitor);\n    case 2:\n      return (d0: any /** TODO #9100 */, d1: any /** TODO #9100 */) =>\n                 _executeFunctionStatements(varNames, [d0, d1], statements, ctx, visitor);\n    case 3:\n      return (d0: any /** TODO #9100 */, d1: any /** TODO #9100 */, d2: any /** TODO #9100 */) =>\n                 _executeFunctionStatements(varNames, [d0, d1, d2], statements, ctx, visitor);\n    case 4:\n      return (d0: any /** TODO #9100 */, d1: any /** TODO #9100 */, d2: any /** TODO #9100 */,\n              d3: any /** TODO #9100 */) =>\n                 _executeFunctionStatements(varNames, [d0, d1, d2, d3], statements, ctx, visitor);\n    case 5:\n      return (d0: any /** TODO #9100 */, d1: any /** TODO #9100 */, d2: any /** TODO #9100 */,\n              d3: any /** TODO #9100 */, d4: any /** TODO #9100 */) =>\n                 _executeFunctionStatements(\n                     varNames, [d0, d1, d2, d3, d4], statements, ctx, visitor);\n    case 6:\n      return (d0: any /** TODO #9100 */, d1: any /** TODO #9100 */, d2: any /** TODO #9100 */,\n              d3: any /** TODO #9100 */, d4: any /** TODO #9100 */, d5: any /** TODO #9100 */) =>\n                 _executeFunctionStatements(\n                     varNames, [d0, d1, d2, d3, d4, d5], statements, ctx, visitor);\n    case 7:\n      return (d0: any /** TODO #9100 */, d1: any /** TODO #9100 */, d2: any /** TODO #9100 */,\n              d3: any /** TODO #9100 */, d4: any /** TODO #9100 */, d5: any /** TODO #9100 */,\n              d6: any /** TODO #9100 */) =>\n                 _executeFunctionStatements(\n                     varNames, [d0, d1, d2, d3, d4, d5, d6], statements, ctx, visitor);\n    case 8:\n      return (d0: any /** TODO #9100 */, d1: any /** TODO #9100 */, d2: any /** TODO #9100 */,\n              d3: any /** TODO #9100 */, d4: any /** TODO #9100 */, d5: any /** TODO #9100 */,\n              d6: any /** TODO #9100 */, d7: any /** TODO #9100 */) =>\n                 _executeFunctionStatements(\n                     varNames, [d0, d1, d2, d3, d4, d5, d6, d7], statements, ctx, visitor);\n    case 9:\n      return (d0: any /** TODO #9100 */, d1: any /** TODO #9100 */, d2: any /** TODO #9100 */,\n              d3: any /** TODO #9100 */, d4: any /** TODO #9100 */, d5: any /** TODO #9100 */,\n              d6: any /** TODO #9100 */, d7: any /** TODO #9100 */, d8: any /** TODO #9100 */) =>\n                 _executeFunctionStatements(\n                     varNames, [d0, d1, d2, d3, d4, d5, d6, d7, d8], statements, ctx, visitor);\n    case 10:\n      return (d0: any /** TODO #9100 */, d1: any /** TODO #9100 */, d2: any /** TODO #9100 */,\n              d3: any /** TODO #9100 */, d4: any /** TODO #9100 */, d5: any /** TODO #9100 */,\n              d6: any /** TODO #9100 */, d7: any /** TODO #9100 */, d8: any /** TODO #9100 */,\n              d9: any /** TODO #9100 */) =>\n                 _executeFunctionStatements(\n                     varNames, [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9], statements, ctx, visitor);\n    default:\n      throw new BaseException(\n          'Declaring functions with more than 10 arguments is not supported right now');\n  }\n}\n\nvar CATCH_ERROR_VAR = 'error';\nvar CATCH_STACK_VAR = 'stack';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}