{"version":3,"file":"view_builder.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/view_compiler/view_builder.ts"],"names":[],"mappings":"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","sourcesContent":["import {ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\n\nimport {ViewType, isDefaultChangeDetectionStrategy} from '../../core_private';\nimport {ListWrapper, SetWrapper, StringMapWrapper} from '../facade/collection';\nimport {StringWrapper, isPresent} from '../facade/lang';\nimport {Identifiers, identifierToken} from '../identifiers';\nimport * as o from '../output/output_ast';\n\nimport {CompileElement, CompileNode} from './compile_element';\nimport {CompileView} from './compile_view';\nimport {ChangeDetectionStrategyEnum, DetectChangesVars, InjectMethodVars, ViewConstructorVars, ViewEncapsulationEnum, ViewProperties, ViewTypeEnum} from './constants';\n\nimport {TemplateAst, TemplateAstVisitor, NgContentAst, EmbeddedTemplateAst, ElementAst, ReferenceAst, VariableAst, BoundEventAst, BoundElementPropertyAst, AttrAst, BoundTextAst, TextAst, DirectiveAst, BoundDirectivePropertyAst, templateVisitAll,} from '../template_ast';\n\nimport {getViewFactoryName, createFlatArray, createDiTokenExpression} from './util';\n\nimport {CompileIdentifierMetadata, CompileDirectiveMetadata, CompileTokenMetadata} from '../compile_metadata';\n\nimport {AnimationCompiler} from '../animation/animation_compiler';\n\nconst IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nconst CLASS_ATTR = 'class';\nconst STYLE_ATTR = 'style';\nconst NG_CONTAINER_TAG = 'ng-container';\n\nvar parentRenderNodeVar = o.variable('parentRenderNode');\nvar rootSelectorVar = o.variable('rootSelector');\n\nexport class ViewCompileDependency {\n  constructor(\n      public comp: CompileDirectiveMetadata, public factoryPlaceholder: CompileIdentifierMetadata) {\n  }\n}\n\nexport function buildView(\n    view: CompileView, template: TemplateAst[],\n    targetDependencies: ViewCompileDependency[]): number {\n  var builderVisitor = new ViewBuilderVisitor(view, targetDependencies);\n  templateVisitAll(\n      builderVisitor, template,\n      view.declarationElement.isNull() ? view.declarationElement : view.declarationElement.parent);\n  return builderVisitor.nestedViewCount;\n}\n\nexport function finishView(view: CompileView, targetStatements: o.Statement[]) {\n  view.afterNodes();\n  createViewTopLevelStmts(view, targetStatements);\n  view.nodes.forEach((node) => {\n    if (node instanceof CompileElement && node.hasEmbeddedView) {\n      finishView(node.embeddedView, targetStatements);\n    }\n  });\n}\n\nclass ViewBuilderVisitor implements TemplateAstVisitor {\n  nestedViewCount: number = 0;\n\n  private _animationCompiler = new AnimationCompiler();\n\n  constructor(public view: CompileView, public targetDependencies: ViewCompileDependency[]) {}\n\n  private _isRootNode(parent: CompileElement): boolean { return parent.view !== this.view; }\n\n  private _addRootNodeAndProject(node: CompileNode) {\n    var projectedNode = _getOuterContainerOrSelf(node);\n    var parent = projectedNode.parent;\n    var ngContentIndex = (<any>projectedNode.sourceAst).ngContentIndex;\n    var vcAppEl =\n        (node instanceof CompileElement && node.hasViewContainer) ? node.appElement : null;\n    if (this._isRootNode(parent)) {\n      // store appElement as root node only for ViewContainers\n      if (this.view.viewType !== ViewType.COMPONENT) {\n        this.view.rootNodesOrAppElements.push(isPresent(vcAppEl) ? vcAppEl : node.renderNode);\n      }\n    } else if (isPresent(parent.component) && isPresent(ngContentIndex)) {\n      parent.addContentNode(ngContentIndex, isPresent(vcAppEl) ? vcAppEl : node.renderNode);\n    }\n  }\n\n  private _getParentRenderNode(parent: CompileElement): o.Expression {\n    parent = _getOuterContainerParentOrSelf(parent);\n    if (this._isRootNode(parent)) {\n      if (this.view.viewType === ViewType.COMPONENT) {\n        return parentRenderNodeVar;\n      } else {\n        // root node of an embedded/host view\n        return o.NULL_EXPR;\n      }\n    } else {\n      return isPresent(parent.component) &&\n              parent.component.template.encapsulation !== ViewEncapsulation.Native ?\n          o.NULL_EXPR :\n          parent.renderNode;\n    }\n  }\n\n  visitBoundText(ast: BoundTextAst, parent: CompileElement): any {\n    return this._visitText(ast, '', parent);\n  }\n  visitText(ast: TextAst, parent: CompileElement): any {\n    return this._visitText(ast, ast.value, parent);\n  }\n  private _visitText(ast: TemplateAst, value: string, parent: CompileElement): o.Expression {\n    var fieldName = `_text_${this.view.nodes.length}`;\n    this.view.fields.push(\n        new o.ClassField(fieldName, o.importType(this.view.genConfig.renderTypes.renderText)));\n    var renderNode = o.THIS_EXPR.prop(fieldName);\n    var compileNode = new CompileNode(parent, this.view, this.view.nodes.length, renderNode, ast);\n    var createRenderNode =\n        o.THIS_EXPR.prop(fieldName)\n            .set(ViewProperties.renderer.callMethod(\n                'createText',\n                [\n                  this._getParentRenderNode(parent), o.literal(value),\n                  this.view.createMethod.resetDebugInfoExpr(this.view.nodes.length, ast)\n                ]))\n            .toStmt();\n    this.view.nodes.push(compileNode);\n    this.view.createMethod.addStmt(createRenderNode);\n    this._addRootNodeAndProject(compileNode);\n    return renderNode;\n  }\n\n  visitNgContent(ast: NgContentAst, parent: CompileElement): any {\n    // the projected nodes originate from a different view, so we don't\n    // have debug information for them...\n    this.view.createMethod.resetDebugInfo(null, ast);\n    var parentRenderNode = this._getParentRenderNode(parent);\n    var nodesExpression = ViewProperties.projectableNodes.key(\n        o.literal(ast.index),\n        new o.ArrayType(o.importType(this.view.genConfig.renderTypes.renderNode)));\n    if (parentRenderNode !== o.NULL_EXPR) {\n      this.view.createMethod.addStmt(\n          ViewProperties.renderer\n              .callMethod(\n                  'projectNodes',\n                  [\n                    parentRenderNode,\n                    o.importExpr(Identifiers.flattenNestedViewRenderNodes).callFn([nodesExpression])\n                  ])\n              .toStmt());\n    } else if (this._isRootNode(parent)) {\n      if (this.view.viewType !== ViewType.COMPONENT) {\n        // store root nodes only for embedded/host views\n        this.view.rootNodesOrAppElements.push(nodesExpression);\n      }\n    } else {\n      if (isPresent(parent.component) && isPresent(ast.ngContentIndex)) {\n        parent.addContentNode(ast.ngContentIndex, nodesExpression);\n      }\n    }\n    return null;\n  }\n\n  visitElement(ast: ElementAst, parent: CompileElement): any {\n    var nodeIndex = this.view.nodes.length;\n    var createRenderNodeExpr: o.InvokeMethodExpr;\n    var debugContextExpr = this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast);\n    if (nodeIndex === 0 && this.view.viewType === ViewType.HOST) {\n      createRenderNodeExpr = o.THIS_EXPR.callMethod(\n          'selectOrCreateHostElement', [o.literal(ast.name), rootSelectorVar, debugContextExpr]);\n    } else {\n      if (ast.name === NG_CONTAINER_TAG) {\n        createRenderNodeExpr = ViewProperties.renderer.callMethod(\n            'createTemplateAnchor', [this._getParentRenderNode(parent), debugContextExpr]);\n      } else {\n        createRenderNodeExpr = ViewProperties.renderer.callMethod(\n            'createElement',\n            [this._getParentRenderNode(parent), o.literal(ast.name), debugContextExpr]);\n      }\n    }\n    var fieldName = `_el_${nodeIndex}`;\n    this.view.fields.push(\n        new o.ClassField(fieldName, o.importType(this.view.genConfig.renderTypes.renderElement)));\n    this.view.createMethod.addStmt(o.THIS_EXPR.prop(fieldName).set(createRenderNodeExpr).toStmt());\n\n    var renderNode = o.THIS_EXPR.prop(fieldName);\n\n    var directives = ast.directives.map(directiveAst => directiveAst.directive);\n    var component = directives.find(directive => directive.isComponent);\n    var htmlAttrs = _readHtmlAttrs(ast.attrs);\n    var attrNameAndValues = _mergeHtmlAndDirectiveAttrs(htmlAttrs, directives);\n    for (var i = 0; i < attrNameAndValues.length; i++) {\n      var attrName = attrNameAndValues[i][0];\n      var attrValue = attrNameAndValues[i][1];\n      this.view.createMethod.addStmt(\n          ViewProperties.renderer\n              .callMethod(\n                  'setElementAttribute', [renderNode, o.literal(attrName), o.literal(attrValue)])\n              .toStmt());\n    }\n    var compileElement = new CompileElement(\n        parent, this.view, nodeIndex, renderNode, ast, component, directives, ast.providers,\n        ast.hasViewContainer, false, ast.references);\n    this.view.nodes.push(compileElement);\n    var compViewExpr: o.ReadVarExpr = null;\n    if (isPresent(component)) {\n      var nestedComponentIdentifier =\n          new CompileIdentifierMetadata({name: getViewFactoryName(component, 0)});\n      this.targetDependencies.push(new ViewCompileDependency(component, nestedComponentIdentifier));\n      compViewExpr = o.variable(`compView_${nodeIndex}`);  // fix highlighting: `\n      compileElement.setComponentView(compViewExpr);\n      this.view.createMethod.addStmt(\n          compViewExpr\n              .set(o.importExpr(nestedComponentIdentifier).callFn([\n                ViewProperties.viewUtils, compileElement.injector, compileElement.appElement\n              ]))\n              .toDeclStmt());\n    }\n    compileElement.beforeChildren();\n    this._addRootNodeAndProject(compileElement);\n    templateVisitAll(this, ast.children, compileElement);\n    compileElement.afterChildren(this.view.nodes.length - nodeIndex - 1);\n\n    if (isPresent(compViewExpr)) {\n      var codeGenContentNodes: o.Expression;\n      if (this.view.component.type.isHost) {\n        codeGenContentNodes = ViewProperties.projectableNodes;\n      } else {\n        codeGenContentNodes = o.literalArr(\n            compileElement.contentNodesByNgContentIndex.map(nodes => createFlatArray(nodes)));\n      }\n      this.view.createMethod.addStmt(\n          compViewExpr\n              .callMethod(\n                  'create', [compileElement.getComponent(), codeGenContentNodes, o.NULL_EXPR])\n              .toStmt());\n    }\n    return null;\n  }\n\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, parent: CompileElement): any {\n    var nodeIndex = this.view.nodes.length;\n    var fieldName = `_anchor_${nodeIndex}`;\n    this.view.fields.push(\n        new o.ClassField(fieldName, o.importType(this.view.genConfig.renderTypes.renderComment)));\n    this.view.createMethod.addStmt(\n        o.THIS_EXPR.prop(fieldName)\n            .set(ViewProperties.renderer.callMethod(\n                'createTemplateAnchor',\n                [\n                  this._getParentRenderNode(parent),\n                  this.view.createMethod.resetDebugInfoExpr(nodeIndex, ast)\n                ]))\n            .toStmt());\n    var renderNode = o.THIS_EXPR.prop(fieldName);\n\n    var templateVariableBindings = ast.variables.map(\n        varAst => [varAst.value.length > 0 ? varAst.value : IMPLICIT_TEMPLATE_VAR, varAst.name]);\n\n    var directives = ast.directives.map(directiveAst => directiveAst.directive);\n    var compileElement = new CompileElement(\n        parent, this.view, nodeIndex, renderNode, ast, null, directives, ast.providers,\n        ast.hasViewContainer, true, ast.references);\n    this.view.nodes.push(compileElement);\n\n    var compiledAnimations = this._animationCompiler.compileComponent(this.view.component);\n\n    this.nestedViewCount++;\n    var embeddedView = new CompileView(\n        this.view.component, this.view.genConfig, this.view.pipeMetas, o.NULL_EXPR,\n        compiledAnimations, this.view.viewIndex + this.nestedViewCount, compileElement,\n        templateVariableBindings);\n    this.nestedViewCount += buildView(embeddedView, ast.children, this.targetDependencies);\n\n    compileElement.beforeChildren();\n    this._addRootNodeAndProject(compileElement);\n    compileElement.afterChildren(0);\n\n    return null;\n  }\n\n  visitAttr(ast: AttrAst, ctx: any): any { return null; }\n  visitDirective(ast: DirectiveAst, ctx: any): any { return null; }\n  visitEvent(ast: BoundEventAst, eventTargetAndNames: Map<string, BoundEventAst>): any {\n    return null;\n  }\n\n  visitReference(ast: ReferenceAst, ctx: any): any { return null; }\n  visitVariable(ast: VariableAst, ctx: any): any { return null; }\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any { return null; }\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): any { return null; }\n}\n\n/**\n * Walks up the nodes while the direct parent is a container.\n *\n * Returns the outer container or the node itself when it is not a direct child of a container.\n *\n * @internal\n */\nfunction _getOuterContainerOrSelf(node: CompileNode): CompileNode {\n  const view = node.view;\n\n  while (_isNgContainer(node.parent, view)) {\n    node = node.parent;\n  }\n\n  return node;\n}\n\n/**\n * Walks up the nodes while they are container and returns the first parent which is not.\n *\n * Returns the parent of the outer container or the node itself when it is not a container.\n *\n * @internal\n */\nfunction _getOuterContainerParentOrSelf(el: CompileElement): CompileElement {\n  const view = el.view;\n\n  while (_isNgContainer(el, view)) {\n    el = el.parent;\n  }\n\n  return el;\n}\n\nfunction _isNgContainer(node: CompileNode, view: CompileView): boolean {\n  return !node.isNull() && (<ElementAst>node.sourceAst).name === NG_CONTAINER_TAG &&\n      node.view === view;\n}\n\n\nfunction _mergeHtmlAndDirectiveAttrs(\n    declaredHtmlAttrs: {[key: string]: string},\n    directives: CompileDirectiveMetadata[]): string[][] {\n  var result: {[key: string]: string} = {};\n  StringMapWrapper.forEach(\n      declaredHtmlAttrs, (value: string, key: string) => { result[key] = value; });\n  directives.forEach(directiveMeta => {\n    StringMapWrapper.forEach(directiveMeta.hostAttributes, (value: string, name: string) => {\n      var prevValue = result[name];\n      result[name] = isPresent(prevValue) ? mergeAttributeValue(name, prevValue, value) : value;\n    });\n  });\n  return mapToKeyValueArray(result);\n}\n\nfunction _readHtmlAttrs(attrs: AttrAst[]): {[key: string]: string} {\n  var htmlAttrs: {[key: string]: string} = {};\n  attrs.forEach((ast) => { htmlAttrs[ast.name] = ast.value; });\n  return htmlAttrs;\n}\n\nfunction mergeAttributeValue(attrName: string, attrValue1: string, attrValue2: string): string {\n  if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {\n    return `${attrValue1} ${attrValue2}`;\n  } else {\n    return attrValue2;\n  }\n}\n\nfunction mapToKeyValueArray(data: {[key: string]: string}): string[][] {\n  var entryArray: string[][] = [];\n  StringMapWrapper.forEach(data, (value: string, name: string) => {\n    entryArray.push([name, value]);\n  });\n  // We need to sort to get a defined output order\n  // for tests and for caching generated artifacts...\n  ListWrapper.sort(entryArray, (entry1, entry2) => StringWrapper.compare(entry1[0], entry2[0]));\n  return entryArray;\n}\n\nfunction createViewTopLevelStmts(view: CompileView, targetStatements: o.Statement[]) {\n  var nodeDebugInfosVar: o.Expression = o.NULL_EXPR;\n  if (view.genConfig.genDebugInfo) {\n    nodeDebugInfosVar = o.variable(\n        `nodeDebugInfos_${view.component.type.name}${view.viewIndex}`);  // fix highlighting: `\n    targetStatements.push(\n        (<o.ReadVarExpr>nodeDebugInfosVar)\n            .set(o.literalArr(\n                view.nodes.map(createStaticNodeDebugInfo),\n                new o.ArrayType(\n                    new o.ExternalType(Identifiers.StaticNodeDebugInfo), [o.TypeModifier.Const])))\n            .toDeclStmt(null, [o.StmtModifier.Final]));\n  }\n\n\n  var renderCompTypeVar: o.ReadVarExpr =\n      o.variable(`renderType_${view.component.type.name}`);  // fix highlighting: `\n  if (view.viewIndex === 0) {\n    targetStatements.push(renderCompTypeVar.set(o.NULL_EXPR)\n                              .toDeclStmt(o.importType(Identifiers.RenderComponentType)));\n  }\n\n  var viewClass = createViewClass(view, renderCompTypeVar, nodeDebugInfosVar);\n  targetStatements.push(viewClass);\n  targetStatements.push(createViewFactory(view, viewClass, renderCompTypeVar));\n}\n\nfunction createStaticNodeDebugInfo(node: CompileNode): o.Expression {\n  var compileElement = node instanceof CompileElement ? node : null;\n  var providerTokens: o.Expression[] = [];\n  var componentToken: o.Expression = o.NULL_EXPR;\n  var varTokenEntries: any[] = [];\n  if (isPresent(compileElement)) {\n    providerTokens = compileElement.getProviderTokens();\n    if (isPresent(compileElement.component)) {\n      componentToken = createDiTokenExpression(identifierToken(compileElement.component.type));\n    }\n    StringMapWrapper.forEach(\n        compileElement.referenceTokens, (token: CompileTokenMetadata, varName: string) => {\n          varTokenEntries.push(\n              [varName, isPresent(token) ? createDiTokenExpression(token) : o.NULL_EXPR]);\n        });\n  }\n  return o.importExpr(Identifiers.StaticNodeDebugInfo)\n      .instantiate(\n          [\n            o.literalArr(providerTokens, new o.ArrayType(o.DYNAMIC_TYPE, [o.TypeModifier.Const])),\n            componentToken,\n            o.literalMap(varTokenEntries, new o.MapType(o.DYNAMIC_TYPE, [o.TypeModifier.Const]))\n          ],\n          o.importType(Identifiers.StaticNodeDebugInfo, null, [o.TypeModifier.Const]));\n}\n\nfunction createViewClass(\n    view: CompileView, renderCompTypeVar: o.ReadVarExpr,\n    nodeDebugInfosVar: o.Expression): o.ClassStmt {\n  var viewConstructorArgs = [\n    new o.FnParam(ViewConstructorVars.viewUtils.name, o.importType(Identifiers.ViewUtils)),\n    new o.FnParam(ViewConstructorVars.parentInjector.name, o.importType(Identifiers.Injector)),\n    new o.FnParam(ViewConstructorVars.declarationEl.name, o.importType(Identifiers.AppElement))\n  ];\n  var superConstructorArgs = [\n    o.variable(view.className), renderCompTypeVar, ViewTypeEnum.fromValue(view.viewType),\n    ViewConstructorVars.viewUtils, ViewConstructorVars.parentInjector,\n    ViewConstructorVars.declarationEl,\n    ChangeDetectionStrategyEnum.fromValue(getChangeDetectionMode(view))\n  ];\n  if (view.genConfig.genDebugInfo) {\n    superConstructorArgs.push(nodeDebugInfosVar);\n  }\n  var viewConstructor = new o.ClassMethod(\n      null, viewConstructorArgs, [o.SUPER_EXPR.callFn(superConstructorArgs).toStmt()]);\n\n  var viewMethods = [\n    new o.ClassMethod(\n        'createInternal', [new o.FnParam(rootSelectorVar.name, o.STRING_TYPE)],\n        generateCreateMethod(view), o.importType(Identifiers.AppElement)),\n    new o.ClassMethod(\n        'injectorGetInternal',\n        [\n          new o.FnParam(InjectMethodVars.token.name, o.DYNAMIC_TYPE),\n          // Note: Can't use o.INT_TYPE here as the method in AppView uses number\n          new o.FnParam(InjectMethodVars.requestNodeIndex.name, o.NUMBER_TYPE),\n          new o.FnParam(InjectMethodVars.notFoundResult.name, o.DYNAMIC_TYPE)\n        ],\n        addReturnValuefNotEmpty(view.injectorGetMethod.finish(), InjectMethodVars.notFoundResult),\n        o.DYNAMIC_TYPE),\n    new o.ClassMethod(\n        'detectChangesInternal', [new o.FnParam(DetectChangesVars.throwOnChange.name, o.BOOL_TYPE)],\n        generateDetectChangesMethod(view)),\n    new o.ClassMethod('dirtyParentQueriesInternal', [], view.dirtyParentQueriesMethod.finish()),\n    new o.ClassMethod('destroyInternal', [], view.destroyMethod.finish()),\n    new o.ClassMethod('detachInternal', [], view.detachMethod.finish())\n  ].concat(view.eventHandlerMethods);\n  var superClass = view.genConfig.genDebugInfo ? Identifiers.DebugAppView : Identifiers.AppView;\n  var viewClass = new o.ClassStmt(\n      view.className, o.importExpr(superClass, [getContextType(view)]), view.fields, view.getters,\n      viewConstructor, viewMethods.filter((method) => method.body.length > 0));\n  return viewClass;\n}\n\nfunction createViewFactory(\n    view: CompileView, viewClass: o.ClassStmt, renderCompTypeVar: o.ReadVarExpr): o.Statement {\n  var viewFactoryArgs = [\n    new o.FnParam(ViewConstructorVars.viewUtils.name, o.importType(Identifiers.ViewUtils)),\n    new o.FnParam(ViewConstructorVars.parentInjector.name, o.importType(Identifiers.Injector)),\n    new o.FnParam(ViewConstructorVars.declarationEl.name, o.importType(Identifiers.AppElement))\n  ];\n  var initRenderCompTypeStmts: any[] = [];\n  var templateUrlInfo: string;\n  if (view.component.template.templateUrl == view.component.type.moduleUrl) {\n    templateUrlInfo =\n        `${view.component.type.moduleUrl} class ${view.component.type.name} - inline template`;\n  } else {\n    templateUrlInfo = view.component.template.templateUrl;\n  }\n  if (view.viewIndex === 0) {\n    initRenderCompTypeStmts = [new o.IfStmt(renderCompTypeVar.identical(o.NULL_EXPR), [\n      renderCompTypeVar\n          .set(ViewConstructorVars.viewUtils.callMethod(\n              'createRenderComponentType',\n              [\n                o.literal(templateUrlInfo),\n                o.literal(view.component.template.ngContentSelectors.length),\n                ViewEncapsulationEnum.fromValue(view.component.template.encapsulation), view.styles\n              ]))\n          .toStmt()\n    ])];\n  }\n  return o\n      .fn(viewFactoryArgs, initRenderCompTypeStmts.concat([new o.ReturnStatement(\n                               o.variable(viewClass.name)\n                                   .instantiate(viewClass.constructorMethod.params.map(\n                                       (param) => o.variable(param.name))))]),\n          o.importType(Identifiers.AppView, [getContextType(view)]))\n      .toDeclStmt(view.viewFactory.name, [o.StmtModifier.Final]);\n}\n\nfunction generateCreateMethod(view: CompileView): o.Statement[] {\n  var parentRenderNodeExpr: o.Expression = o.NULL_EXPR;\n  var parentRenderNodeStmts: any[] = [];\n  if (view.viewType === ViewType.COMPONENT) {\n    parentRenderNodeExpr = ViewProperties.renderer.callMethod(\n        'createViewRoot', [o.THIS_EXPR.prop('declarationAppElement').prop('nativeElement')]);\n    parentRenderNodeStmts =\n        [parentRenderNodeVar.set(parentRenderNodeExpr)\n             .toDeclStmt(\n                 o.importType(view.genConfig.renderTypes.renderNode), [o.StmtModifier.Final])];\n  }\n  var resultExpr: o.Expression;\n  if (view.viewType === ViewType.HOST) {\n    resultExpr = (<CompileElement>view.nodes[0]).appElement;\n  } else {\n    resultExpr = o.NULL_EXPR;\n  }\n  return parentRenderNodeStmts.concat(view.createMethod.finish(), [\n    o.THIS_EXPR\n        .callMethod(\n            'init',\n            [\n              createFlatArray(view.rootNodesOrAppElements),\n              o.literalArr(view.nodes.map(node => node.renderNode)), o.literalArr(view.disposables),\n              o.literalArr(view.subscriptions)\n            ])\n        .toStmt(),\n    new o.ReturnStatement(resultExpr)\n  ]);\n}\n\nfunction generateDetectChangesMethod(view: CompileView): o.Statement[] {\n  var stmts: any[] = [];\n  if (view.detectChangesInInputsMethod.isEmpty() && view.updateContentQueriesMethod.isEmpty() &&\n      view.afterContentLifecycleCallbacksMethod.isEmpty() &&\n      view.detectChangesRenderPropertiesMethod.isEmpty() &&\n      view.updateViewQueriesMethod.isEmpty() && view.afterViewLifecycleCallbacksMethod.isEmpty()) {\n    return stmts;\n  }\n  ListWrapper.addAll(stmts, view.detectChangesInInputsMethod.finish());\n  stmts.push(\n      o.THIS_EXPR.callMethod('detectContentChildrenChanges', [DetectChangesVars.throwOnChange])\n          .toStmt());\n  var afterContentStmts = view.updateContentQueriesMethod.finish().concat(\n      view.afterContentLifecycleCallbacksMethod.finish());\n  if (afterContentStmts.length > 0) {\n    stmts.push(new o.IfStmt(o.not(DetectChangesVars.throwOnChange), afterContentStmts));\n  }\n  ListWrapper.addAll(stmts, view.detectChangesRenderPropertiesMethod.finish());\n  stmts.push(o.THIS_EXPR.callMethod('detectViewChildrenChanges', [DetectChangesVars.throwOnChange])\n                 .toStmt());\n  var afterViewStmts =\n      view.updateViewQueriesMethod.finish().concat(view.afterViewLifecycleCallbacksMethod.finish());\n  if (afterViewStmts.length > 0) {\n    stmts.push(new o.IfStmt(o.not(DetectChangesVars.throwOnChange), afterViewStmts));\n  }\n\n  var varStmts: any[] = [];\n  var readVars = o.findReadVarNames(stmts);\n  if (SetWrapper.has(readVars, DetectChangesVars.changed.name)) {\n    varStmts.push(DetectChangesVars.changed.set(o.literal(true)).toDeclStmt(o.BOOL_TYPE));\n  }\n  if (SetWrapper.has(readVars, DetectChangesVars.changes.name)) {\n    varStmts.push(DetectChangesVars.changes.set(o.NULL_EXPR)\n                      .toDeclStmt(new o.MapType(o.importType(Identifiers.SimpleChange))));\n  }\n  if (SetWrapper.has(readVars, DetectChangesVars.valUnwrapper.name)) {\n    varStmts.push(\n        DetectChangesVars.valUnwrapper.set(o.importExpr(Identifiers.ValueUnwrapper).instantiate([]))\n            .toDeclStmt(null, [o.StmtModifier.Final]));\n  }\n  return varStmts.concat(stmts);\n}\n\nfunction addReturnValuefNotEmpty(statements: o.Statement[], value: o.Expression): o.Statement[] {\n  if (statements.length > 0) {\n    return statements.concat([new o.ReturnStatement(value)]);\n  } else {\n    return statements;\n  }\n}\n\nfunction getContextType(view: CompileView): o.Type {\n  if (view.viewType === ViewType.COMPONENT) {\n    return o.importType(view.component.type);\n  }\n  return o.DYNAMIC_TYPE;\n}\n\nfunction getChangeDetectionMode(view: CompileView): ChangeDetectionStrategy {\n  var mode: ChangeDetectionStrategy;\n  if (view.viewType === ViewType.COMPONENT) {\n    mode = isDefaultChangeDetectionStrategy(view.component.changeDetection) ?\n        ChangeDetectionStrategy.CheckAlways :\n        ChangeDetectionStrategy.CheckOnce;\n  } else {\n    mode = ChangeDetectionStrategy.CheckAlways;\n  }\n  return mode;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}