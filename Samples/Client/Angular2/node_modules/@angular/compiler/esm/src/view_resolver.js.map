{"version":3,"file":"view_resolver.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/view_resolver.ts"],"names":[],"mappings":"OAAO,EAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,EAAE,MAAM,eAAe;OAEnE,EAAC,eAAe,EAAE,SAAS,EAAC,MAAM,iBAAiB;OAEnD,EAAO,SAAS,EAAE,OAAO,EAAE,SAAS,EAAC,MAAM,oBAAoB;OAC/D,EAAC,aAAa,EAAC,MAAM,0BAA0B;OAC/C,EAAC,GAAG,EAAC,MAAM,0BAA0B;AAC5C;IAIE,YAAoB,UAAU,GAAoB,SAAS;QAAvC,eAAU,GAAV,UAAU,CAA6B;QAH3D,gBAAgB;QAChB,WAAM,GAAG,IAAI,GAAG,EAAsB,CAAC;IAEuB,CAAC;IAE/D,OAAO,CAAC,SAAe;QACrB,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAEtC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACnC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,gBAAgB;IAChB,QAAQ,CAAC,SAAe;QACtB,IAAI,QAA2B,CAAC;QAEhC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC;YAC9C,EAAE,CAAC,CAAC,CAAC,YAAY,iBAAiB,CAAC,CAAC,CAAC;gBACnC,QAAQ,GAAG,CAAC,CAAC;YACf,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAChE,MAAM,IAAI,aAAa,CACnB,cAAc,SAAS,CAAC,SAAS,CAAC,qDAAqD,CAAC,CAAC;YAE/F,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,YAAY,CAAC;oBACtB,WAAW,EAAE,QAAQ,CAAC,WAAW;oBACjC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;oBAC3B,UAAU,EAAE,QAAQ,CAAC,UAAU;oBAC/B,KAAK,EAAE,QAAQ,CAAC,KAAK;oBACrB,aAAa,EAAE,QAAQ,CAAC,aAAa;oBACrC,MAAM,EAAE,QAAQ,CAAC,MAAM;oBACvB,SAAS,EAAE,QAAQ,CAAC,SAAS;oBAC7B,UAAU,EAAE,QAAQ,CAAC,UAAU;oBAC/B,aAAa,EAAE,QAAQ,CAAC,aAAa;iBACtC,CAAC,CAAC;YACL,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,IAAI,aAAa,CACnB,sBAAsB,SAAS,CAAC,SAAS,CAAC,kCAAkC,CAAC,CAAC;QACpF,CAAC;IACH,CAAC;AASH,CAAC;AARD,kBAAkB;AACX,uBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,2BAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,eAAe,GAAG;CACxB,CACA","sourcesContent":["import {Injectable, ViewMetadata, ComponentMetadata,} from '@angular/core';\n\nimport {ReflectorReader, reflector} from '../core_private';\n\nimport {Type, stringify, isBlank, isPresent} from '../src/facade/lang';\nimport {BaseException} from '../src/facade/exceptions';\nimport {Map} from '../src/facade/collection';\nexport class ViewResolver {\n  /** @internal */\n  _cache = new Map<Type, ViewMetadata>();\n\n  constructor(private _reflector: ReflectorReader = reflector) {}\n\n  resolve(component: Type): ViewMetadata {\n    var view = this._cache.get(component);\n\n    if (isBlank(view)) {\n      view = this._resolve(component);\n      this._cache.set(component, view);\n    }\n\n    return view;\n  }\n\n  /** @internal */\n  _resolve(component: Type): ViewMetadata {\n    var compMeta: ComponentMetadata;\n\n    this._reflector.annotations(component).forEach(m => {\n      if (m instanceof ComponentMetadata) {\n        compMeta = m;\n      }\n    });\n\n    if (isPresent(compMeta)) {\n      if (isBlank(compMeta.template) && isBlank(compMeta.templateUrl)) {\n        throw new BaseException(\n            `Component '${stringify(component)}' must have either 'template' or 'templateUrl' set.`);\n\n      } else {\n        return new ViewMetadata({\n          templateUrl: compMeta.templateUrl,\n          template: compMeta.template,\n          directives: compMeta.directives,\n          pipes: compMeta.pipes,\n          encapsulation: compMeta.encapsulation,\n          styles: compMeta.styles,\n          styleUrls: compMeta.styleUrls,\n          animations: compMeta.animations,\n          interpolation: compMeta.interpolation\n        });\n      }\n    } else {\n      throw new BaseException(\n          `Could not compile '${stringify(component)}' because it is not a component.`);\n    }\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ReflectorReader, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}