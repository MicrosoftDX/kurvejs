{"version":3,"file":"view_binder.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/view_compiler/view_binder.ts"],"names":[],"mappings":"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","sourcesContent":["import {ListWrapper,} from '../facade/collection';\nimport {TemplateAst, TemplateAstVisitor, NgContentAst, EmbeddedTemplateAst, ElementAst, ReferenceAst, VariableAst, BoundEventAst, BoundElementPropertyAst, AttrAst, BoundTextAst, TextAst, DirectiveAst, BoundDirectivePropertyAst, templateVisitAll,} from '../template_ast';\nimport {bindRenderText, bindRenderInputs, bindDirectiveInputs, bindDirectiveHostProps} from './property_binder';\nimport {bindRenderOutputs, collectEventListeners, bindDirectiveOutputs} from './event_binder';\nimport {bindDirectiveAfterContentLifecycleCallbacks, bindDirectiveAfterViewLifecycleCallbacks, bindDirectiveDestroyLifecycleCallbacks, bindPipeDestroyLifecycleCallbacks, bindDirectiveDetectChangesLifecycleCallbacks} from './lifecycle_binder';\nimport {CompileView} from './compile_view';\nimport {CompileElement, CompileNode} from './compile_element';\n\nexport function bindView(view: CompileView, parsedTemplate: TemplateAst[]): void {\n  var visitor = new ViewBinderVisitor(view);\n  templateVisitAll(visitor, parsedTemplate);\n  view.pipes.forEach(\n      (pipe) => { bindPipeDestroyLifecycleCallbacks(pipe.meta, pipe.instance, pipe.view); });\n}\n\nclass ViewBinderVisitor implements TemplateAstVisitor {\n  private _nodeIndex: number = 0;\n\n  constructor(public view: CompileView) {}\n\n  visitBoundText(ast: BoundTextAst, parent: CompileElement): any {\n    var node = this.view.nodes[this._nodeIndex++];\n    bindRenderText(ast, node, this.view);\n    return null;\n  }\n  visitText(ast: TextAst, parent: CompileElement): any {\n    this._nodeIndex++;\n    return null;\n  }\n\n  visitNgContent(ast: NgContentAst, parent: CompileElement): any { return null; }\n\n  visitElement(ast: ElementAst, parent: CompileElement): any {\n    var compileElement = <CompileElement>this.view.nodes[this._nodeIndex++];\n    var eventListeners = collectEventListeners(ast.outputs, ast.directives, compileElement);\n    bindRenderInputs(ast.inputs, compileElement);\n    bindRenderOutputs(eventListeners);\n    ListWrapper.forEachWithIndex(ast.directives, (directiveAst, index) => {\n      var directiveInstance = compileElement.directiveInstances[index];\n      bindDirectiveInputs(directiveAst, directiveInstance, compileElement);\n      bindDirectiveDetectChangesLifecycleCallbacks(directiveAst, directiveInstance, compileElement);\n\n      bindDirectiveHostProps(directiveAst, directiveInstance, compileElement);\n      bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners);\n    });\n    templateVisitAll(this, ast.children, compileElement);\n    // afterContent and afterView lifecycles need to be called bottom up\n    // so that children are notified before parents\n    ListWrapper.forEachWithIndex(ast.directives, (directiveAst, index) => {\n      var directiveInstance = compileElement.directiveInstances[index];\n      bindDirectiveAfterContentLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n      bindDirectiveAfterViewLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n      bindDirectiveDestroyLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n    });\n    return null;\n  }\n\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, parent: CompileElement): any {\n    var compileElement = <CompileElement>this.view.nodes[this._nodeIndex++];\n    var eventListeners = collectEventListeners(ast.outputs, ast.directives, compileElement);\n    ListWrapper.forEachWithIndex(ast.directives, (directiveAst, index) => {\n      var directiveInstance = compileElement.directiveInstances[index];\n      bindDirectiveInputs(directiveAst, directiveInstance, compileElement);\n      bindDirectiveDetectChangesLifecycleCallbacks(directiveAst, directiveInstance, compileElement);\n      bindDirectiveOutputs(directiveAst, directiveInstance, eventListeners);\n      bindDirectiveAfterContentLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n      bindDirectiveAfterViewLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n      bindDirectiveDestroyLifecycleCallbacks(\n          directiveAst.directive, directiveInstance, compileElement);\n    });\n    bindView(compileElement.embeddedView, ast.children);\n    return null;\n  }\n\n  visitAttr(ast: AttrAst, ctx: any): any { return null; }\n  visitDirective(ast: DirectiveAst, ctx: any): any { return null; }\n  visitEvent(ast: BoundEventAst, eventTargetAndNames: Map<string, BoundEventAst>): any {\n    return null;\n  }\n\n  visitReference(ast: ReferenceAst, ctx: any): any { return null; }\n  visitVariable(ast: VariableAst, ctx: any): any { return null; }\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any { return null; }\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): any { return null; }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}