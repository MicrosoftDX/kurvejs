{"version":3,"file":"expander.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/i18n/expander.ts"],"names":[],"mappings":"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","sourcesContent":["import {BaseException} from '../facade/exceptions';\nimport {HtmlAst, HtmlAstVisitor, HtmlAttrAst, HtmlCommentAst, HtmlElementAst, HtmlExpansionAst, HtmlExpansionCaseAst, HtmlTextAst, htmlVisitAll} from '../html_ast';\nimport {ParseError} from '../parse_util';\nimport {I18nError} from './shared';\n\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nconst PLURAL_CASES: string[] = ['zero', 'one', 'two', 'few', 'many', 'other'];\n\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <template ngPluralCase=\"=0\">zero</ng-container>\n *   <template ngPluralCase=\"=1\">one</ng-container>\n *   <template ngPluralCase=\"other\">more than one</ng-container>\n * </ng-container>\n * ```\n */\nexport function expandNodes(nodes: HtmlAst[]): ExpansionResult {\n  const expander = new _Expander();\n  return new ExpansionResult(htmlVisitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\n\nexport class ExpansionResult {\n  constructor(public nodes: HtmlAst[], public expanded: boolean, public errors: ParseError[]) {}\n}\n\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * @internal\n */\nclass _Expander implements HtmlAstVisitor {\n  isExpanded: boolean = false;\n  errors: ParseError[] = [];\n\n  visitElement(ast: HtmlElementAst, context: any): any {\n    return new HtmlElementAst(\n        ast.name, ast.attrs, htmlVisitAll(this, ast.children), ast.sourceSpan, ast.startSourceSpan,\n        ast.endSourceSpan);\n  }\n\n  visitAttr(ast: HtmlAttrAst, context: any): any { return ast; }\n\n  visitText(ast: HtmlTextAst, context: any): any { return ast; }\n\n  visitComment(ast: HtmlCommentAst, context: any): any { return ast; }\n\n  visitExpansion(ast: HtmlExpansionAst, context: any): any {\n    this.isExpanded = true;\n    return ast.type == 'plural' ? _expandPluralForm(ast, this.errors) :\n                                  _expandDefaultForm(ast, this.errors);\n  }\n\n  visitExpansionCase(ast: HtmlExpansionCaseAst, context: any): any {\n    throw new BaseException('Should not be reached');\n  }\n}\n\nfunction _expandPluralForm(ast: HtmlExpansionAst, errors: ParseError[]): HtmlElementAst {\n  const children = ast.cases.map(c => {\n    if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n      errors.push(new I18nError(\n          c.valueSourceSpan,\n          `Plural cases should be \"=<number>\" or one of ${PLURAL_CASES.join(\", \")}`));\n    }\n\n    const expansionResult = expandNodes(c.expression);\n    errors.push(...expansionResult.errors);\n\n    return new HtmlElementAst(\n        `template`, [new HtmlAttrAst('ngPluralCase', `${c.value}`, c.valueSourceSpan)],\n        expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n  });\n  const switchAttr = new HtmlAttrAst('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n  return new HtmlElementAst(\n      'ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\nfunction _expandDefaultForm(ast: HtmlExpansionAst, errors: ParseError[]): HtmlElementAst {\n  let children = ast.cases.map(c => {\n    const expansionResult = expandNodes(c.expression);\n    errors.push(...expansionResult.errors);\n\n    return new HtmlElementAst(\n        `template`, [new HtmlAttrAst('ngSwitchCase', `${c.value}`, c.valueSourceSpan)],\n        expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n  });\n  const switchAttr = new HtmlAttrAst('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n  return new HtmlElementAst(\n      'ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}