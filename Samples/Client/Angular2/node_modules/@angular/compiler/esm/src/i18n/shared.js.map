{"version":3,"file":"shared.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/i18n/shared.ts"],"names":[],"mappings":"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","sourcesContent":["import {Parser} from '../expression_parser/parser';\nimport {StringWrapper, isBlank, isPresent} from '../facade/lang';\nimport {HtmlAst, HtmlAstVisitor, HtmlAttrAst, HtmlCommentAst, HtmlElementAst, HtmlExpansionAst, HtmlExpansionCaseAst, HtmlTextAst, htmlVisitAll} from '../html_ast';\nimport {InterpolationConfig} from '../interpolation_config';\nimport {ParseError, ParseSourceSpan} from '../parse_util';\nimport {Message} from './message';\n\nexport const I18N_ATTR = 'i18n';\nexport const I18N_ATTR_PREFIX = 'i18n-';\nvar CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*\"([\\s\\S]*?)\"[\\s\\S]*\\)/g;\n\n/**\n * An i18n error.\n */\nexport class I18nError extends ParseError {\n  constructor(span: ParseSourceSpan, msg: string) { super(span, msg); }\n}\n\nexport function partition(nodes: HtmlAst[], errors: ParseError[], implicitTags: string[]): Part[] {\n  let parts: Part[] = [];\n\n  for (let i = 0; i < nodes.length; ++i) {\n    let node = nodes[i];\n    let msgNodes: HtmlAst[] = [];\n    // Nodes between `<!-- i18n -->` and `<!-- /i18n -->`\n    if (_isOpeningComment(node)) {\n      let i18n = (<HtmlCommentAst>node).value.replace(/^i18n:?/, '').trim();\n\n      while (++i < nodes.length && !_isClosingComment(nodes[i])) {\n        msgNodes.push(nodes[i]);\n      }\n\n      if (i === nodes.length) {\n        errors.push(new I18nError(node.sourceSpan, 'Missing closing \\'i18n\\' comment.'));\n        break;\n      }\n\n      parts.push(new Part(null, null, msgNodes, i18n, true));\n    } else if (node instanceof HtmlElementAst) {\n      // Node with an `i18n` attribute\n      let i18n = _findI18nAttr(node);\n      let hasI18n: boolean = isPresent(i18n) || implicitTags.indexOf(node.name) > -1;\n      parts.push(new Part(node, null, node.children, isPresent(i18n) ? i18n.value : null, hasI18n));\n    } else if (node instanceof HtmlTextAst) {\n      parts.push(new Part(null, node, null, null, false));\n    }\n  }\n\n  return parts;\n}\n\nexport class Part {\n  constructor(\n      public rootElement: HtmlElementAst, public rootTextNode: HtmlTextAst,\n      public children: HtmlAst[], public i18n: string, public hasI18n: boolean) {}\n\n  get sourceSpan(): ParseSourceSpan {\n    if (isPresent(this.rootElement)) {\n      return this.rootElement.sourceSpan;\n    }\n    if (isPresent(this.rootTextNode)) {\n      return this.rootTextNode.sourceSpan;\n    }\n\n    return this.children[0].sourceSpan;\n  }\n\n  createMessage(parser: Parser, interpolationConfig: InterpolationConfig): Message {\n    return new Message(\n        stringifyNodes(this.children, parser, interpolationConfig), meaning(this.i18n),\n        description(this.i18n));\n  }\n}\n\nfunction _isOpeningComment(n: HtmlAst): boolean {\n  return n instanceof HtmlCommentAst && isPresent(n.value) && n.value.startsWith('i18n');\n}\n\nfunction _isClosingComment(n: HtmlAst): boolean {\n  return n instanceof HtmlCommentAst && isPresent(n.value) && n.value === '/i18n';\n}\n\nfunction _findI18nAttr(p: HtmlElementAst): HtmlAttrAst {\n  let attrs = p.attrs;\n  for (let i = 0; i < attrs.length; i++) {\n    if (attrs[i].name === I18N_ATTR) {\n      return attrs[i];\n    }\n  }\n  return null;\n}\n\nexport function meaning(i18n: string): string {\n  if (isBlank(i18n) || i18n == '') return null;\n  return i18n.split('|')[0];\n}\n\nexport function description(i18n: string): string {\n  if (isBlank(i18n) || i18n == '') return null;\n  let parts = i18n.split('|', 2);\n  return parts.length > 1 ? parts[1] : null;\n}\n\n/**\n * Extract a translation string given an `i18n-` prefixed attribute.\n *\n * @internal\n */\nexport function messageFromI18nAttribute(\n    parser: Parser, interpolationConfig: InterpolationConfig, p: HtmlElementAst,\n    i18nAttr: HtmlAttrAst): Message {\n  let expectedName = i18nAttr.name.substring(5);\n  let attr = p.attrs.find(a => a.name == expectedName);\n\n  if (attr) {\n    return messageFromAttribute(\n        parser, interpolationConfig, attr, meaning(i18nAttr.value), description(i18nAttr.value));\n  }\n\n  throw new I18nError(p.sourceSpan, `Missing attribute '${expectedName}'.`);\n}\n\nexport function messageFromAttribute(\n    parser: Parser, interpolationConfig: InterpolationConfig, attr: HtmlAttrAst,\n    meaning: string = null, description: string = null): Message {\n  let value = removeInterpolation(attr.value, attr.sourceSpan, parser, interpolationConfig);\n  return new Message(value, meaning, description);\n}\n\nexport function removeInterpolation(\n    value: string, source: ParseSourceSpan, parser: Parser,\n    interpolationConfig: InterpolationConfig): string {\n  try {\n    let parsed = parser.splitInterpolation(value, source.toString(), interpolationConfig);\n    let usedNames = new Map<string, number>();\n    if (isPresent(parsed)) {\n      let res = '';\n      for (let i = 0; i < parsed.strings.length; ++i) {\n        res += parsed.strings[i];\n        if (i != parsed.strings.length - 1) {\n          let customPhName = getPhNameFromBinding(parsed.expressions[i], i);\n          customPhName = dedupePhName(usedNames, customPhName);\n          res += `<ph name=\"${customPhName}\"/>`;\n        }\n      }\n      return res;\n    } else {\n      return value;\n    }\n  } catch (e) {\n    return value;\n  }\n}\n\nexport function getPhNameFromBinding(input: string, index: number): string {\n  let customPhMatch = StringWrapper.split(input, CUSTOM_PH_EXP);\n  return customPhMatch.length > 1 ? customPhMatch[1] : `${index}`;\n}\n\nexport function dedupePhName(usedNames: Map<string, number>, name: string): string {\n  let duplicateNameCount = usedNames.get(name);\n  if (isPresent(duplicateNameCount)) {\n    usedNames.set(name, duplicateNameCount + 1);\n    return `${name}_${duplicateNameCount}`;\n  } else {\n    usedNames.set(name, 1);\n    return name;\n  }\n}\n\nexport function stringifyNodes(\n    nodes: HtmlAst[], parser: Parser, interpolationConfig: InterpolationConfig): string {\n  let visitor = new _StringifyVisitor(parser, interpolationConfig);\n  return htmlVisitAll(visitor, nodes).join('');\n}\n\nclass _StringifyVisitor implements HtmlAstVisitor {\n  private _index: number = 0;\n  constructor(private _parser: Parser, private _interpolationConfig: InterpolationConfig) {}\n\n  visitElement(ast: HtmlElementAst, context: any): any {\n    let name = this._index++;\n    let children = this._join(htmlVisitAll(this, ast.children), '');\n    return `<ph name=\"e${name}\">${children}</ph>`;\n  }\n\n  visitAttr(ast: HtmlAttrAst, context: any): any { return null; }\n\n  visitText(ast: HtmlTextAst, context: any): any {\n    let index = this._index++;\n    let noInterpolation =\n        removeInterpolation(ast.value, ast.sourceSpan, this._parser, this._interpolationConfig);\n    if (noInterpolation != ast.value) {\n      return `<ph name=\"t${index}\">${noInterpolation}</ph>`;\n    }\n    return ast.value;\n  }\n\n  visitComment(ast: HtmlCommentAst, context: any): any { return ''; }\n\n  visitExpansion(ast: HtmlExpansionAst, context: any): any { return null; }\n\n  visitExpansionCase(ast: HtmlExpansionCaseAst, context: any): any { return null; }\n\n  private _join(strs: string[], str: string): string {\n    return strs.filter(s => s.length > 0).join(str);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}