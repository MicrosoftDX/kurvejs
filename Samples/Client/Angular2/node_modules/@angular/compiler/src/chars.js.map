{"version":3,"file":"chars.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/chars.ts"],"names":[],"mappings":";AAAa,YAAI,GAAG,CAAC,CAAC;AACT,YAAI,GAAG,CAAC,CAAC;AACT,WAAG,GAAG,EAAE,CAAC;AACT,aAAK,GAAG,EAAE,CAAC;AACX,WAAG,GAAG,EAAE,CAAC;AACT,WAAG,GAAG,EAAE,CAAC;AACT,cAAM,GAAG,EAAE,CAAC;AACZ,aAAK,GAAG,EAAE,CAAC;AACX,WAAG,GAAG,EAAE,CAAC;AACT,aAAK,GAAG,EAAE,CAAC;AACX,UAAE,GAAG,EAAE,CAAC;AACR,gBAAQ,GAAG,EAAE,CAAC;AACd,kBAAU,GAAG,EAAE,CAAC;AAChB,WAAG,GAAG,EAAE,CAAC;AACT,eAAO,GAAG,EAAE,CAAC;AACb,eAAO,GAAG,EAAE,CAAC;AACb,aAAK,GAAG,EAAE,CAAC;AACX,aAAK,GAAG,EAAE,CAAC;AACX,cAAM,GAAG,EAAE,CAAC;AACZ,cAAM,GAAG,EAAE,CAAC;AACZ,eAAO,GAAG,EAAE,CAAC;AACb,cAAM,GAAG,EAAE,CAAC;AACZ,cAAM,GAAG,EAAE,CAAC;AACZ,kBAAU,GAAG,EAAE,CAAC;AAChB,WAAG,GAAG,EAAE,CAAC;AACT,WAAG,GAAG,EAAE,CAAC;AACT,WAAG,GAAG,EAAE,CAAC;AACT,iBAAS,GAAG,EAAE,CAAC;AAEf,UAAE,GAAG,EAAE,CAAC;AACR,UAAE,GAAG,EAAE,CAAC;AAER,UAAE,GAAG,EAAE,CAAC;AACR,UAAE,GAAG,EAAE,CAAC;AACR,UAAE,GAAG,EAAE,CAAC;AACR,UAAE,GAAG,EAAE,CAAC;AACR,UAAE,GAAG,EAAE,CAAC;AAER,iBAAS,GAAG,EAAE,CAAC;AACf,kBAAU,GAAG,EAAE,CAAC;AAChB,iBAAS,GAAG,EAAE,CAAC;AACf,cAAM,GAAG,EAAE,CAAC;AACZ,UAAE,GAAG,EAAE,CAAC;AAER,UAAE,GAAG,EAAE,CAAC;AACR,UAAE,GAAG,GAAG,CAAC;AACT,UAAE,GAAG,GAAG,CAAC;AACT,UAAE,GAAG,GAAG,CAAC;AACT,UAAE,GAAG,GAAG,CAAC;AACT,UAAE,GAAG,GAAG,CAAC;AACT,UAAE,GAAG,GAAG,CAAC;AACT,UAAE,GAAG,GAAG,CAAC;AACT,UAAE,GAAG,GAAG,CAAC;AACT,UAAE,GAAG,GAAG,CAAC;AAET,eAAO,GAAG,GAAG,CAAC;AACd,YAAI,GAAG,GAAG,CAAC;AACX,eAAO,GAAG,GAAG,CAAC;AACd,aAAK,GAAG,GAAG,CAAC;AAEZ,aAAK,GAAG,GAAG,CAAC;AACZ,cAAM,GAAG,GAAG,CAAC;AACb,WAAG,GAAG,EAAE,CAAC;AAEtB,sBAA6B,IAAY;IACvC,MAAM,CAAC,CAAC,IAAI,IAAI,YAAI,IAAI,IAAI,IAAI,cAAM,CAAC,IAAI,CAAC,IAAI,IAAI,aAAK,CAAC,CAAC;AAC7D,CAAC;AAFe,oBAAY,eAE3B,CAAA","sourcesContent":["export const $EOF = 0;\nexport const $TAB = 9;\nexport const $LF = 10;\nexport const $VTAB = 11;\nexport const $FF = 12;\nexport const $CR = 13;\nexport const $SPACE = 32;\nexport const $BANG = 33;\nexport const $DQ = 34;\nexport const $HASH = 35;\nexport const $$ = 36;\nexport const $PERCENT = 37;\nexport const $AMPERSAND = 38;\nexport const $SQ = 39;\nexport const $LPAREN = 40;\nexport const $RPAREN = 41;\nexport const $STAR = 42;\nexport const $PLUS = 43;\nexport const $COMMA = 44;\nexport const $MINUS = 45;\nexport const $PERIOD = 46;\nexport const $SLASH = 47;\nexport const $COLON = 58;\nexport const $SEMICOLON = 59;\nexport const $LT = 60;\nexport const $EQ = 61;\nexport const $GT = 62;\nexport const $QUESTION = 63;\n\nexport const $0 = 48;\nexport const $9 = 57;\n\nexport const $A = 65;\nexport const $E = 69;\nexport const $F = 70;\nexport const $X = 88;\nexport const $Z = 90;\n\nexport const $LBRACKET = 91;\nexport const $BACKSLASH = 92;\nexport const $RBRACKET = 93;\nexport const $CARET = 94;\nexport const $_ = 95;\n\nexport const $a = 97;\nexport const $e = 101;\nexport const $f = 102;\nexport const $n = 110;\nexport const $r = 114;\nexport const $t = 116;\nexport const $u = 117;\nexport const $v = 118;\nexport const $x = 120;\nexport const $z = 122;\n\nexport const $LBRACE = 123;\nexport const $BAR = 124;\nexport const $RBRACE = 125;\nexport const $NBSP = 160;\n\nexport const $PIPE = 124;\nexport const $TILDA = 126;\nexport const $AT = 64;\n\nexport function isWhitespace(code: number): boolean {\n  return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}