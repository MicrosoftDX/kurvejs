{"version":3,"sources":["kurve.ts"],"names":["kurve","kurve.Error","kurve.Error.constructor","kurve.DispatchDeferred","kurve.PromiseState","kurve.Client","kurve.Client.constructor","kurve.Client.resolve","kurve.Client.reject","kurve.Client._dispatchCallback","kurve.Deferred","kurve.Deferred.constructor","kurve.Deferred.DispatchDeferred","kurve.Deferred.then","kurve.Deferred.resolve","kurve.Deferred._resolve","kurve.Deferred.reject","kurve.Deferred._reject","kurve.Promise","kurve.Promise.constructor","kurve.Promise.then","kurve.Promise.fail","kurve.EndPointVersion","kurve.Mode","kurve.CachedToken","kurve.CachedToken.constructor","kurve.CachedToken.isExpired","kurve.CachedToken.hasScopes","kurve.TokenCache","kurve.TokenCache.constructor","kurve.TokenCache.add","kurve.TokenCache.getForResource","kurve.TokenCache.getForScopes","kurve.TokenCache.clear","kurve.TokenCache.remove","kurve.IdToken","kurve.IdToken.constructor","kurve.Identity","kurve.Identity.constructor","kurve.Identity.parseQueryString","kurve.Identity.token","kurve.Identity.checkForIdentityRedirect","kurve.Identity.decodeIdToken","kurve.Identity.decodeAccessToken","kurve.Identity.getIdToken","kurve.Identity.isLoggedIn","kurve.Identity.renewIdToken","kurve.Identity.getCurrentEndPointVersion","kurve.Identity.getAccessTokenAsync","kurve.Identity.getAccessToken","kurve.Identity.parseNodeCookies","kurve.Identity.handleNodeCallback","kurve.Identity.getAccessTokenForScopesAsync","kurve.Identity.getAccessTokenForScopes","kurve.Identity.loginAsync","kurve.Identity.login","kurve.Identity.loginNoWindowAsync","kurve.Identity.loginNoWindow","kurve.Identity.logOut","kurve.Identity.base64Decode","kurve.Identity.generateNonce","kurve.Graph","kurve.Graph.constructor","kurve.Graph.me","kurve.Graph.users","kurve.Graph.groups","kurve.Graph.Get","kurve.Graph.GetCollection","kurve.Graph.Post","kurve.Graph.get","kurve.Graph.findAccessToken","kurve.Graph.post","kurve.Graph.generateError","kurve.Graph.addAccessTokenAndSend","kurve.Scopes","kurve.Scopes.constructor","kurve.OData","kurve.OData.constructor","kurve.singletonFromResponse","kurve.collectionFromResponse","kurve.Node","kurve.Node.constructor","kurve.CollectionNode","kurve.CollectionNode.constructor","kurve.CollectionNode.nextLink","kurve.Attachment","kurve.Attachment.constructor","kurve.Attachments","kurve.Attachments.constructor","kurve.Message","kurve.Message.constructor","kurve.Message.attachments","kurve.Messages","kurve.Messages.constructor","kurve.Event","kurve.Event.constructor","kurve.Event.attachments","kurve.Events","kurve.Events.constructor","kurve.CalendarView","kurve.CalendarView.constructor","kurve.MailFolder","kurve.MailFolder.constructor","kurve.MailFolders","kurve.MailFolders.constructor","kurve.Photo","kurve.Photo.constructor","kurve.Manager","kurve.Manager.constructor","kurve.MemberOf","kurve.MemberOf.constructor","kurve.DirectReport","kurve.DirectReport.constructor","kurve.DirectReports","kurve.DirectReports.constructor","kurve.User","kurve.User.constructor","kurve.User.messages","kurve.User.events","kurve.User.calendarView","kurve.User.mailFolders","kurve.User.photo","kurve.User.manager","kurve.User.directReports","kurve.User.memberOf","kurve.Users","kurve.Users.constructor","kurve.Group","kurve.Group.constructor","kurve.Groups","kurve.Groups.constructor"],"mappings":"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A,CAACA,CAACA,WAAWA,CAACA,SAASA,CAACA,CAACA,CAACA;wBACxBA,KAAIA,CAACA,YAAYA,CAACA,MAAMA,CAACA,WAAWA,CAACA,EAAEA,CAACA,CAACA;oBAC7CA,CAACA;oBAACA,IAAIA,CAACA,CAACA;wBACJA,KAAIA,CAACA,YAAYA,CAACA,WAAWA,CAACA,EAAEA,CAACA,GAAGA,WAAWA,CAACA;oBACpDA,CAACA;gBACLA,CAACA,CAACA,CAACA;YACPA,CAACA;QACLA,CAACA;QAEMD,wBAAGA,GAAVA,UAAWA,KAAkBA;YACzBE,IAAIA,CAACA,YAAYA,CAACA,KAAKA,CAACA,EAAEA,CAACA,GAAGA,KAAKA,CAACA;YACpCA,IAAIA,CAACA,YAAYA,IAAIA,IAAIA,CAACA,YAAYA,CAACA,GAAGA,CAACA,KAAKA,CAACA,EAAEA,EAAEA,KAAKA,CAACA,CAACA;QAChEA,CAACA;QAEMF,mCAAcA,GAArBA,UAAsBA,QAAgBA;YAClCG,IAAIA,WAAWA,GAAGA,IAAIA,CAACA,YAAYA,CAACA,QAAQA,CAACA,CAACA;YAC9CA,EAAEA,CAACA,CAACA,WAAWA,IAAIA,WAAWA,CAACA,SAASA,CAACA,CAACA,CAACA;gBACvCA,IAAIA,CAACA,MAAMA,CAACA,QAAQA,CAACA,CAACA;gBACtBA,MAAMA,CAACA,IAAIA,CAACA;YAChBA,CAACA;YACDA,MAAMA,CAACA,WAAWA,CAACA;QACvBA,CAACA;QAEMH,iCAAYA,GAAnBA,UAAoBA,MAAgBA;YAChCI,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,IAAIA,CAACA,YAAYA,CAACA,CAACA,CAACA;gBAChCA,IAAIA,WAAWA,GAAGA,IAAIA,CAACA,YAAYA,CAACA,GAAGA,CAACA,CAACA;gBAEzCA,EAAEA,CAACA,CAACA,WAAWA,CAACA,SAASA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;oBAChCA,EAAEA,CAACA,CAACA,WAAWA,CAACA,SAASA,CAACA,CAACA,CAACA;wBACxBA,IAAIA,CAACA,MAAMA,CAACA,G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;YACrCA,IAAIA,CAACA,cAAcA,CAACA,QAAQA,EAAEA,CAACA,UAACA,KAAKA,EAAEA,KAAKA;gBACxCA,EAAEA,CAACA,CAACA,KAAKA,CAACA,CAACA,CAACA;oBACRA,CAACA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA;gBACpBA,CAACA;gBAACA,IAAIA,CAACA,CAACA;oBACJA,CAACA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;gBACrBA,CAACA;YACLA,CAACA,CAACA,CAACA,CAACA;YACJA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA;QACrBA,CAACA;QAEMX,iCAAcA,GAArBA,UAAsBA,QAAgBA,EAAEA,QAAiCA;YAAzEY,iBAgFCA;YA/EGA,EAAEA,CAACA,CAACA,IAAIA,CAACA,OAAOA,KAAKA,eAAeA,CAACA,EAAEA,CAACA,CAACA,CAACA;gBACtCA,IAAIA,CAACA,GAAGA,IAAIA,KAAKA,EAAEA,CAACA;gBACpBA,CAACA,CAACA,UAAUA,GAAGA,wGAAwGA,CAACA;gBACxHA,QAAQA,CAACA,CAACA,CAACA,CAACA;gBACZA,MAAMA,CAACA;YACXA,CAACA;YACDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,IAAIA,KAAKA,IAAIA,CAACA,MAAMA,CAACA,CAACA,CAACA;gBAC5BA,IAAIA,KAAKA,GAAGA,IAAIA,CAACA,UAAUA,CAACA,cAAcA,CAACA,QAAQA,CAACA,CAACA;gBACrDA,EAAEA,CAACA,CAACA,KAAKA,CAACA,CAACA,CAACA;oBACRA,MAAMA,CAACA,QAAQA,CAACA,IAAIA,EAAEA,KAAKA,CAACA,KAAKA,CAACA,CAACA;gBACvCA,CAACA;gBAEDA,kDAAkDA;gBAElDA,uDAAuDA;gBACvDA,IAAIA,CAACA,gBAAgBA,GAAGA,CAACA,UAACA,KAAaA,EAAEA,KAAYA;oBACjDA,EAAEA,CAACA,CAACA,KAAKA,CAACA,CAACA,CAACA;wBACRA,QAAQA,CAACA,KAAKA,CAACA,CAACA;oBACpBA,CAACA;oBACDA,IAAIA,CAACA,CAACA;wBACFA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wCACfA,YAAYA,EAAEA,eAAeA,GAAGA,SAASA;wCACzCA,UAAUA,EAAEA,GAAGA;qCAClBA,CAACA,CAACA;oCACHA,GAAGA,CAACA,GAAGA,EAAEA,CAACA;oCACVA,CAACA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;gCAErBA,CAACA,CAACA,CAACA;4BACPA,CAACA,CAACA,CAACA;4BAEHA,QAAQA,CAACA,KAAKA,CAACA,SAASA,CAACA,CAACA;4BAC1BA,QAAQA,CAACA,GAAGA,EAAEA,CAACA;wBACnBA,CAACA;wBAACA,IAAIA,CAACA,CAACA;4BACJA,yCAAyCA;4BACzCA,GAAGA,CAACA,SAASA,CAACA,GAAGA,EAAEA,iBAAiBA,EAAEA,EAAEA,cAAcA,EAAEA,YAAYA,EAAEA,CAACA,CAACA;4BACxEA,GAAGA,CAACA,GAAGA,CAACA,iBAAiBA,CAACA,CAACA;4BAC3BA,CAACA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;wBACrBA,CAACA;oBACLA,CAACA;oBACDA,IAAIA,CAACA,CAACA;wBACFA,4CAA4CA;wBAC5CA,GAAGA,CAACA,SAASA,CAACA,GAAGA,EAAEA,qBAAqBA,EAAEA,EAAEA,cAAcA,EAAEA,YAAYA,EAAEA,CAACA,CAACA;wBAC5EA,GAAGA,CAACA,GAAGA,CAACA,qBAAqBA,CAACA,CAACA;wBAC/BA,CAACA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA;oBACrBA,CAACA;oBACDA,MAAMA,CAACA,CAACA,CAACA,OAAOA,CAACA;gBAErBA,CAACA;gBAACA,IAAIA,CAACA,CAACA;oBACJA,EAAEA,CAACA,CAACA,OAAOA,CAACA,cAAcA,CAACA,CAACA,CAACA,CAACA;wBAC1BA,IAAIA,GAAGA,GAAGA,oBAAoBA,CAACA,UAAUA,GAAGA,OAAOA,CAACA,cAAcA,CAACA,CAACA,CAACA;wBACrEA,EAAEA,CAACA,CAACA,GAAGA,CAACA,CAACA,CAACA;4BACNA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;4BAChBA,MAAMA,CAAC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","file":"kurve.js","sourcesContent":["// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license at the bottom of this file.\nmodule kurve  {\n    \n// Adapted from the original source: https://github.com/DirtyHairy/typescript-deferred\n\n\n\n  export class Error {\n        public status: number;\n        public statusText: string;\n        public text: string;\n        public other: any;\n    }\n    \n    function DispatchDeferred(closure: () => void) {\n        setTimeout(closure, 0);\n    }\n\n     enum PromiseState { Pending, ResolutionInProgress, Resolved, Rejected }\n\n    export interface PromiseCallback<T> {\n        (error: Error, result?: T): void;\n    }\n\n    class Client {\n        constructor(\n            private _dispatcher: (closure: () => void) => void,\n            private _successCB: any,\n            private _errorCB: any\n        ) {\n            this.result = new Deferred<any, any>(_dispatcher);\n        }\n\n        resolve(value: any, defer: boolean): void {\n            if (typeof (this._successCB) !== 'function') {\n                this.result.resolve(value);\n                return;\n            }\n\n            if (defer) {\n                this._dispatcher(() => this._dispatchCallback(this._successCB, value));\n            } else {\n                this._dispatchCallback(this._successCB, value);\n            }\n        }\n\n        reject(error: any, defer: boolean): void {\n            if (typeof (this._errorCB) !== 'function') {\n                this.result.reject(error);\n                return;\n            }\n\n            if (defer) {\n                this._dispatcher(() => this._dispatchCallback(this._errorCB, error));\n            } else {\n                this._dispatchCallback(this._errorCB, error);\n            }\n        }\n\n        private _dispatchCallback(callback: (arg: any) => any, arg: any): void {\n            var result: any,\n                then: any,\n                type: string;\n\n            try {\n                result = callback(arg);\n                this.result.resolve(result);\n            } catch (err) {\n                this.result.reject(err);\n                return;\n            }\n        }\n\n        result: Deferred<any, any>;\n    }\n\n    export class Deferred<T, E>  {\n        private _dispatcher: (closure: () => void)=> void;\n\n        constructor();\n        constructor(dispatcher: (closure: () => void) => void);\n        constructor(dispatcher?: (closure: () => void) => void) {\n            if (dispatcher)\n                this._dispatcher = dispatcher;\n            else\n                this._dispatcher = DispatchDeferred;\n            this.promise = new Promise<T, E>(this);\n        }\n\n        private DispatchDeferred(closure: () => void) {\n            setTimeout(closure, 0);\n        }\n\n        then(successCB: any, errorCB: any): any {\n            if (typeof (successCB) !== 'function' && typeof (errorCB) !== 'function') {\n                return this.promise;\n            }\n\n            var client = new Client(this._dispatcher, successCB, errorCB);\n\n            switch (this._state) {\n                case PromiseState.Pending:\n                case PromiseState.ResolutionInProgress:\n                    this._stack.push(client);\n                    break;\n\n                case PromiseState.Resolved:\n                    client.resolve(this._value, true);\n                    break;\n\n                case PromiseState.Rejected:\n                    client.reject(this._error, true);\n                    break;\n            }\n\n            return client.result.promise;\n        }\n\n        resolve(value?: T): Deferred<T, E>;\n\n        resolve(value?: Promise<T, E>): Deferred<T, E>;\n\n        resolve(value?: any): Deferred<T, E> {\n            if (this._state !== PromiseState.Pending) {\n                return this;\n            }\n\n            return this._resolve(value);\n        }\n\n        private _resolve(value: any): Deferred<T, E> {\n            var type = typeof (value),\n                then: any,\n                pending = true;\n\n            try {\n                if (value !== null &&\n                    (type === 'object' || type === 'function') &&\n                    typeof (then = value.then) === 'function') {\n                    if (value === this.promise) {\n                        throw new TypeError('recursive resolution');\n                    }\n\n                    this._state = PromiseState.ResolutionInProgress;\n                    then.call(value,\n                        (result: any): void => {\n                            if (pending) {\n                                pending = false;\n                                this._resolve(result);\n                            }\n                        },\n                        (error: any): void => {\n                            if (pending) {\n                                pending = false;\n                                this._reject(error);\n                            }\n                        }\n                    );\n                } else {\n                    this._state = PromiseState.ResolutionInProgress;\n\n                    this._dispatcher(() => {\n                        this._state = PromiseState.Resolved;\n                        this._value = value;\n\n                        var i: number,\n                            stackSize = this._stack.length;\n\n                        for (i = 0; i < stackSize; i++) {\n                            this._stack[i].resolve(value, false);\n                        }\n\n                        this._stack.splice(0, stackSize);\n                    });\n                }\n            } catch (err) {\n                if (pending) {\n                    this._reject(err);\n                }\n            }\n\n            return this;\n        }\n\n        reject(error?: E): Deferred<T, E> {\n            if (this._state !== PromiseState.Pending) {\n                return this;\n            }\n\n            return this._reject(error);\n        }\n\n        private _reject(error?: any): Deferred<T, E> {\n            this._state = PromiseState.ResolutionInProgress;\n\n            this._dispatcher(() => {\n                this._state = PromiseState.Rejected;\n                this._error = error;\n\n                var stackSize = this._stack.length,\n                    i = 0;\n\n                for (i = 0; i < stackSize; i++) {\n                    this._stack[i].reject(error, false);\n                }\n\n                this._stack.splice(0, stackSize);\n            });\n\n            return this;\n        }\n\n        promise: Promise<T, E>;\n\n        private _stack: Array<Client> = [];\n        private _state = PromiseState.Pending;\n        private _value: T;\n        private _error: any;\n    }\n\n    export class Promise<T, E>  {\n        constructor(private _deferred: Deferred<T, E>) { }\n\n        then<R>(\n            successCallback?: (result: T) => R,\n            errorCallback?: (error: E) => R\n        );\n\n        then(successCallback: any, errorCallback: any): any {\n            return this._deferred.then(successCallback, errorCallback);\n        }\n\n        fail<R>(\n            errorCallback?: (error: E) => R\n        );\n\n        fail(errorCallback: any): any {\n            return this._deferred.then(undefined, errorCallback);\n        }\n    }\n\n\n\n\n\n\n    export enum EndPointVersion {\n        v1=1,\n        v2=2\n    }\n\n    export enum Mode {\n        Client = 1,\n        Node = 2\n    }\n\n    class CachedToken {\n        constructor(\n            public id: string,\n            public scopes: string[],\n            public resource: string,\n            public token: string,\n            public expiry: Date) {};\n\n        public get isExpired() {\n            return this.expiry <= new Date(new Date().getTime() + 60000);\n        }\n\n        public hasScopes(requiredScopes: string[]) {\n            if (!this.scopes) {\n                return false;\n            }\n\n            return requiredScopes.every(requiredScope => {\n                return this.scopes.some(actualScope => requiredScope === actualScope);\n            });\n        }\n    }\n\n    interface CachedTokenDictionary {\n        [index: string]: CachedToken;\n    }\n\n    export interface TokenStorage {\n        add(key: string, token: any);\n        remove(key: string);\n        getAll(): any[];\n        clear();\n    }\n\n    class TokenCache {\n        private cachedTokens: CachedTokenDictionary;\n\n        constructor(private tokenStorage: TokenStorage) {\n            this.cachedTokens = {};\n            if (tokenStorage) {\n                tokenStorage.getAll().forEach(({ id, scopes, resource, token, expiry }) => {\n                    var cachedToken = new CachedToken(id, scopes, resource, token, new Date(expiry));\n                    if (cachedToken.isExpired) {\n                        this.tokenStorage.remove(cachedToken.id);\n                    } else {\n                        this.cachedTokens[cachedToken.id] = cachedToken;\n                    }\n                });\n            }\n        }\n\n        public add(token: CachedToken) {\n            this.cachedTokens[token.id] = token;\n            this.tokenStorage && this.tokenStorage.add(token.id, token);\n        }\n\n        public getForResource(resource: string): CachedToken {\n            var cachedToken = this.cachedTokens[resource];\n            if (cachedToken && cachedToken.isExpired) {\n                this.remove(resource);\n                return null;\n            }\n            return cachedToken;\n        }\n\n        public getForScopes(scopes: string[]): CachedToken {\n            for (var key in this.cachedTokens) {\n                var cachedToken = this.cachedTokens[key];\n\n                if (cachedToken.hasScopes(scopes)) {\n                    if (cachedToken.isExpired) {\n                        this.remove(key);\n                    } else {\n                        return cachedToken;\n                    }\n                }\n            }\n\n            return null;\n        }\n\n        public clear() {\n            this.cachedTokens = {};\n            this.tokenStorage && this.tokenStorage.clear();\n        }\n\n        private remove(key) {\n            this.tokenStorage && this.tokenStorage.remove(key);\n            delete this.cachedTokens[key];\n        }\n    }\n\n    export class IdToken {\n        public Token: string;\n        public IssuerIdentifier: string;\n        public SubjectIdentifier: string;\n        public Audience: string;\n        public Expiry: Date;\n        public UPN: string;\n        public TenantId: string;\n        public FamilyName: string;\n        public GivenName: string;\n        public Name: string;\n        public PreferredUsername: string;\n        public FullToken: any;\n\n    }\n\n    export interface IdentitySettings {\n        clientId: string;\n        appSecret?: string;\n        tokenProcessingUri: string;\n        version: EndPointVersion;\n        tokenStorage?: TokenStorage;\n        mode: Mode;\n    }\n\n    export class Identity {\n        public clientId: string;\n        private state: string;\n        private version: EndPointVersion;\n        private nonce: string;\n        private idToken: IdToken;\n        private loginCallback: (error: Error) => void;\n        private getTokenCallback: (token: string, error: Error) => void;\n        private tokenProcessorUrl: string;\n        private tokenCache: TokenCache;\n        private refreshTimer: any;\n        private policy: string = \"\";\n        private mode: Mode = Mode.Client;\n        private appSecret: string;\n        private NodePersistDataCallBack: (key: string, value: string, expiry: Date) => void;\n        private NodeRetrieveDataCallBack: (key: string) => string;\n        private req: any;\n        private res: any;\n        private https: any;\n\n\n        constructor(identitySettings: IdentitySettings) {\n            this.clientId = identitySettings.clientId;\n            this.tokenProcessorUrl = identitySettings.tokenProcessingUri;\n//          this.req = new XMLHttpRequest();\n            if (identitySettings.version)\n                this.version = identitySettings.version;\n            else\n                this.version = EndPointVersion.v1;\n            if (identitySettings.appSecret)\n                this.appSecret=identitySettings.appSecret;\n            this.mode = identitySettings.mode;\n\n            if (this.mode === Mode.Client) {\n\n                this.tokenCache = new TokenCache(identitySettings.tokenStorage);\n\n                //Callback handler from other windows\n                window.addEventListener(\"message\", event => {\n                    if (event.data.type === \"id_token\") {\n                        if (event.data.error) {\n                            var e: Error = new Error();\n                            e.text = event.data.error;\n                            this.loginCallback(e);\n\n                        } else {\n                            //check for state\n                            if (this.state !== event.data.state) {\n                                var error = new Error();\n                                error.statusText = \"Invalid state\";\n                                this.loginCallback(error);\n                            } else {\n                                this.decodeIdToken(event.data.token);\n                                this.loginCallback(null);\n                            }\n                        }\n                    } else if (event.data.type === \"access_token\") {\n                        if (event.data.error) {\n                            var e: Error = new Error();\n                            e.text = event.data.error;\n                            this.getTokenCallback(null, e);\n\n                        } else {\n                            var token: string = event.data.token;\n                            var iframe = document.getElementById(\"tokenIFrame\");\n                            iframe.parentNode.removeChild(iframe);\n\n                            if (event.data.state !== this.state) {\n                                var error = new Error();\n                                error.statusText = \"Invalid state\";\n                                this.getTokenCallback(null, error);\n                            }\n                            else {\n                                this.getTokenCallback(token, null);\n                            }\n                        }\n                    }\n                });\n            }\n        }\n\n        private parseQueryString(str: string) {\n            var queryString = str || window.location.search || '';\n            var keyValPairs: any[] = [];\n            var params: any = {};\n            queryString = queryString.replace(/.*?\\?/, \"\");\n\n            if (queryString.length) {\n                keyValPairs = queryString.split('&');\n                for (var pairNum in keyValPairs) {\n                    var key = keyValPairs[pairNum].split('=')[0];\n                    if (!key.length) continue;\n                    if (typeof params[key] === 'undefined')\n                        params[key] = [];\n                    params[key].push(keyValPairs[pairNum].split('=')[1]);\n                }\n            }\n            return params;\n        }\n\n        private token(s: string, url: string) {\n            var start = url.indexOf(s);\n            if (start < 0) return null;\n            var end = url.indexOf(\"&\", start + s.length);\n            return url.substring(start, ((end > 0) ? end : url.length));\n        }\n\n        public checkForIdentityRedirect(): boolean {\n            var params = this.parseQueryString(window.location.href);\n            var idToken = this.token(\"#id_token=\", window.location.href);\n            var accessToken = this.token(\"#access_token\", window.location.href);\n            if (idToken) {\n                if (true || this.state === params[\"state\"][0]) { //BUG? When you are in a pure redirect system you don't remember your state or nonce so don't check.\n                    this.decodeIdToken(idToken);\n                    this.loginCallback && this.loginCallback(null);\n                } else {\n                    var error = new Error();\n                    error.statusText = \"Invalid state\";\n                    this.loginCallback && this.loginCallback(error);\n                }\n                return true;\n            }\n            else if (accessToken) {\n                throw \"Should not get here.  This should be handled via the iframe approach.\"\n            }\n            return false;\n        }\n\n        private decodeIdToken(idToken: string): void {\n\n            var decodedToken = this.base64Decode(idToken.substring(idToken.indexOf('.') + 1, idToken.lastIndexOf('.')));\n            var decodedTokenJSON = JSON.parse(decodedToken);\n            var expiryDate = new Date(new Date('01/01/1970 0:0 UTC').getTime() + parseInt(decodedTokenJSON.exp) * 1000);\n            this.idToken = new IdToken();\n            this.idToken.FullToken = decodedTokenJSON;\n            this.idToken.Token = idToken;\n            this.idToken.Expiry = expiryDate;\n            this.idToken.UPN = decodedTokenJSON.upn;\n            this.idToken.TenantId = decodedTokenJSON.tid;\n            this.idToken.FamilyName = decodedTokenJSON.family_name;\n            this.idToken.GivenName = decodedTokenJSON.given_name;\n            this.idToken.Name = decodedTokenJSON.name;\n            this.idToken.PreferredUsername = decodedTokenJSON.preferred_username;\n\n            var expiration: Number = expiryDate.getTime() - new Date().getTime() - 300000;\n\n            this.refreshTimer = setTimeout((() => {\n                this.renewIdToken();\n            }), expiration);\n        }\n\n        private decodeAccessToken(accessToken: string, resource?:string, scopes?:string[]): CachedToken {\n            var decodedToken = this.base64Decode(accessToken.substring(accessToken.indexOf('.') + 1, accessToken.lastIndexOf('.')));\n            var decodedTokenJSON = JSON.parse(decodedToken);\n            var expiryDate = new Date(new Date('01/01/1970 0:0 UTC').getTime() + parseInt(decodedTokenJSON.exp) * 1000);\n            var key = resource || scopes.join(\" \");\n\n            var token = new CachedToken(key, scopes, resource, accessToken, expiryDate);\n            return token;\n        }\n\n        public getIdToken(): any {\n            return this.idToken;\n        }\n        public isLoggedIn(): boolean {\n            if (!this.idToken) return false;\n            return (this.idToken.Expiry > new Date());\n        }\n\n        private renewIdToken(): void {\n            clearTimeout(this.refreshTimer);\n            this.login(() => { });\n        }\n\n        public getCurrentEndPointVersion(): EndPointVersion {\n            return this.version;\n        }\n\n        public getAccessTokenAsync(resource: string): Promise<string,Error> {\n\n            var d = new Deferred<string,Error>();\n            this.getAccessToken(resource, ((error, token) => {\n                if (error) {\n                    d.reject(error);\n                } else {\n                    d.resolve(token);\n                }\n            }));\n            return d.promise;\n        }\n\n        public getAccessToken(resource: string, callback: PromiseCallback<string>): void {\n            if (this.version !== EndPointVersion.v1) {\n                var e = new Error();\n                e.statusText = \"Currently this identity class is using v2 OAuth mode. You need to use getAccessTokenForScopes() method\";\n                callback(e);\n                return;\n            }\n            if (this.mode === Mode.Client) {\n                var token = this.tokenCache.getForResource(resource);\n                if (token) {\n                    return callback(null, token.token);\n                }\n\n                //If we got this far, we need to go get this token\n\n                //Need to create the iFrame to invoke the acquire token\n                this.getTokenCallback = ((token: string, error: Error) => {\n                    if (error) {\n                        callback(error);\n                    }\n                    else {\n                        var t = this.decodeAccessToken(token, resource);\n                        this.tokenCache.add(t);\n                        callback(null, token);\n                    }\n                });\n\n                this.nonce = \"token\" + this.generateNonce();\n                this.state = \"token\" + this.generateNonce();\n\n                var iframe = document.createElement('iframe');\n                iframe.style.display = \"none\";\n                iframe.id = \"tokenIFrame\";\n\n                iframe.src = this.tokenProcessorUrl + \"?clientId=\" + encodeURIComponent(this.clientId) +\n                    \"&resource=\" + encodeURIComponent(resource) +\n                    \"&redirectUri=\" + encodeURIComponent(this.tokenProcessorUrl) +\n                    \"&state=\" + encodeURIComponent(this.state) +\n                    \"&version=\" + encodeURIComponent(this.version.toString()) +\n                    \"&nonce=\" + encodeURIComponent(this.nonce) +\n                    \"&op=token\";\n\n                document.body.appendChild(iframe);\n            } else {\n                var cookies = this.parseNodeCookies(this.req);\n                var upn = this.NodeRetrieveDataCallBack(\"session|\" + cookies[\"kurveSession\"]);\n                var code = this.NodeRetrieveDataCallBack(\"code|\" + upn);\n\n                var post_data = \"grant_type=authorization_code\" +\n                    \"&client_id=\" + encodeURIComponent(this.clientId) +\n                    \"&code=\" + encodeURIComponent(code) +\n                    \"&redirect_uri=\" + encodeURIComponent(this.tokenProcessorUrl) +\n                    \"&resource=\" + encodeURIComponent(resource) +\n                    \"&client_secret=\" + encodeURIComponent(this.appSecret);\n\n                var post_options = {\n                    host: 'login.microsoftonline.com',\n                    port: '443',\n                    path: '/common/oauth2/token',\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                        'Content-Length': post_data.length,\n                        accept: '*/*'\n                    }\n                };\n\n                var post_req = this.https.request(post_options, (response) => {\n                    response.setEncoding('utf8');\n                    response.on('data', (chunk) => {\n                        var chunkJson = JSON.parse(chunk);\n                        var t = this.decodeAccessToken(chunkJson.access_token, resource);\n                        // this.tokenCache.add(t); //TODO: Persist/retrieve token cache no server\n                        callback(null, chunkJson.access_token);\n                    });\n                });\n\n                post_req.write(post_data);\n                post_req.end();\n            }\n        }\n\n        private parseNodeCookies(req) {\n            var list = {};\n            var rc = req.headers.cookie;\n\n            rc && rc.split(';').forEach(function (cookie) {\n                var parts = cookie.split('=');\n                list[parts.shift().trim()] = decodeURI(parts.join('='));\n            });\n\n            return list;\n        }\n        public handleNodeCallback(req: any, res: any, https: any, crypto: any, persistDataCallback: (key: string, value: string, expiry: Date) => void, retrieveDataCallback: (key: string) => string): Promise<boolean, Error> {\n            this.NodePersistDataCallBack = persistDataCallback;\n            this.NodeRetrieveDataCallBack = retrieveDataCallback;\n            var url: string = <string>req.url;\n\n            this.req = req;\n            this.res = res;\n            this.https = https;\n\n            var params = this.parseQueryString(url);\n            var code = this.token(\"code=\", url);\n            var accessToken = this.token(\"#access_token\", url);\n            var cookies = this.parseNodeCookies(req);\n\n            var d = new Deferred<boolean, Error>();\n\n            if (this.version === EndPointVersion.v1) {\n\n                if (code) {\n                    var codeFromRequest = params[\"code\"][0];\n                    var stateFromRequest = params[\"state\"][0];\n                    var cachedState = retrieveDataCallback(\"state|\" + stateFromRequest);\n                    if (cachedState) {\n                        if (cachedState === \"waiting\") {\n                            var expiry = new Date(new Date().getTime() + 86400000);\n                            persistDataCallback(\"state|\" + stateFromRequest, \"done\", expiry);\n\n                            var post_data = \"grant_type=authorization_code\" +\n                                \"&client_id=\" + encodeURIComponent(this.clientId) +\n                                \"&code=\" + encodeURIComponent(codeFromRequest) +\n                                \"&redirect_uri=\" + encodeURIComponent(this.tokenProcessorUrl) +\n                                \"&resource=\" + encodeURIComponent(\"https://graph.microsoft.com\") +\n                                \"&client_secret=\" + encodeURIComponent(this.appSecret);\n\n                            var post_options = {\n                                host: 'login.microsoftonline.com',\n                                port: '443',\n                                path: '/common/oauth2/token',\n                                method: 'POST',\n                                headers: {\n                                    'Content-Type': 'application/x-www-form-urlencoded',\n                                    'Content-Length': post_data.length,\n                                    accept: '*/*'\n                                }\n                            };\n\n                            var post_req = https.request(post_options, (response) => {\n                                response.setEncoding('utf8');\n                                response.on('data', (chunk) => {\n                                    var chunkJson = JSON.parse(chunk);\n                                    var decodedToken = JSON.parse(this.base64Decode(chunkJson.access_token.substring(chunkJson.access_token.indexOf('.') + 1, chunkJson.access_token.lastIndexOf('.'))));\n                                    var upn = decodedToken.upn;\n                                    var sha = crypto.createHash('sha256');\n                                    sha.update(Math.random().toString());\n                                    var sessionID = sha.digest('hex');\n                                    var expiry = new Date(new Date().getTime() + 30 * 60 * 1000);\n                                    persistDataCallback(\"session|\" + sessionID, upn, expiry);\n                                    persistDataCallback(\"code|\" + upn, codeFromRequest, expiry);\n                                    res.writeHead(302, {\n                                        'Set-Cookie': 'kurveSession=' + sessionID,\n                                        'Location': '/'\n                                    });\n                                    res.end();\n                                    d.resolve(false);\n\n                                });\n                            });\n\n                            post_req.write(post_data);\n                            post_req.end();\n                        } else {\n                            //same state has been reused, not allowed\n                            res.writeHead(500, \"Replay detected\", { 'content-type': 'text/plain' });\n                            res.end(\"Replay detected\");\n                            d.resolve(false);\n                        }\n                    }\n                    else {\n                        //state doesn't match any of our cached ones\n                        res.writeHead(500, \"State doesn't match\", { 'content-type': 'text/plain' });\n                        res.end(\"State doesn't match\");\n                        d.resolve(false);\n                    }\n                    return d.promise;\n\n                } else {\n                    if (cookies[\"kurveSession\"]) {\n                        var upn = retrieveDataCallback(\"session|\" + cookies[\"kurveSession\"]);\n                        if (upn) {\n                            d.resolve(true);\n                            return d.promise;\n                        }\n                    }\n                    var state: string = this.generateNonce();\n                    var expiry = new Date(new Date().getTime() + 900000);\n\n                    persistDataCallback(\"state|\" + state, \"waiting\", expiry);\n\n                    var url = \"https://login.microsoftonline.com/common/oauth2/authorize?response_type=code&client_id=\" +\n                        encodeURIComponent(this.clientId) +\n                        \"&redirect_uri=\" + encodeURIComponent(this.tokenProcessorUrl) +\n                        \"&state=\" + encodeURIComponent(state);\n\n                    res.writeHead(302, { 'Location': url });\n\n                    res.end();\n                    d.resolve(false);\n                    return d.promise;\n                }\n            } else {\n                //TODO: v2\n                d.resolve(false);\n                return d.promise;\n            }\n        }\n        public getAccessTokenForScopesAsync(scopes: string[], promptForConsent = false): Promise<string, Error> {\n\n            var d = new Deferred<string, Error>();\n            this.getAccessTokenForScopes(scopes, promptForConsent, (token, error) => {\n                if (error) {\n                    d.reject(error);\n                } else {\n                    d.resolve(token);\n                }\n            });\n            return d.promise;\n        }\n\n        public getAccessTokenForScopes(scopes: string[], promptForConsent, callback: (token: string, error: Error) => void): void {\n            if (this.version !== EndPointVersion.v2) {\n                var e = new Error();\n                e.statusText = \"Dynamic scopes require v2 mode. Currently this identity class is using v1\";\n                callback(null, e);\n                return;\n            }\n\n            var token = this.tokenCache.getForScopes(scopes);\n            if (token) {\n                return callback(token.token, null);\n            }\n\n            //If we got this far, we don't have a valid cached token, so will need to get one.\n\n            //Need to create the iFrame to invoke the acquire token\n\n            this.getTokenCallback = ((token: string, error: Error) => {\n                if (error) {\n                    if (promptForConsent || !error.text) {\n                        callback(null, error);\n                    } else if (error.text.indexOf(\"AADSTS65001\")>=0) {\n                        //We will need to try getting the consent\n                        this.getAccessTokenForScopes(scopes, true, this.getTokenCallback);\n                    } else {\n                        callback(null, error);\n                    }\n                }\n                else {\n                    var t = this.decodeAccessToken(token, null, scopes);\n                    this.tokenCache.add(t);\n                    callback(token, null);\n                }\n            });\n\n            this.nonce = \"token\" + this.generateNonce();\n            this.state = \"token\" + this.generateNonce();\n\n            if (!promptForConsent) {\n                var iframe = document.createElement('iframe');\n                iframe.style.display = \"none\";\n                iframe.id = \"tokenIFrame\";\n                iframe.src = this.tokenProcessorUrl + \"?clientId=\" + encodeURIComponent(this.clientId) +\n                    \"&scopes=\" + encodeURIComponent(scopes.join(\" \")) +\n                    \"&redirectUri=\" + encodeURIComponent(this.tokenProcessorUrl) +\n                    \"&version=\" + encodeURIComponent(this.version.toString()) +\n                    \"&state=\" + encodeURIComponent(this.state) +\n                    \"&nonce=\" + encodeURIComponent(this.nonce) +\n                    \"&login_hint=\" + encodeURIComponent(this.idToken.PreferredUsername) +\n                    \"&domain_hint=\" + encodeURIComponent(this.idToken.TenantId === \"9188040d-6c67-4c5b-b112-36a304b66dad\" ? \"consumers\" : \"organizations\") +\n                    \"&op=token\";\n                document.body.appendChild(iframe);\n            } else {\n                window.open(this.tokenProcessorUrl + \"?clientId=\" + encodeURIComponent(this.clientId) +\n                    \"&scopes=\" + encodeURIComponent(scopes.join(\" \")) +\n                    \"&redirectUri=\" + encodeURIComponent(this.tokenProcessorUrl) +\n                    \"&version=\" + encodeURIComponent(this.version.toString()) +\n                    \"&state=\" + encodeURIComponent(this.state) +\n                    \"&nonce=\" + encodeURIComponent(this.nonce) +\n                    \"&op=token\"\n                    , \"_blank\");\n            }\n        }\n\n        public loginAsync(loginSettings?: { scopes?: string[], policy?: string, tenant?: string }): Promise<void, Error> {\n        //TODO: Not node compatible\n            var d = new Deferred<void, Error>();\n            this.login((error) => {\n                if (error) {\n                    d.reject(error);\n                }\n                else {\n                    d.resolve(null);\n                }\n            }, loginSettings);\n            return d.promise;\n        }\n\n        public login(callback: (error: Error) => void, loginSettings?: { scopes?: string[], policy?: string, tenant?: string }): void {\n        //TODO: Not node compatible\n            this.loginCallback = callback;\n            if (!loginSettings) loginSettings = {};\n            if (loginSettings.policy) this.policy = loginSettings.policy;\n\n            if (loginSettings.scopes && this.version === EndPointVersion.v1) {\n                var e = new Error();\n                e.text = \"Scopes can only be used with OAuth v2.\";\n                callback(e);\n                return;\n            }\n\n            if (loginSettings.policy && !loginSettings.tenant) {\n                var e = new Error();\n                e.text = \"In order to use policy (AAD B2C) a tenant must be specified as well.\";\n                callback(e);\n                return;\n            }\n            this.state = \"login\" + this.generateNonce();\n            this.nonce = \"login\" + this.generateNonce();\n            var loginURL = this.tokenProcessorUrl + \"?clientId=\" + encodeURIComponent(this.clientId) +\n                \"&redirectUri=\" + encodeURIComponent(this.tokenProcessorUrl) +\n                \"&state=\" + encodeURIComponent(this.state) +\n                \"&nonce=\" + encodeURIComponent(this.nonce) +\n                \"&version=\" + encodeURIComponent(this.version.toString()) +\n                \"&op=login\" +\n                \"&p=\" + encodeURIComponent(this.policy);\n            if (loginSettings.tenant) {\n                loginURL += \"&tenant=\" + encodeURIComponent(loginSettings.tenant);\n            }\n            if (this.version === EndPointVersion.v2) {\n                    if (!loginSettings.scopes) loginSettings.scopes = [];\n                    if (loginSettings.scopes.indexOf(\"profile\") < 0)\n                        loginSettings.scopes.push(\"profile\");\n                    if (loginSettings.scopes.indexOf(\"openid\") < 0)\n                        loginSettings.scopes.push(\"openid\");\n\n                    loginURL += \"&scopes=\" + encodeURIComponent(loginSettings.scopes.join(\" \"));\n            }\n            window.open(loginURL, \"_blank\");\n        }\n\n\n        public loginNoWindowAsync(toUrl?: string): Promise<void, Error> {\n        //TODO: Not node compatible\n            var d = new Deferred<void, Error>();\n            this.loginNoWindow((error) => {\n                if (error) {\n                    d.reject(error);\n                }\n                else {\n                    d.resolve(null);\n                }\n            }, toUrl);\n            return d.promise;\n        }\n\n        public loginNoWindow(callback: (error: Error) => void, toUrl?: string): void {\n        //TODO: Not node compatible\n            this.loginCallback = callback;\n            this.state = \"clientId=\" + this.clientId + \"&\" + \"tokenProcessorUrl=\" + this.tokenProcessorUrl\n            this.nonce = this.generateNonce();\n\n            var redirected = this.checkForIdentityRedirect();\n            if (!redirected) {\n                var redirectUri = (toUrl) ? toUrl : window.location.href.split(\"#\")[0];  // default the no login window scenario to return to the current page\n                var url = \"https://login.microsoftonline.com/common/oauth2/authorize?response_type=id_token\" +\n                    \"&client_id=\" + encodeURIComponent(this.clientId) +\n                    \"&redirect_uri=\" + encodeURIComponent(redirectUri) +\n                    \"&state=\" + encodeURIComponent(this.state) +\n                    \"&nonce=\" + encodeURIComponent(this.nonce);\n                window.location.href = url;\n            }\n        }\n\n        public logOut(): void {\n        //TODO: Not node compatible\n            this.tokenCache.clear();\n            var url = \"https://login.microsoftonline.com/common/oauth2/logout?post_logout_redirect_uri=\" + encodeURI(window.location.href);\n            window.location.href = url;\n        }\n\n        private base64Decode(encodedString: string): string {\n            var e: any = {}, i: number, b = 0, c: number, x: number, l = 0, a: any, r = '', w = String.fromCharCode, L = encodedString.length;\n            var A = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n            for (i = 0; i < 64; i++) { e[A.charAt(i)] = i; }\n            for (x = 0; x < L; x++) {\n                c = e[encodedString.charAt(x)];\n                b = (b << 6) + c;\n                l += 6;\n                while (l >= 8) {\n                    ((a = (b >>> (l -= 8)) & 0xff) || (x < (L - 2))) && (r += w(a));\n                }\n            }\n            return r;\n        }\n\n        private generateNonce(): string {\n            var text = \"\";\n            var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n            for (var i = 0; i < 32; i++) {\n                text += chars.charAt(Math.floor(Math.random() * chars.length));\n            }\n            return text;\n        }\n    }\n\n\n\n\n    export class Graph {\n        private req: XMLHttpRequest = null;\n        private accessToken: string = null;\n        KurveIdentity: Identity = null;\n        private defaultResourceID: string = \"https://graph.microsoft.com\";\n        private baseUrl: string = \"https://graph.microsoft.com/v1.0\";\n        private https: any;\n        private mode: Mode;\n\n        constructor(identityInfo: { identity: Identity }, mode: Mode, https?: any);\n        constructor(identityInfo: { defaultAccessToken: string },mode:Mode, https?: any);\n        constructor(identityInfo: any, mode: Mode, https?: any) {\n            if (https) this.https = https;\n            this.mode = mode;\n            if (identityInfo.defaultAccessToken) {\n                this.accessToken = identityInfo.defaultAccessToken;\n            } else {\n                this.KurveIdentity = identityInfo.identity;\n            }\n        }\n\n        get me() { return new User(this, this.baseUrl); }\n        get users() { return new Users(this, this.baseUrl); }\n        get groups() { return new Groups(this, this.baseUrl); }\n\n        public Get<Model, N extends Node>(path:string, self:N, scopes?:string[], responseType?:string): Promise<Singleton<Model, N>, Error> {\n            console.log(\"GET\", path, scopes);\n            var d = new Deferred<Singleton<Model, N>, Error>();\n\n            this.get(path, (error, result) => {\n                if (!responseType) {\n                    var jsonResult = JSON.parse(result) ;\n\n                    if (jsonResult.error) {\n                        var errorODATA = new Error();\n                        errorODATA.other = jsonResult.error;\n                        d.reject(errorODATA);\n                        return;\n                    }\n                    d.resolve(singletonFromResponse<Model, N>(jsonResult, self));\n                } else {\n                    d.resolve(singletonFromResponse<Model, N>(result, self));\n                }\n\n                \n            }, responseType, scopes);\n\n            return d.promise;\n         }\n         \n        public GetCollection<Model, C extends CollectionNode, N extends Node>(path:string, self:C, childFactory:ChildFactory<Model, N>, scopes?:string[]): Promise<Collection<Model, C, N>, Error> {\n            console.log(\"GET collection\", path, scopes);\n            var d = new Deferred<Collection<Model, C, N>, Error>();\n\n            this.get(path, (error, result) => {\n                var jsonResult = JSON.parse(result) ;\n\n                if (jsonResult.error) {\n                    var errorODATA = new Error();\n                    errorODATA.other = jsonResult.error;\n                    d.reject(errorODATA);\n                    return;\n                }\n                \n                d.resolve(collectionFromResponse<Model, C, N>(jsonResult, self, this, childFactory, scopes));\n            }, null, scopes);\n\n            return d.promise;\n         }\n\n        public Post<Model, N extends Node>(object:Model, path:string, self:N, scopes?:string[]): Promise<Singleton<Model, N>, Error> {\n            console.log(\"POST\", path, scopes);\n            var d = new Deferred<Singleton<Model, N>, Error>();\n            \n/*\n            this.post(object, path, (error, result) => {\n                var jsonResult = JSON.parse(result) ;\n\n                if (jsonResult.error) {\n                    var errorODATA = new Error();\n                    errorODATA.other = jsonResult.error;\n                    d.reject(errorODATA);\n                    return;\n                }\n\n                d.resolve(new Response<Model, N>({}, self));\n            });\n*/\n            return d.promise;\n         }\n \n        public get(url: string, callback: PromiseCallback<string>, responseType?: string, scopes?: string[]): void {\n            if (this.mode === Mode.Client) {\n                var xhr = new XMLHttpRequest();\n                if (responseType)\n                    xhr.responseType = responseType;\n                xhr.onreadystatechange = () => {\n                    if (xhr.readyState === 4)\n                        if (xhr.status === 200)\n                            callback(null, responseType ? xhr.response : xhr.responseText);\n                        else\n                            callback(this.generateError(xhr));\n                }\n\n                xhr.open(\"GET\", url);\n                this.addAccessTokenAndSend(xhr, (addTokenError: Error) => {\n                    if (addTokenError) {\n                        callback(addTokenError);\n                    }\n                }, scopes);\n            } else {\n                var token = this.findAccessToken((token, error) => {\n                    var path = url.substr(27, url.length);\n                    var options = {\n                        host: 'graph.microsoft.com',\n                        port: '443',\n                        path: path,\n                        method: 'GET',\n                        headers: {\n                           'Content-Type': responseType?responseType:'application/json',\n                            accept: '*/*',\n                            'Authorization': 'Bearer ' + token\n                        }\n                    };\n\n                    var post_req = this.https.request(options, (response) => {\n                        response.setEncoding('utf8');\n                        response.on('data', (chunk) => {\n                            callback(null, chunk);\n                        });\n                    });\n\n                    post_req.end();\n\n                }, scopes);\n            }\n        }\n        private findAccessToken(callback: (token: string, error: Error) => void, scopes?: string[]): void {\n            if (this.accessToken) {\n                callback(this.accessToken, null);\n            } else {\n                //Using the integrated Identity object\n\n                if (scopes) {\n                    //v2 scope based tokens\n                    this.KurveIdentity.getAccessTokenForScopes(scopes, false, ((token: string, error: Error) => {\n                        if (error)\n                            callback(null, error);\n                        else {\n                            callback(token, null);\n                        }\n                    }));\n\n                }\n                else {\n                    //v1 resource based tokens\n                    this.KurveIdentity.getAccessToken(this.defaultResourceID, ((error: Error, token: string) => {\n                        if (error)\n                            callback(null, error);\n                        else {\n                            callback(token, null);\n                        }\n                    }));\n                }\n            }\n        }\n\n\n        public post(object:string, url: string, callback: PromiseCallback<string>, responseType?: string, scopes?:string[]): void {\n/*\n            var xhr = new XMLHttpRequest();\n            if (responseType)\n                xhr.responseType = responseType;\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4)\n                    if (xhr.status === 202)\n                        callback(null, responseType ? xhr.response : xhr.responseText);\n                    else\n                        callback(this.generateError(xhr));\n            }\n            xhr.send(object)\n            xhr.open(\"GET\", url);\n            this.addAccessTokenAndSend(xhr, (addTokenError: Error) => {\n                if (addTokenError) {\n                    callback(addTokenError);\n                }\n            }, scopes);\n*/\n        }\n\n        private generateError(xhr: XMLHttpRequest): Error {\n            var response = new Error();\n            response.status = xhr.status;\n            response.statusText = xhr.statusText;\n            if (xhr.responseType === '' || xhr.responseType === 'text')\n                response.text = xhr.responseText;\n            else\n                response.other = xhr.response;\n            return response;\n\n        }\n\n        private addAccessTokenAndSend(xhr: XMLHttpRequest, callback: (error: Error) => void, scopes?: string[]): void {\n            this.findAccessToken((token, error) => {\n                if (token) {\n                    xhr.setRequestHeader('Authorization', 'Bearer ' + token);\n                    xhr.send();\n                } else {\n                    callback(error);\n                }\n            }, scopes);\n        }\n\n    }\n\n\n\n\n\nexport interface ItemBody {\n    contentType?: string;\n    content?: string;\n}\n\nexport interface EmailAddress {\n    name?: string;\n    address?: string;\n}\n\nexport interface Recipient {\n    emailAddress?: EmailAddress;\n}\n\nexport interface UserDataModel {\n    businessPhones?: string;\n    displayName?: string;\n    givenName?: string;\n    jobTitle?: string;\n    mail?: string;\n    mobilePhone?: string;\n    officeLocation?: string;\n    preferredLanguage?: string;\n    surname?: string;\n    userPrincipalName?: string;\n    id?: string;\n}\n\nexport interface ProfilePhotoDataModel {\n    id?: string;\n    height?: Number;\n    width?: Number;\n}\n\nexport interface MessageDataModel {\n    attachments?: AttachmentDataModel[];\n    bccRecipients?: Recipient[];\n    body?: ItemBody;\n    bodyPreview?: string;\n    categories?: string[]\n    ccRecipients?: Recipient[];\n    changeKey?: string;\n    conversationId?: string;\n    createdDateTime?: string;\n    from?: Recipient;\n    graph?: any;\n    hasAttachments?: boolean;\n    id?: string;\n    importance?: string;\n    isDeliveryReceiptRequested?: boolean;\n    isDraft?: boolean;\n    isRead?: boolean;\n    isReadReceiptRequested?: boolean;\n    lastModifiedDateTime?: string;\n    parentFolderId?: string;\n    receivedDateTime?: string;\n    replyTo?: Recipient[]\n    sender?: Recipient;\n    sentDateTime?: string;\n    subject?: string;\n    toRecipients?: Recipient[];\n    webLink?: string;\n}\n\nexport interface Attendee {\n    status?: ResponseStatus;\n    type?: string;\n    emailAddress?: EmailAddress;\n}\n\nexport interface DateTimeTimeZone {\n    dateTime?: string;\n    timeZone?: string;\n}\n\nexport interface PatternedRecurrence { }\n\nexport interface ResponseStatus {\n    response?: string;\n    time?: string\n}\n\nexport interface Location {\n    displayName?: string;\n    address?: any;\n}\n\nexport interface EventDataModel {\n    attendees?: Attendee[];\n    body?: ItemBody;\n    bodyPreview?: string;\n    categories?: string[];\n    changeKey?: string;\n    createdDateTime?: string;\n    end?: DateTimeTimeZone;\n    hasAttachments?: boolean;\n    iCalUId?: string;\n    id?: string;\n    IDBCursor?: string;\n    importance?: string;\n    isAllDay?: boolean;\n    isCancelled?: boolean;\n    isOrganizer?: boolean;\n    isReminderOn?: boolean;\n    lastModifiedDateTime?: string;\n    location?: Location;\n    organizer?: Recipient;\n    originalEndTimeZone?: string;\n    originalStartTimeZone?: string;\n    recurrence?: PatternedRecurrence;\n    reminderMinutesBeforeStart?: number;\n    responseRequested?: boolean;\n    responseStatus?: ResponseStatus;\n    sensitivity?: string;\n    seriesMasterId?: string;\n    showAs?: string;\n    start?: DateTimeTimeZone;\n    subject?: string;\n    type?: string;\n    webLink?: string;\n}\n\nexport interface GroupDataModel {\n    id?: string;\n    description?: string;\n    displayName?: string;\n    groupTypes?: string[];\n    mail?: string;\n    mailEnabled?: Boolean;\n    mailNickname?: string;\n    onPremisesLastSyncDateTime?: Date;\n    onPremisesSecurityIdentifier?: string;\n    onPremisesSyncEnabled?: Boolean;\n    proxyAddresses?: string[];\n    securityEnabled?: Boolean;\n    visibility?: string;\n}\n\nexport interface MailFolderDataModel {\n    id?: string;\n    displayName?: string;\n    childFolderCount?: number;\n    unreadItemCount?: number;\n    totalItemCount?: number;\n}\n\nexport interface AttachmentDataModel {\n    contentId?: string;\n    id?: string;\n    isInline?: boolean;\n    lastModifiedDateTime?: Date;\n    name?: string;\n    size?: number;\n\n    /* File Attachments */\n    contentBytes?: string;\n    contentLocation?: string;\n    contentType?: string;\n}\n\n\n\n\n/*\n\nRequestBuilder allows you to discover and access the Microsoft Graph using Visual Studio Code intellisense.\n\nJust start typing and see how intellisense helps you explore the graph:\n\n    graph.                      me, users\n    graph.me.                   events, messages, calendarView, mailFolders, GetUser, odata, select, ...\n    graph.me.events.            GetEvents, $, odata, select, ...\n    graph.me.events.$           (eventId:string) => Event\n    graph.me.events.$(\"123\").   GetEvent, odata, select, ...\n\nEach endpoint exposes the set of available Graph operations through strongly typed methods:\n\n    graph.me.GetUser() => UserDataModel\n        GET \"/me\"\n    graph.me.events.GetEvents => EventDataModel[]\n        GET \"/me/events\"\n    graph.me.events.CreateEvent(event:EventDataModel) \n        POST \"/me/events\"\n\nCertain Graph endpoints are implemented as OData \"Functions\". These are not treated as Graph nodes. They're just methods: \n\n    graph.me.events.$(\"123\").DeclineEvent(eventResponse:EventResponse)\n        POST \"/me/events/123/microsoft.graph.decline\n\nGraph operations are exposed through Promises:\n\n    graph.me.messages\n    .GetMessages()\n    .then(collection =>\n        collection.items.forEach(message =>\n            console.log(message.subject)\n        )\n    )\n\nAll operations return a \"self\" property which allows you to continue along the Graph path from the point where you left off:\n\n    graph.me.messages.$(\"123\").GetMessage().then(singleton =>\n        console.log(singleton.item.subject);\n        singleton.self.attachments.GetAttachments().then(collection => // singleton.self === graph.me.messages.$(\"123\")\n            collection.items.forEach(attachment => \n                console.log(attachment.contentBytes)\n            )\n        )\n    )\n\nOperations which return paginated collections can return a \"next\" request object. This can be utilized in a recursive function:\n\n    ListMessageSubjects(messages:Messages, odata?:string) {\n        messages.GetMessages(odata).then(collection => {\n            collection.items.forEach(message => console.log(message.subject));\n            if (collection.next)\n                ListMessageSubjects(collection.next); // don't need odata after the first time\n        })\n    }\n    ListMessageSubjects(graph.me.messages, new OData().select(\"subject\").toString());\n    \n(With async/await support, an iteration pattern can be used intead of recursion)\n\nEvery Graph operation may include OData queries:\n\n    graph.me.messages.GetMessages(\"$select=subject,id&$orderby=id\")\n        /me/messages/$select=subject,id&$orderby=id\n\nThere is an optional OData helper to aid in constructing more complex queries:\n\n    graph.me.messages.GetMessages(new OData()\n        .select(\"subject\", \"id\")\n        .orderby(\"id\")\n    )\n        /me/messages/$select=subject,id&$orderby=id\n\nSome operations include parameters which transform into OData queries \n\n    graph.me.calendarView.GetCalendarView([start],[end], [odataQuery])\n        /me/calendarView?startDateTime=[start]&endDateTime=[end]&[odataQuery]\n\nNote: This initial stab only includes a few familiar pieces of the Microsoft Graph.\n*/\n\n\nexport class Scopes {\n    private static rootUrl = \"https://graph.microsoft.com/\";\n    static General = {\n        OpenId: \"openid\",\n        OfflineAccess: \"offline_access\",\n    }\n    static User = {\n        Read: Scopes.rootUrl + \"User.Read\",\n        ReadAll: Scopes.rootUrl + \"User.Read.All\",\n        ReadWrite: Scopes.rootUrl + \"User.ReadWrite\",\n        ReadWriteAll: Scopes.rootUrl + \"User.ReadWrite.All\",\n        ReadBasicAll: Scopes.rootUrl + \"User.ReadBasic.All\",\n    }\n    static Contacts = {\n        Read: Scopes.rootUrl + \"Contacts.Read\",\n        ReadWrite: Scopes.rootUrl + \"Contacts.ReadWrite\",\n    }\n    static Directory = {\n        ReadAll: Scopes.rootUrl + \"Directory.Read.All\",\n        ReadWriteAll: Scopes.rootUrl + \"Directory.ReadWrite.All\",\n        AccessAsUserAll: Scopes.rootUrl + \"Directory.AccessAsUser.All\",\n    }\n    static Group = {\n        ReadAll: Scopes.rootUrl + \"Group.Read.All\",\n        ReadWriteAll: Scopes.rootUrl + \"Group.ReadWrite.All\",\n        AccessAsUserAll: Scopes.rootUrl + \"Directory.AccessAsUser.All\"\n    }\n    static Mail = {\n        Read: Scopes.rootUrl + \"Mail.Read\",\n        ReadWrite: Scopes.rootUrl + \"Mail.ReadWrite\",\n        Send: Scopes.rootUrl + \"Mail.Send\",\n    }\n    static Calendars = {\n        Read: Scopes.rootUrl + \"Calendars.Read\",\n        ReadWrite: Scopes.rootUrl + \"Calendars.ReadWrite\",\n    }\n    static Files = {\n        Read: Scopes.rootUrl + \"Files.Read\",\n        ReadAll: Scopes.rootUrl + \"Files.Read.All\",\n        ReadWrite: Scopes.rootUrl + \"Files.ReadWrite\",\n        ReadWriteAppFolder: Scopes.rootUrl + \"Files.ReadWrite.AppFolder\",\n        ReadWriteSelected: Scopes.rootUrl + \"Files.ReadWrite.Selected\",\n    }\n    static Tasks = {\n        ReadWrite: Scopes.rootUrl + \"Tasks.ReadWrite\",\n    }\n    static People = {\n        Read: Scopes.rootUrl + \"People.Read\",\n        ReadWrite: Scopes.rootUrl + \"People.ReadWrite\",\n    }\n    static Notes = {\n        Create: Scopes.rootUrl + \"Notes.Create\",\n        ReadWriteCreatedByApp: Scopes.rootUrl + \"Notes.ReadWrite.CreatedByApp\",\n        Read: Scopes.rootUrl + \"Notes.Read\",\n        ReadAll: Scopes.rootUrl + \"Notes.Read.All\",\n        ReadWriteAll: Scopes.rootUrl + \"Notes.ReadWrite.All\",\n    }\n}\n\nlet queryUnion = (query1:string, query2:string) => (query1 ? query1 + (query2 ? \"&\" + query2 : \"\" ) : query2); \n\nexport class OData {\n    constructor(public query?:string) {\n    }\n    \n    toString = () => this.query;\n\n    odata = (query:string) => {\n        this.query = queryUnion(this.query, query);\n        return this;\n    }\n\n    select   = (...fields:string[])  => this.odata(`$select=${fields.join(\",\")}`);\n    expand   = (...fields:string[])  => this.odata(`$expand=${fields.join(\",\")}`);\n    filter   = (query:string)        => this.odata(`$filter=${query}`);\n    orderby  = (...fields:string[])  => this.odata(`$orderby=${fields.join(\",\")}`);\n    top      = (items:Number)        => this.odata(`$top=${items}`);\n    skip     = (items:Number)        => this.odata(`$skip=${items}`);\n}\n\ntype ODataQuery = OData | string;\n\nlet pathWithQuery = (path:string, odataQuery?:ODataQuery) => {\n    let query = odataQuery && odataQuery.toString();\n    return path + (query ? \"?\" + query : \"\");\n}\n\nexport type Singleton<Model, N extends Node> = Model & {\n    _self?: N\n};\n\nexport function singletonFromResponse<Model, N extends Node>(response:any, self:N) {\n    let singleton = response as Singleton<Model, N>;\n    singleton._self = self;\n    return singleton;\n}\n\nexport type ChildFactory<Model, N extends Node> = (id:string) => N;\n\nexport type Collection<Model, C extends CollectionNode, N extends Node> = Array<Singleton<Model, N>> & {\n    _next?: () => Promise<Collection<Model, C, N>, Error>,\n    _self?: C\n};\n\nexport function collectionFromResponse<Model, C extends CollectionNode, N extends Node>(response:any, self:C, graph:Graph, childFactory?:ChildFactory<Model, N>, scopes?:string[]) {\n    let collection = response as Collection<Model, C, N>;\n    collection._self = self;\n    let nextLink = response[\"@odata.nextLink\"];\n    if (nextLink)\n        collection._next = () => graph.GetCollection<Model, C, N>(nextLink, self, childFactory, scopes);\n    if (childFactory)\n        collection.forEach(item => item._self = item[\"id\"] && childFactory(item[\"id\"]));\n    return collection;\n}\n\nexport abstract class Node {\n    constructor(protected graph:Graph, protected path:string) {\n    }\n\n    //Only adds scopes when linked to a v2 Oauth of kurve identity\n    protected scopesForV2 = (scopes: string[]) =>\n        this.graph.KurveIdentity && this.graph.KurveIdentity.getCurrentEndPointVersion() === EndPointVersion.v2 ? scopes : null;\n    \n    pathWithQuery = (odataQuery?:ODataQuery, pathSuffix:string = \"\") => pathWithQuery(this.path + pathSuffix, odataQuery);\n}\n\nexport abstract class CollectionNode extends Node {    \n    private _nextLink:string;   // this is only set when the collection in question is from a nextLink\n\n    pathWithQuery = (odataQuery?:ODataQuery, pathSuffix:string = \"\") => this._nextLink || pathWithQuery(this.path + pathSuffix, odataQuery);\n    \n    set nextLink(pathWithQuery:string) {\n        this._nextLink = pathWithQuery;\n    }\n}\n\nexport class Attachment extends Node {\n    constructor(graph:Graph, path:string=\"\", private context:string, attachmentId?:string) {\n        super(graph, path + (attachmentId ? \"/\" + attachmentId : \"\"));\n    }\n\n    static scopes = {\n        messages: [Scopes.Mail.Read],\n        events: [Scopes.Calendars.Read],\n    }\n    \n    GetAttachment = (odataQuery?:ODataQuery) => this.graph.Get<AttachmentDataModel, Attachment>(this.pathWithQuery(odataQuery), this, this.scopesForV2(Attachment.scopes[this.context]));\n/*    \n    PATCH = this.graph.PATCH<AttachmentDataModel>(this.path, this.query);\n    DELETE = this.graph.DELETE<AttachmentDataModel>(this.path, this.query);\n*/\n}\nexport class Attachments extends CollectionNode {\n    constructor(graph:Graph, path:string=\"\", private context:string) {\n        super(graph, path + \"/attachments\");\n    }\n\n    $ = (attachmentId:string) => new Attachment(this.graph, this.path, this.context, attachmentId);\n    \n    GetAttachments = (odataQuery?:ODataQuery) => this.graph.GetCollection<AttachmentDataModel, Attachments, Attachment>(this.pathWithQuery(odataQuery), this, this.$, this.scopesForV2(Attachment.scopes[this.context]));\n/*\n    POST = this.graph.POST<AttachmentDataModel>(this.path, this.query);\n*/\n}\n\nexport class Message extends Node {\n    constructor(graph:Graph, path:string=\"\", messageId?:string) {\n        super(graph, path + (messageId ? \"/\" + messageId : \"\"));\n    }\n    \n    get attachments() { return new Attachments(this.graph, this.path, \"messages\"); }\n\n    GetMessage  = (odataQuery?:ODataQuery) => this.graph.Get<MessageDataModel, Message>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.Mail.Read]));\n    SendMessage = (odataQuery?:ODataQuery) => this.graph.Post<MessageDataModel, Message>(null, this.pathWithQuery(odataQuery, \"/microsoft.graph.sendMail\"), this, this.scopesForV2([Scopes.Mail.Send]));\n/*\n    PATCH = this.graph.PATCH<MessageDataModel>(this.path, this.query);\n    DELETE = this.graph.DELETE<MessageDataModel>(this.path, this.query);\n*/\n}\n\nexport class Messages extends CollectionNode {\n    constructor(graph:Graph, path:string=\"\") {\n        super(graph, path + \"/messages\");\n    }\n\n    $ = (messageId:string) => new Message(this.graph, this.path, messageId);\n\n    GetMessages     = (odataQuery?:ODataQuery) => this.graph.GetCollection<MessageDataModel, Messages, Message>(this.pathWithQuery(odataQuery), this, this.$, this.scopesForV2([Scopes.Mail.Read]));\n    CreateMessage   = (object:MessageDataModel, odataQuery?:ODataQuery) => this.graph.Post<MessageDataModel, Messages>(object, this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.Mail.ReadWrite]));\n}\n\nexport class Event extends Node {\n    constructor(graph:Graph, path:string=\"\", eventId:string) {\n        super(graph, path + (eventId ? \"/\" + eventId : \"\"));\n    }\n\n    get attachments() { return new Attachments(this.graph, this.path, \"events\"); }\n\n    GetEvent = (odataQuery?:ODataQuery) => this.graph.Get<EventDataModel, Event>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.Calendars.Read]));\n/*\n    PATCH = this.graph.PATCH<EventDataModel>(this.path, this.query);\n    DELETE = this.graph.DELETE<EventDataModel>(this.path, this.query);\n*/\n}\n\nexport class Events extends CollectionNode {\n    constructor(graph:Graph, path:string=\"\") {\n        super(graph, path + \"/events\");\n    }\n\n    $ = (eventId:string) => new Event(this.graph, this.path, eventId);\n\n    GetEvents = (odataQuery?:ODataQuery) => this.graph.GetCollection<EventDataModel, Events, Event>(this.pathWithQuery(odataQuery), this, this.$, this.scopesForV2([Scopes.Calendars.Read]));\n/*\n    POST = this.graph.POST<EventDataModel>(this.path, this.query);\n*/\n}\n\nexport class CalendarView extends CollectionNode {\n    private static suffix = \"/calendarView\";\n    constructor(graph:Graph, path:string=\"\") {\n        super(graph, path + CalendarView.suffix);\n    }\n    \n    private $ = (eventId:string) => new Event(this.graph, this.path, eventId); // need to adjust this path\n    \n    dateRange = (startDate:Date, endDate:Date) => `startDateTime=${startDate.toISOString()}&endDateTime=${endDate.toISOString()}`\n\n    GetCalendarView = (odataQuery?:ODataQuery) => this.graph.GetCollection<EventDataModel, CalendarView, Event>(this.pathWithQuery(odataQuery), this, this.$, this.scopesForV2([Scopes.Calendars.Read]));\n}\n\n\nexport class MailFolder extends Node {\n    constructor(graph:Graph, path:string=\"\", mailFolderId:string) {\n        super(graph, path + (mailFolderId ? \"/\" + mailFolderId : \"\"));\n    }\n\n    GetMailFolder = (odataQuery?:ODataQuery) => this.graph.Get<MailFolderDataModel, MailFolder>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.Mail.Read]));\n}\n\nexport class MailFolders extends CollectionNode {\n    constructor(graph:Graph, path:string=\"\") {\n        super(graph, path + \"/mailFolders\");\n    }\n\n    $ = (mailFolderId:string) => new MailFolder(this.graph, this.path, mailFolderId);\n\n    GetMailFolders = (odataQuery?:ODataQuery) => this.graph.GetCollection<MailFolderDataModel, MailFolders, MailFolder>(this.pathWithQuery(odataQuery), this, this.$, this.scopesForV2([Scopes.Mail.Read]));\n}\n\n\nexport class Photo extends Node {    \n    constructor(graph:Graph, path:string=\"\", private context:string) {\n        super(graph, path + \"/photo\" );\n    }\n\n    static scopes = {\n        user: [Scopes.User.ReadBasicAll],\n        group: [Scopes.Group.ReadAll],\n        contact: [Scopes.Contacts.Read]\n    }\n\n    GetPhotoProperties = (odataQuery?:ODataQuery) => this.graph.Get<ProfilePhotoDataModel, Photo>(this.pathWithQuery(odataQuery), this, this.scopesForV2(Photo.scopes[this.context]));\n    GetPhotoImage = (odataQuery?:ODataQuery) => this.graph.Get<any, any>(this.pathWithQuery(odataQuery, \"/$value\"), this, this.scopesForV2(Photo.scopes[this.context]), \"blob\");\n}\n\nexport class Manager extends Node {\n    constructor(graph:Graph, path:string=\"\") {\n        super(graph, path + \"/manager\" );\n    }\n\n    GetManager = (odataQuery?:ODataQuery) => this.graph.Get<UserDataModel, Manager>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.User.ReadAll]));\n}\n\nexport class MemberOf extends CollectionNode {\n    constructor(graph:Graph, path:string=\"\") {\n        super(graph, path + \"/memberOf\");\n    }\n\n    GetGroups = (odataQuery?:ODataQuery) => this.graph.GetCollection<GroupDataModel, MemberOf, Group>(this.pathWithQuery(odataQuery), this, Groups.$(this.graph), this.scopesForV2([Scopes.User.ReadAll]));\n}\n\nexport class DirectReport extends Node {\n    constructor(protected graph:Graph, path:string=\"\", userId?:string) {\n        super(graph, path + \"/\" + userId);\n    }\n    \n    // seems like this should re-root its response under Users\n    \n    GetDirectReport = (odataQuery?:ODataQuery) => this.graph.Get<UserDataModel, DirectReport>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.User.Read]));\n}\n    \nexport class DirectReports extends CollectionNode {\n    constructor(graph:Graph, path:string=\"\") {\n        super(graph, path + \"/directReports\");\n    }\n\n    $ = (userId:string) => new DirectReport(this.graph, this.path, userId);\n    \n    GetDirectReports = (odataQuery?:ODataQuery) => this.graph.GetCollection<UserDataModel, DirectReports, User>(this.pathWithQuery(odataQuery), this, Users.$(this.graph), this.scopesForV2([Scopes.User.Read]));\n}\n\nexport class User extends Node {\n    constructor(protected graph:Graph, path:string=\"\", userId?:string) {\n        super(graph, userId ? path + \"/\" + userId : path + \"/me\");\n    }\n\n    get messages()      { return new Messages(this.graph, this.path); }\n    get events()        { return new Events(this.graph, this.path); }\n    get calendarView()  { return new CalendarView(this.graph, this.path); }\n    get mailFolders()   { return new MailFolders(this.graph, this.path) }\n    get photo()         { return new Photo(this.graph, this.path, \"user\"); }\n    get manager()       { return new Manager(this.graph, this.path); }\n    get directReports() { return new DirectReports(this.graph, this.path); }\n    get memberOf()      { return new MemberOf(this.graph, this.path); }\n\n    GetUser = (odataQuery?:ODataQuery) => this.graph.Get<UserDataModel, User>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.User.Read]));\n/*\n    PATCH = this.graph.PATCH<UserDataModel>(this.path, this.query);\n    DELETE = this.graph.DELETE<UserDataModel>(this.path, this.query);\n*/\n}\n\nexport class Users extends CollectionNode {\n    constructor(graph:Graph, path:string=\"\") {\n        super(graph, path + \"/users\");\n    }\n    \n    $ = (userId:string) => new User(this.graph, this.path, userId);\n    \n    static $ = (graph:Graph) => graph.users.$; \n\n    GetUsers = (odataQuery?:ODataQuery) => this.graph.GetCollection<UserDataModel, Users, User>(this.pathWithQuery(odataQuery), this, this.$, this.scopesForV2([Scopes.User.Read]));\n/*\n    CreateUser = this.graph.POST<UserDataModel>(this.path, this.query);\n*/\n}\n\nexport class Group extends Node {\n    constructor(protected graph:Graph, path:string=\"\", groupId:string) {\n        super(graph, path + \"/\" + groupId);\n    }\n\n    GetGroup = (odataQuery?:ODataQuery) => this.graph.Get<GroupDataModel, Group>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.Group.ReadAll]));\n}\n\nexport class Groups extends CollectionNode {\n    constructor(graph:Graph, path:string=\"\") {\n        super(graph, path + \"/groups\");\n    }\n    \n    $ = (groupId:string) => new Group(this.graph, this.path, groupId);\n    \n    static $ = (graph:Graph) => graph.groups.$;\n\n    GetGroups = (odataQuery?:ODataQuery) => this.graph.GetCollection<GroupDataModel, Groups, Group>(this.pathWithQuery(odataQuery), this, this.$, this.scopesForV2([Scopes.Group.ReadAll]));\n}\n\n\n}\n\n//*********************************************************\n//\n//Kurve js, https://github.com/microsoftdx/kurvejs\n//\n//Copyright (c) Microsoft Corporation\n//All rights reserved.\n//\n// MIT License:\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"\"Software\"\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n\n\n\n\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n\n\n\n\n// THE SOFTWARE IS PROVIDED \"\"AS IS\"\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n//*********************************************************\n\n"],"sourceRoot":"/source/"}
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license at the bottom of this file.
var kurve;
(function (kurve) {
    // Adapted from the original source: https://github.com/DirtyHairy/typescript-deferred
    var Error = (function () {
        function Error() {
        }
        return Error;
    })();
    kurve.Error = Error;
    function DispatchDeferred(closure) {
        setTimeout(closure, 0);
    }
    var PromiseState;
    (function (PromiseState) {
        PromiseState[PromiseState["Pending"] = 0] = "Pending";
        PromiseState[PromiseState["ResolutionInProgress"] = 1] = "ResolutionInProgress";
        PromiseState[PromiseState["Resolved"] = 2] = "Resolved";
        PromiseState[PromiseState["Rejected"] = 3] = "Rejected";
    })(PromiseState || (PromiseState = {}));
    var Client = (function () {
        function Client(_dispatcher, _successCB, _errorCB) {
            this._dispatcher = _dispatcher;
            this._successCB = _successCB;
            this._errorCB = _errorCB;
            this.result = new Deferred(_dispatcher);
        }
        Client.prototype.resolve = function (value, defer) {
            var _this = this;
            if (typeof (this._successCB) !== 'function') {
                this.result.resolve(value);
                return;
            }
            if (defer) {
                this._dispatcher(function () { return _this._dispatchCallback(_this._successCB, value); });
            }
            else {
                this._dispatchCallback(this._successCB, value);
            }
        };
        Client.prototype.reject = function (error, defer) {
            var _this = this;
            if (typeof (this._errorCB) !== 'function') {
                this.result.reject(error);
                return;
            }
            if (defer) {
                this._dispatcher(function () { return _this._dispatchCallback(_this._errorCB, error); });
            }
            else {
                this._dispatchCallback(this._errorCB, error);
            }
        };
        Client.prototype._dispatchCallback = function (callback, arg) {
            var result, then, type;
            try {
                result = callback(arg);
                this.result.resolve(result);
            }
            catch (err) {
                this.result.reject(err);
                return;
            }
        };
        return Client;
    })();
    var Deferred = (function () {
        function Deferred(dispatcher) {
            this._stack = [];
            this._state = PromiseState.Pending;
            if (dispatcher)
                this._dispatcher = dispatcher;
            else
                this._dispatcher = DispatchDeferred;
            this.promise = new Promise(this);
        }
        Deferred.prototype.DispatchDeferred = function (closure) {
            setTimeout(closure, 0);
        };
        Deferred.prototype.then = function (successCB, errorCB) {
            if (typeof (successCB) !== 'function' && typeof (errorCB) !== 'function') {
                return this.promise;
            }
            var client = new Client(this._dispatcher, successCB, errorCB);
            switch (this._state) {
                case PromiseState.Pending:
                case PromiseState.ResolutionInProgress:
                    this._stack.push(client);
                    break;
                case PromiseState.Resolved:
                    client.resolve(this._value, true);
                    break;
                case PromiseState.Rejected:
                    client.reject(this._error, true);
                    break;
            }
            return client.result.promise;
        };
        Deferred.prototype.resolve = function (value) {
            if (this._state !== PromiseState.Pending) {
                return this;
            }
            return this._resolve(value);
        };
        Deferred.prototype._resolve = function (value) {
            var _this = this;
            var type = typeof (value), then, pending = true;
            try {
                if (value !== null &&
                    (type === 'object' || type === 'function') &&
                    typeof (then = value.then) === 'function') {
                    if (value === this.promise) {
                        throw new TypeError('recursive resolution');
                    }
                    this._state = PromiseState.ResolutionInProgress;
                    then.call(value, function (result) {
                        if (pending) {
                            pending = false;
                            _this._resolve(result);
                        }
                    }, function (error) {
                        if (pending) {
                            pending = false;
                            _this._reject(error);
                        }
                    });
                }
                else {
                    this._state = PromiseState.ResolutionInProgress;
                    this._dispatcher(function () {
                        _this._state = PromiseState.Resolved;
                        _this._value = value;
                        var i, stackSize = _this._stack.length;
                        for (i = 0; i < stackSize; i++) {
                            _this._stack[i].resolve(value, false);
                        }
                        _this._stack.splice(0, stackSize);
                    });
                }
            }
            catch (err) {
                if (pending) {
                    this._reject(err);
                }
            }
            return this;
        };
        Deferred.prototype.reject = function (error) {
            if (this._state !== PromiseState.Pending) {
                return this;
            }
            return this._reject(error);
        };
        Deferred.prototype._reject = function (error) {
            var _this = this;
            this._state = PromiseState.ResolutionInProgress;
            this._dispatcher(function () {
                _this._state = PromiseState.Rejected;
                _this._error = error;
                var stackSize = _this._stack.length, i = 0;
                for (i = 0; i < stackSize; i++) {
                    _this._stack[i].reject(error, false);
                }
                _this._stack.splice(0, stackSize);
            });
            return this;
        };
        return Deferred;
    })();
    kurve.Deferred = Deferred;
    var Promise = (function () {
        function Promise(_deferred) {
            this._deferred = _deferred;
        }
        Promise.prototype.then = function (successCallback, errorCallback) {
            return this._deferred.then(successCallback, errorCallback);
        };
        Promise.prototype.fail = function (errorCallback) {
            return this._deferred.then(undefined, errorCallback);
        };
        return Promise;
    })();
    kurve.Promise = Promise;
    (function (EndPointVersion) {
        EndPointVersion[EndPointVersion["v1"] = 1] = "v1";
        EndPointVersion[EndPointVersion["v2"] = 2] = "v2";
    })(kurve.EndPointVersion || (kurve.EndPointVersion = {}));
    var EndPointVersion = kurve.EndPointVersion;
    (function (Mode) {
        Mode[Mode["Client"] = 1] = "Client";
        Mode[Mode["Node"] = 2] = "Node";
    })(kurve.Mode || (kurve.Mode = {}));
    var Mode = kurve.Mode;
    var CachedToken = (function () {
        function CachedToken(id, scopes, resource, token, expiry) {
            this.id = id;
            this.scopes = scopes;
            this.resource = resource;
            this.token = token;
            this.expiry = expiry;
        }
        ;
        Object.defineProperty(CachedToken.prototype, "isExpired", {
            get: function () {
                return this.expiry <= new Date(new Date().getTime() + 60000);
            },
            enumerable: true,
            configurable: true
        });
        CachedToken.prototype.hasScopes = function (requiredScopes) {
            var _this = this;
            if (!this.scopes) {
                return false;
            }
            return requiredScopes.every(function (requiredScope) {
                return _this.scopes.some(function (actualScope) { return requiredScope === actualScope; });
            });
        };
        return CachedToken;
    })();
    var TokenCache = (function () {
        function TokenCache(tokenStorage) {
            var _this = this;
            this.tokenStorage = tokenStorage;
            this.cachedTokens = {};
            if (tokenStorage) {
                tokenStorage.getAll().forEach(function (_a) {
                    var id = _a.id, scopes = _a.scopes, resource = _a.resource, token = _a.token, expiry = _a.expiry;
                    var cachedToken = new CachedToken(id, scopes, resource, token, new Date(expiry));
                    if (cachedToken.isExpired) {
                        _this.tokenStorage.remove(cachedToken.id);
                    }
                    else {
                        _this.cachedTokens[cachedToken.id] = cachedToken;
                    }
                });
            }
        }
        TokenCache.prototype.add = function (token) {
            this.cachedTokens[token.id] = token;
            this.tokenStorage && this.tokenStorage.add(token.id, token);
        };
        TokenCache.prototype.getForResource = function (resource) {
            var cachedToken = this.cachedTokens[resource];
            if (cachedToken && cachedToken.isExpired) {
                this.remove(resource);
                return null;
            }
            return cachedToken;
        };
        TokenCache.prototype.getForScopes = function (scopes) {
            for (var key in this.cachedTokens) {
                var cachedToken = this.cachedTokens[key];
                if (cachedToken.hasScopes(scopes)) {
                    if (cachedToken.isExpired) {
                        this.remove(key);
                    }
                    else {
                        return cachedToken;
                    }
                }
            }
            return null;
        };
        TokenCache.prototype.clear = function () {
            this.cachedTokens = {};
            this.tokenStorage && this.tokenStorage.clear();
        };
        TokenCache.prototype.remove = function (key) {
            this.tokenStorage && this.tokenStorage.remove(key);
            delete this.cachedTokens[key];
        };
        return TokenCache;
    })();
    var IdToken = (function () {
        function IdToken() {
        }
        return IdToken;
    })();
    kurve.IdToken = IdToken;
    var Identity = (function () {
        function Identity(identitySettings) {
            var _this = this;
            this.policy = "";
            this.mode = Mode.Client;
            this.clientId = identitySettings.clientId;
            this.tokenProcessorUrl = identitySettings.tokenProcessingUri;
            //          this.req = new XMLHttpRequest();
            if (identitySettings.version)
                this.version = identitySettings.version;
            else
                this.version = EndPointVersion.v1;
            if (identitySettings.appSecret)
                this.appSecret = identitySettings.appSecret;
            this.mode = identitySettings.mode;
            if (this.mode === Mode.Client) {
                this.tokenCache = new TokenCache(identitySettings.tokenStorage);
                //Callback handler from other windows
                window.addEventListener("message", function (event) {
                    if (event.data.type === "id_token") {
                        if (event.data.error) {
                            var e = new Error();
                            e.text = event.data.error;
                            _this.loginCallback(e);
                        }
                        else {
                            //check for state
                            if (_this.state !== event.data.state) {
                                var error = new Error();
                                error.statusText = "Invalid state";
                                _this.loginCallback(error);
                            }
                            else {
                                _this.decodeIdToken(event.data.token);
                                _this.loginCallback(null);
                            }
                        }
                    }
                    else if (event.data.type === "access_token") {
                        if (event.data.error) {
                            var e = new Error();
                            e.text = event.data.error;
                            _this.getTokenCallback(null, e);
                        }
                        else {
                            var token = event.data.token;
                            var iframe = document.getElementById("tokenIFrame");
                            iframe.parentNode.removeChild(iframe);
                            if (event.data.state !== _this.state) {
                                var error = new Error();
                                error.statusText = "Invalid state";
                                _this.getTokenCallback(null, error);
                            }
                            else {
                                _this.getTokenCallback(token, null);
                            }
                        }
                    }
                });
            }
        }
        Identity.prototype.parseQueryString = function (str) {
            var queryString = str || window.location.search || '';
            var keyValPairs = [];
            var params = {};
            queryString = queryString.replace(/.*?\?/, "");
            if (queryString.length) {
                keyValPairs = queryString.split('&');
                for (var pairNum in keyValPairs) {
                    var key = keyValPairs[pairNum].split('=')[0];
                    if (!key.length)
                        continue;
                    if (typeof params[key] === 'undefined')
                        params[key] = [];
                    params[key].push(keyValPairs[pairNum].split('=')[1]);
                }
            }
            return params;
        };
        Identity.prototype.token = function (s, url) {
            var start = url.indexOf(s);
            if (start < 0)
                return null;
            var end = url.indexOf("&", start + s.length);
            return url.substring(start, ((end > 0) ? end : url.length));
        };
        Identity.prototype.checkForIdentityRedirect = function () {
            var params = this.parseQueryString(window.location.href);
            var idToken = this.token("#id_token=", window.location.href);
            var accessToken = this.token("#access_token", window.location.href);
            if (idToken) {
                if (true || this.state === params["state"][0]) {
                    this.decodeIdToken(idToken);
                    this.loginCallback && this.loginCallback(null);
                }
                else {
                    var error = new Error();
                    error.statusText = "Invalid state";
                    this.loginCallback && this.loginCallback(error);
                }
                return true;
            }
            else if (accessToken) {
                throw "Should not get here.  This should be handled via the iframe approach.";
            }
            return false;
        };
        Identity.prototype.decodeIdToken = function (idToken) {
            var _this = this;
            var decodedToken = this.base64Decode(idToken.substring(idToken.indexOf('.') + 1, idToken.lastIndexOf('.')));
            var decodedTokenJSON = JSON.parse(decodedToken);
            var expiryDate = new Date(new Date('01/01/1970 0:0 UTC').getTime() + parseInt(decodedTokenJSON.exp) * 1000);
            this.idToken = new IdToken();
            this.idToken.FullToken = decodedTokenJSON;
            this.idToken.Token = idToken;
            this.idToken.Expiry = expiryDate;
            this.idToken.UPN = decodedTokenJSON.upn;
            this.idToken.TenantId = decodedTokenJSON.tid;
            this.idToken.FamilyName = decodedTokenJSON.family_name;
            this.idToken.GivenName = decodedTokenJSON.given_name;
            this.idToken.Name = decodedTokenJSON.name;
            this.idToken.PreferredUsername = decodedTokenJSON.preferred_username;
            var expiration = expiryDate.getTime() - new Date().getTime() - 300000;
            this.refreshTimer = setTimeout((function () {
                _this.renewIdToken();
            }), expiration);
        };
        Identity.prototype.decodeAccessToken = function (accessToken, resource, scopes) {
            var decodedToken = this.base64Decode(accessToken.substring(accessToken.indexOf('.') + 1, accessToken.lastIndexOf('.')));
            var decodedTokenJSON = JSON.parse(decodedToken);
            var expiryDate = new Date(new Date('01/01/1970 0:0 UTC').getTime() + parseInt(decodedTokenJSON.exp) * 1000);
            var key = resource || scopes.join(" ");
            var token = new CachedToken(key, scopes, resource, accessToken, expiryDate);
            return token;
        };
        Identity.prototype.getIdToken = function () {
            return this.idToken;
        };
        Identity.prototype.isLoggedIn = function () {
            if (!this.idToken)
                return false;
            return (this.idToken.Expiry > new Date());
        };
        Identity.prototype.renewIdToken = function () {
            clearTimeout(this.refreshTimer);
            this.login(function () { });
        };
        Identity.prototype.getCurrentEndPointVersion = function () {
            return this.version;
        };
        Identity.prototype.getAccessTokenAsync = function (resource) {
            var d = new Deferred();
            this.getAccessToken(resource, (function (error, token) {
                if (error) {
                    d.reject(error);
                }
                else {
                    d.resolve(token);
                }
            }));
            return d.promise;
        };
        Identity.prototype.getAccessToken = function (resource, callback) {
            var _this = this;
            if (this.version !== EndPointVersion.v1) {
                var e = new Error();
                e.statusText = "Currently this identity class is using v2 OAuth mode. You need to use getAccessTokenForScopes() method";
                callback(e);
                return;
            }
            if (this.mode === Mode.Client) {
                var token = this.tokenCache.getForResource(resource);
                if (token) {
                    return callback(null, token.token);
                }
                //If we got this far, we need to go get this token
                //Need to create the iFrame to invoke the acquire token
                this.getTokenCallback = (function (token, error) {
                    if (error) {
                        callback(error);
                    }
                    else {
                        var t = _this.decodeAccessToken(token, resource);
                        _this.tokenCache.add(t);
                        callback(null, token);
                    }
                });
                this.nonce = "token" + this.generateNonce();
                this.state = "token" + this.generateNonce();
                var iframe = document.createElement('iframe');
                iframe.style.display = "none";
                iframe.id = "tokenIFrame";
                iframe.src = this.tokenProcessorUrl + "?clientId=" + encodeURIComponent(this.clientId) +
                    "&resource=" + encodeURIComponent(resource) +
                    "&redirectUri=" + encodeURIComponent(this.tokenProcessorUrl) +
                    "&state=" + encodeURIComponent(this.state) +
                    "&version=" + encodeURIComponent(this.version.toString()) +
                    "&nonce=" + encodeURIComponent(this.nonce) +
                    "&op=token";
                document.body.appendChild(iframe);
            }
            else {
                var cookies = this.parseNodeCookies(this.req);
                var upn = this.NodeRetrieveDataCallBack("session|" + cookies["kurveSession"]);
                var code = this.NodeRetrieveDataCallBack("code|" + upn);
                var post_data = "grant_type=authorization_code" +
                    "&client_id=" + encodeURIComponent(this.clientId) +
                    "&code=" + encodeURIComponent(code) +
                    "&redirect_uri=" + encodeURIComponent(this.tokenProcessorUrl) +
                    "&resource=" + encodeURIComponent(resource) +
                    "&client_secret=" + encodeURIComponent(this.appSecret);
                var post_options = {
                    host: 'login.microsoftonline.com',
                    port: '443',
                    path: '/common/oauth2/token',
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Content-Length': post_data.length,
                        accept: '*/*'
                    }
                };
                var post_req = this.https.request(post_options, function (response) {
                    response.setEncoding('utf8');
                    response.on('data', function (chunk) {
                        var chunkJson = JSON.parse(chunk);
                        var t = _this.decodeAccessToken(chunkJson.access_token, resource);
                        // this.tokenCache.add(t); //TODO: Persist/retrieve token cache no server
                        callback(null, chunkJson.access_token);
                    });
                });
                post_req.write(post_data);
                post_req.end();
            }
        };
        Identity.prototype.parseNodeCookies = function (req) {
            var list = {};
            var rc = req.headers.cookie;
            rc && rc.split(';').forEach(function (cookie) {
                var parts = cookie.split('=');
                list[parts.shift().trim()] = decodeURI(parts.join('='));
            });
            return list;
        };
        Identity.prototype.handleNodeCallback = function (req, res, https, crypto, persistDataCallback, retrieveDataCallback) {
            var _this = this;
            this.NodePersistDataCallBack = persistDataCallback;
            this.NodeRetrieveDataCallBack = retrieveDataCallback;
            var url = req.url;
            this.req = req;
            this.res = res;
            this.https = https;
            var params = this.parseQueryString(url);
            var code = this.token("code=", url);
            var accessToken = this.token("#access_token", url);
            var cookies = this.parseNodeCookies(req);
            var d = new Deferred();
            if (this.version === EndPointVersion.v1) {
                if (code) {
                    var codeFromRequest = params["code"][0];
                    var stateFromRequest = params["state"][0];
                    var cachedState = retrieveDataCallback("state|" + stateFromRequest);
                    if (cachedState) {
                        if (cachedState === "waiting") {
                            var expiry = new Date(new Date().getTime() + 86400000);
                            persistDataCallback("state|" + stateFromRequest, "done", expiry);
                            var post_data = "grant_type=authorization_code" +
                                "&client_id=" + encodeURIComponent(this.clientId) +
                                "&code=" + encodeURIComponent(codeFromRequest) +
                                "&redirect_uri=" + encodeURIComponent(this.tokenProcessorUrl) +
                                "&resource=" + encodeURIComponent("https://graph.microsoft.com") +
                                "&client_secret=" + encodeURIComponent(this.appSecret);
                            var post_options = {
                                host: 'login.microsoftonline.com',
                                port: '443',
                                path: '/common/oauth2/token',
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/x-www-form-urlencoded',
                                    'Content-Length': post_data.length,
                                    accept: '*/*'
                                }
                            };
                            var post_req = https.request(post_options, function (response) {
                                response.setEncoding('utf8');
                                response.on('data', function (chunk) {
                                    var chunkJson = JSON.parse(chunk);
                                    var decodedToken = JSON.parse(_this.base64Decode(chunkJson.access_token.substring(chunkJson.access_token.indexOf('.') + 1, chunkJson.access_token.lastIndexOf('.'))));
                                    var upn = decodedToken.upn;
                                    var sha = crypto.createHash('sha256');
                                    sha.update(Math.random().toString());
                                    var sessionID = sha.digest('hex');
                                    var expiry = new Date(new Date().getTime() + 30 * 60 * 1000);
                                    persistDataCallback("session|" + sessionID, upn, expiry);
                                    persistDataCallback("code|" + upn, codeFromRequest, expiry);
                                    res.writeHead(302, {
                                        'Set-Cookie': 'kurveSession=' + sessionID,
                                        'Location': '/'
                                    });
                                    res.end();
                                    d.resolve(false);
                                });
                            });
                            post_req.write(post_data);
                            post_req.end();
                        }
                        else {
                            //same state has been reused, not allowed
                            res.writeHead(500, "Replay detected", { 'content-type': 'text/plain' });
                            res.end("Replay detected");
                            d.resolve(false);
                        }
                    }
                    else {
                        //state doesn't match any of our cached ones
                        res.writeHead(500, "State doesn't match", { 'content-type': 'text/plain' });
                        res.end("State doesn't match");
                        d.resolve(false);
                    }
                    return d.promise;
                }
                else {
                    if (cookies["kurveSession"]) {
                        var upn = retrieveDataCallback("session|" + cookies["kurveSession"]);
                        if (upn) {
                            d.resolve(true);
                            return d.promise;
                        }
                    }
                    var state = this.generateNonce();
                    var expiry = new Date(new Date().getTime() + 900000);
                    persistDataCallback("state|" + state, "waiting", expiry);
                    var url = "https://login.microsoftonline.com/common/oauth2/authorize?response_type=code&client_id=" +
                        encodeURIComponent(this.clientId) +
                        "&redirect_uri=" + encodeURIComponent(this.tokenProcessorUrl) +
                        "&state=" + encodeURIComponent(state);
                    res.writeHead(302, { 'Location': url });
                    res.end();
                    d.resolve(false);
                    return d.promise;
                }
            }
            else {
                //TODO: v2
                d.resolve(false);
                return d.promise;
            }
        };
        Identity.prototype.getAccessTokenForScopesAsync = function (scopes, promptForConsent) {
            if (promptForConsent === void 0) { promptForConsent = false; }
            var d = new Deferred();
            this.getAccessTokenForScopes(scopes, promptForConsent, function (token, error) {
                if (error) {
                    d.reject(error);
                }
                else {
                    d.resolve(token);
                }
            });
            return d.promise;
        };
        Identity.prototype.getAccessTokenForScopes = function (scopes, promptForConsent, callback) {
            var _this = this;
            if (this.version !== EndPointVersion.v2) {
                var e = new Error();
                e.statusText = "Dynamic scopes require v2 mode. Currently this identity class is using v1";
                callback(null, e);
                return;
            }
            var token = this.tokenCache.getForScopes(scopes);
            if (token) {
                return callback(token.token, null);
            }
            //If we got this far, we don't have a valid cached token, so will need to get one.
            //Need to create the iFrame to invoke the acquire token
            this.getTokenCallback = (function (token, error) {
                if (error) {
                    if (promptForConsent || !error.text) {
                        callback(null, error);
                    }
                    else if (error.text.indexOf("AADSTS65001") >= 0) {
                        //We will need to try getting the consent
                        _this.getAccessTokenForScopes(scopes, true, _this.getTokenCallback);
                    }
                    else {
                        callback(null, error);
                    }
                }
                else {
                    var t = _this.decodeAccessToken(token, null, scopes);
                    _this.tokenCache.add(t);
                    callback(token, null);
                }
            });
            this.nonce = "token" + this.generateNonce();
            this.state = "token" + this.generateNonce();
            if (!promptForConsent) {
                var iframe = document.createElement('iframe');
                iframe.style.display = "none";
                iframe.id = "tokenIFrame";
                iframe.src = this.tokenProcessorUrl + "?clientId=" + encodeURIComponent(this.clientId) +
                    "&scopes=" + encodeURIComponent(scopes.join(" ")) +
                    "&redirectUri=" + encodeURIComponent(this.tokenProcessorUrl) +
                    "&version=" + encodeURIComponent(this.version.toString()) +
                    "&state=" + encodeURIComponent(this.state) +
                    "&nonce=" + encodeURIComponent(this.nonce) +
                    "&login_hint=" + encodeURIComponent(this.idToken.PreferredUsername) +
                    "&domain_hint=" + encodeURIComponent(this.idToken.TenantId === "9188040d-6c67-4c5b-b112-36a304b66dad" ? "consumers" : "organizations") +
                    "&op=token";
                document.body.appendChild(iframe);
            }
            else {
                window.open(this.tokenProcessorUrl + "?clientId=" + encodeURIComponent(this.clientId) +
                    "&scopes=" + encodeURIComponent(scopes.join(" ")) +
                    "&redirectUri=" + encodeURIComponent(this.tokenProcessorUrl) +
                    "&version=" + encodeURIComponent(this.version.toString()) +
                    "&state=" + encodeURIComponent(this.state) +
                    "&nonce=" + encodeURIComponent(this.nonce) +
                    "&op=token", "_blank");
            }
        };
        Identity.prototype.loginAsync = function (loginSettings) {
            //TODO: Not node compatible
            var d = new Deferred();
            this.login(function (error) {
                if (error) {
                    d.reject(error);
                }
                else {
                    d.resolve(null);
                }
            }, loginSettings);
            return d.promise;
        };
        Identity.prototype.login = function (callback, loginSettings) {
            //TODO: Not node compatible
            this.loginCallback = callback;
            if (!loginSettings)
                loginSettings = {};
            if (loginSettings.policy)
                this.policy = loginSettings.policy;
            if (loginSettings.scopes && this.version === EndPointVersion.v1) {
                var e = new Error();
                e.text = "Scopes can only be used with OAuth v2.";
                callback(e);
                return;
            }
            if (loginSettings.policy && !loginSettings.tenant) {
                var e = new Error();
                e.text = "In order to use policy (AAD B2C) a tenant must be specified as well.";
                callback(e);
                return;
            }
            this.state = "login" + this.generateNonce();
            this.nonce = "login" + this.generateNonce();
            var loginURL = this.tokenProcessorUrl + "?clientId=" + encodeURIComponent(this.clientId) +
                "&redirectUri=" + encodeURIComponent(this.tokenProcessorUrl) +
                "&state=" + encodeURIComponent(this.state) +
                "&nonce=" + encodeURIComponent(this.nonce) +
                "&version=" + encodeURIComponent(this.version.toString()) +
                "&op=login" +
                "&p=" + encodeURIComponent(this.policy);
            if (loginSettings.tenant) {
                loginURL += "&tenant=" + encodeURIComponent(loginSettings.tenant);
            }
            if (this.version === EndPointVersion.v2) {
                if (!loginSettings.scopes)
                    loginSettings.scopes = [];
                if (loginSettings.scopes.indexOf("profile") < 0)
                    loginSettings.scopes.push("profile");
                if (loginSettings.scopes.indexOf("openid") < 0)
                    loginSettings.scopes.push("openid");
                loginURL += "&scopes=" + encodeURIComponent(loginSettings.scopes.join(" "));
            }
            window.open(loginURL, "_blank");
        };
        Identity.prototype.loginNoWindowAsync = function (toUrl) {
            //TODO: Not node compatible
            var d = new Deferred();
            this.loginNoWindow(function (error) {
                if (error) {
                    d.reject(error);
                }
                else {
                    d.resolve(null);
                }
            }, toUrl);
            return d.promise;
        };
        Identity.prototype.loginNoWindow = function (callback, toUrl) {
            //TODO: Not node compatible
            this.loginCallback = callback;
            this.state = "clientId=" + this.clientId + "&" + "tokenProcessorUrl=" + this.tokenProcessorUrl;
            this.nonce = this.generateNonce();
            var redirected = this.checkForIdentityRedirect();
            if (!redirected) {
                var redirectUri = (toUrl) ? toUrl : window.location.href.split("#")[0]; // default the no login window scenario to return to the current page
                var url = "https://login.microsoftonline.com/common/oauth2/authorize?response_type=id_token" +
                    "&client_id=" + encodeURIComponent(this.clientId) +
                    "&redirect_uri=" + encodeURIComponent(redirectUri) +
                    "&state=" + encodeURIComponent(this.state) +
                    "&nonce=" + encodeURIComponent(this.nonce);
                window.location.href = url;
            }
        };
        Identity.prototype.logOut = function () {
            //TODO: Not node compatible
            this.tokenCache.clear();
            var url = "https://login.microsoftonline.com/common/oauth2/logout?post_logout_redirect_uri=" + encodeURI(window.location.href);
            window.location.href = url;
        };
        Identity.prototype.base64Decode = function (encodedString) {
            var e = {}, i, b = 0, c, x, l = 0, a, r = '', w = String.fromCharCode, L = encodedString.length;
            var A = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
            for (i = 0; i < 64; i++) {
                e[A.charAt(i)] = i;
            }
            for (x = 0; x < L; x++) {
                c = e[encodedString.charAt(x)];
                b = (b << 6) + c;
                l += 6;
                while (l >= 8) {
                    ((a = (b >>> (l -= 8)) & 0xff) || (x < (L - 2))) && (r += w(a));
                }
            }
            return r;
        };
        Identity.prototype.generateNonce = function () {
            var text = "";
            var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            for (var i = 0; i < 32; i++) {
                text += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            return text;
        };
        return Identity;
    })();
    kurve.Identity = Identity;
    var Graph = (function () {
        function Graph(identityInfo, mode, https) {
            this.req = null;
            this.accessToken = null;
            this.KurveIdentity = null;
            this.defaultResourceID = "https://graph.microsoft.com";
            this.baseUrl = "https://graph.microsoft.com/v1.0";
            if (https)
                this.https = https;
            this.mode = mode;
            if (identityInfo.defaultAccessToken) {
                this.accessToken = identityInfo.defaultAccessToken;
            }
            else {
                this.KurveIdentity = identityInfo.identity;
            }
        }
        Object.defineProperty(Graph.prototype, "me", {
            get: function () { return new User(this, this.baseUrl); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Graph.prototype, "users", {
            get: function () { return new Users(this, this.baseUrl); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Graph.prototype, "groups", {
            get: function () { return new Groups(this, this.baseUrl); },
            enumerable: true,
            configurable: true
        });
        Graph.prototype.Get = function (path, self, scopes, responseType) {
            console.log("GET", path, scopes);
            var d = new Deferred();
            this.get(path, function (error, result) {
                if (!responseType) {
                    var jsonResult = JSON.parse(result);
                    if (jsonResult.error) {
                        var errorODATA = new Error();
                        errorODATA.other = jsonResult.error;
                        d.reject(errorODATA);
                        return;
                    }
                    d.resolve(singletonFromResponse(jsonResult, self));
                }
                else {
                    d.resolve(singletonFromResponse(result, self));
                }
            }, responseType, scopes);
            return d.promise;
        };
        Graph.prototype.GetCollection = function (path, self, childFactory, scopes) {
            var _this = this;
            console.log("GET collection", path, scopes);
            var d = new Deferred();
            this.get(path, function (error, result) {
                var jsonResult = JSON.parse(result);
                if (jsonResult.error) {
                    var errorODATA = new Error();
                    errorODATA.other = jsonResult.error;
                    d.reject(errorODATA);
                    return;
                }
                d.resolve(collectionFromResponse(jsonResult, self, _this, childFactory, scopes));
            }, null, scopes);
            return d.promise;
        };
        Graph.prototype.Post = function (object, path, self, scopes) {
            console.log("POST", path, scopes);
            var d = new Deferred();
            /*
                        this.post(object, path, (error, result) => {
                            var jsonResult = JSON.parse(result) ;
            
                            if (jsonResult.error) {
                                var errorODATA = new Error();
                                errorODATA.other = jsonResult.error;
                                d.reject(errorODATA);
                                return;
                            }
            
                            d.resolve(new Response<Model, N>({}, self));
                        });
            */
            return d.promise;
        };
        Graph.prototype.get = function (url, callback, responseType, scopes) {
            var _this = this;
            if (this.mode === Mode.Client) {
                var xhr = new XMLHttpRequest();
                if (responseType)
                    xhr.responseType = responseType;
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4)
                        if (xhr.status === 200)
                            callback(null, responseType ? xhr.response : xhr.responseText);
                        else
                            callback(_this.generateError(xhr));
                };
                xhr.open("GET", url);
                this.addAccessTokenAndSend(xhr, function (addTokenError) {
                    if (addTokenError) {
                        callback(addTokenError);
                    }
                }, scopes);
            }
            else {
                var token = this.findAccessToken(function (token, error) {
                    var path = url.substr(27, url.length);
                    var options = {
                        host: 'graph.microsoft.com',
                        port: '443',
                        path: path,
                        method: 'GET',
                        headers: {
                            'Content-Type': responseType ? responseType : 'application/json',
                            accept: '*/*',
                            'Authorization': 'Bearer ' + token
                        }
                    };
                    var post_req = _this.https.request(options, function (response) {
                        response.setEncoding('utf8');
                        response.on('data', function (chunk) {
                            callback(null, chunk);
                        });
                    });
                    post_req.end();
                }, scopes);
            }
        };
        Graph.prototype.findAccessToken = function (callback, scopes) {
            if (this.accessToken) {
                callback(this.accessToken, null);
            }
            else {
                //Using the integrated Identity object
                if (scopes) {
                    //v2 scope based tokens
                    this.KurveIdentity.getAccessTokenForScopes(scopes, false, (function (token, error) {
                        if (error)
                            callback(null, error);
                        else {
                            callback(token, null);
                        }
                    }));
                }
                else {
                    //v1 resource based tokens
                    this.KurveIdentity.getAccessToken(this.defaultResourceID, (function (error, token) {
                        if (error)
                            callback(null, error);
                        else {
                            callback(token, null);
                        }
                    }));
                }
            }
        };
        Graph.prototype.post = function (object, url, callback, responseType, scopes) {
            /*
                        var xhr = new XMLHttpRequest();
                        if (responseType)
                            xhr.responseType = responseType;
                        xhr.onreadystatechange = () => {
                            if (xhr.readyState === 4)
                                if (xhr.status === 202)
                                    callback(null, responseType ? xhr.response : xhr.responseText);
                                else
                                    callback(this.generateError(xhr));
                        }
                        xhr.send(object)
                        xhr.open("GET", url);
                        this.addAccessTokenAndSend(xhr, (addTokenError: Error) => {
                            if (addTokenError) {
                                callback(addTokenError);
                            }
                        }, scopes);
            */
        };
        Graph.prototype.generateError = function (xhr) {
            var response = new Error();
            response.status = xhr.status;
            response.statusText = xhr.statusText;
            if (xhr.responseType === '' || xhr.responseType === 'text')
                response.text = xhr.responseText;
            else
                response.other = xhr.response;
            return response;
        };
        Graph.prototype.addAccessTokenAndSend = function (xhr, callback, scopes) {
            this.findAccessToken(function (token, error) {
                if (token) {
                    xhr.setRequestHeader('Authorization', 'Bearer ' + token);
                    xhr.send();
                }
                else {
                    callback(error);
                }
            }, scopes);
        };
        return Graph;
    })();
    kurve.Graph = Graph;
    /*
    
    RequestBuilder allows you to discover and access the Microsoft Graph using Visual Studio Code intellisense.
    
    Just start typing and see how intellisense helps you explore the graph:
    
        graph.                      me, users
        graph.me.                   events, messages, calendarView, mailFolders, GetUser, odata, select, ...
        graph.me.events.            GetEvents, $, odata, select, ...
        graph.me.events.$           (eventId:string) => Event
        graph.me.events.$("123").   GetEvent, odata, select, ...
    
    Each endpoint exposes the set of available Graph operations through strongly typed methods:
    
        graph.me.GetUser() => UserDataModel
            GET "/me"
        graph.me.events.GetEvents => EventDataModel[]
            GET "/me/events"
        graph.me.events.CreateEvent(event:EventDataModel)
            POST "/me/events"
    
    Certain Graph endpoints are implemented as OData "Functions". These are not treated as Graph nodes. They're just methods:
    
        graph.me.events.$("123").DeclineEvent(eventResponse:EventResponse)
            POST "/me/events/123/microsoft.graph.decline
    
    Graph operations are exposed through Promises:
    
        graph.me.messages
        .GetMessages()
        .then(collection =>
            collection.items.forEach(message =>
                console.log(message.subject)
            )
        )
    
    All operations return a "self" property which allows you to continue along the Graph path from the point where you left off:
    
        graph.me.messages.$("123").GetMessage().then(singleton =>
            console.log(singleton.item.subject);
            singleton.self.attachments.GetAttachments().then(collection => // singleton.self === graph.me.messages.$("123")
                collection.items.forEach(attachment =>
                    console.log(attachment.contentBytes)
                )
            )
        )
    
    Operations which return paginated collections can return a "next" request object. This can be utilized in a recursive function:
    
        ListMessageSubjects(messages:Messages, odata?:string) {
            messages.GetMessages(odata).then(collection => {
                collection.items.forEach(message => console.log(message.subject));
                if (collection.next)
                    ListMessageSubjects(collection.next); // don't need odata after the first time
            })
        }
        ListMessageSubjects(graph.me.messages, new OData().select("subject").toString());
        
    (With async/await support, an iteration pattern can be used intead of recursion)
    
    Every Graph operation may include OData queries:
    
        graph.me.messages.GetMessages("$select=subject,id&$orderby=id")
            /me/messages/$select=subject,id&$orderby=id
    
    There is an optional OData helper to aid in constructing more complex queries:
    
        graph.me.messages.GetMessages(new OData()
            .select("subject", "id")
            .orderby("id")
        )
            /me/messages/$select=subject,id&$orderby=id
    
    Some operations include parameters which transform into OData queries
    
        graph.me.calendarView.GetCalendarView([start],[end], [odataQuery])
            /me/calendarView?startDateTime=[start]&endDateTime=[end]&[odataQuery]
    
    Note: This initial stab only includes a few familiar pieces of the Microsoft Graph.
    */
    var Scopes = (function () {
        function Scopes() {
        }
        Scopes.rootUrl = "https://graph.microsoft.com/";
        Scopes.General = {
            OpenId: "openid",
            OfflineAccess: "offline_access",
        };
        Scopes.User = {
            Read: Scopes.rootUrl + "User.Read",
            ReadAll: Scopes.rootUrl + "User.Read.All",
            ReadWrite: Scopes.rootUrl + "User.ReadWrite",
            ReadWriteAll: Scopes.rootUrl + "User.ReadWrite.All",
            ReadBasicAll: Scopes.rootUrl + "User.ReadBasic.All",
        };
        Scopes.Contacts = {
            Read: Scopes.rootUrl + "Contacts.Read",
            ReadWrite: Scopes.rootUrl + "Contacts.ReadWrite",
        };
        Scopes.Directory = {
            ReadAll: Scopes.rootUrl + "Directory.Read.All",
            ReadWriteAll: Scopes.rootUrl + "Directory.ReadWrite.All",
            AccessAsUserAll: Scopes.rootUrl + "Directory.AccessAsUser.All",
        };
        Scopes.Group = {
            ReadAll: Scopes.rootUrl + "Group.Read.All",
            ReadWriteAll: Scopes.rootUrl + "Group.ReadWrite.All",
            AccessAsUserAll: Scopes.rootUrl + "Directory.AccessAsUser.All"
        };
        Scopes.Mail = {
            Read: Scopes.rootUrl + "Mail.Read",
            ReadWrite: Scopes.rootUrl + "Mail.ReadWrite",
            Send: Scopes.rootUrl + "Mail.Send",
        };
        Scopes.Calendars = {
            Read: Scopes.rootUrl + "Calendars.Read",
            ReadWrite: Scopes.rootUrl + "Calendars.ReadWrite",
        };
        Scopes.Files = {
            Read: Scopes.rootUrl + "Files.Read",
            ReadAll: Scopes.rootUrl + "Files.Read.All",
            ReadWrite: Scopes.rootUrl + "Files.ReadWrite",
            ReadWriteAppFolder: Scopes.rootUrl + "Files.ReadWrite.AppFolder",
            ReadWriteSelected: Scopes.rootUrl + "Files.ReadWrite.Selected",
        };
        Scopes.Tasks = {
            ReadWrite: Scopes.rootUrl + "Tasks.ReadWrite",
        };
        Scopes.People = {
            Read: Scopes.rootUrl + "People.Read",
            ReadWrite: Scopes.rootUrl + "People.ReadWrite",
        };
        Scopes.Notes = {
            Create: Scopes.rootUrl + "Notes.Create",
            ReadWriteCreatedByApp: Scopes.rootUrl + "Notes.ReadWrite.CreatedByApp",
            Read: Scopes.rootUrl + "Notes.Read",
            ReadAll: Scopes.rootUrl + "Notes.Read.All",
            ReadWriteAll: Scopes.rootUrl + "Notes.ReadWrite.All",
        };
        return Scopes;
    })();
    kurve.Scopes = Scopes;
    var queryUnion = function (query1, query2) { return (query1 ? query1 + (query2 ? "&" + query2 : "") : query2); };
    var OData = (function () {
        function OData(query) {
            var _this = this;
            this.query = query;
            this.toString = function () { return _this.query; };
            this.odata = function (query) {
                _this.query = queryUnion(_this.query, query);
                return _this;
            };
            this.select = function () {
                var fields = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    fields[_i - 0] = arguments[_i];
                }
                return _this.odata("$select=" + fields.join(","));
            };
            this.expand = function () {
                var fields = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    fields[_i - 0] = arguments[_i];
                }
                return _this.odata("$expand=" + fields.join(","));
            };
            this.filter = function (query) { return _this.odata("$filter=" + query); };
            this.orderby = function () {
                var fields = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    fields[_i - 0] = arguments[_i];
                }
                return _this.odata("$orderby=" + fields.join(","));
            };
            this.top = function (items) { return _this.odata("$top=" + items); };
            this.skip = function (items) { return _this.odata("$skip=" + items); };
        }
        return OData;
    })();
    kurve.OData = OData;
    var pathWithQuery = function (path, odataQuery) {
        var query = odataQuery && odataQuery.toString();
        return path + (query ? "?" + query : "");
    };
    function singletonFromResponse(response, self) {
        var singleton = response;
        singleton._self = self;
        return singleton;
    }
    kurve.singletonFromResponse = singletonFromResponse;
    function collectionFromResponse(response, self, graph, childFactory, scopes) {
        var collection = response;
        collection._self = self;
        var nextLink = response["@odata.nextLink"];
        if (nextLink)
            collection._next = function () { return graph.GetCollection(nextLink, self, childFactory, scopes); };
        if (childFactory)
            collection.forEach(function (item) { return item._self = item["id"] && childFactory(item["id"]); });
        return collection;
    }
    kurve.collectionFromResponse = collectionFromResponse;
    var Node = (function () {
        function Node(graph, path) {
            var _this = this;
            this.graph = graph;
            this.path = path;
            //Only adds scopes when linked to a v2 Oauth of kurve identity
            this.scopesForV2 = function (scopes) {
                return _this.graph.KurveIdentity && _this.graph.KurveIdentity.getCurrentEndPointVersion() === EndPointVersion.v2 ? scopes : null;
            };
            this.pathWithQuery = function (odataQuery, pathSuffix) {
                if (pathSuffix === void 0) { pathSuffix = ""; }
                return pathWithQuery(_this.path + pathSuffix, odataQuery);
            };
        }
        return Node;
    })();
    kurve.Node = Node;
    var CollectionNode = (function (_super) {
        __extends(CollectionNode, _super);
        function CollectionNode() {
            var _this = this;
            _super.apply(this, arguments);
            this.pathWithQuery = function (odataQuery, pathSuffix) {
                if (pathSuffix === void 0) { pathSuffix = ""; }
                return _this._nextLink || pathWithQuery(_this.path + pathSuffix, odataQuery);
            };
        }
        Object.defineProperty(CollectionNode.prototype, "nextLink", {
            set: function (pathWithQuery) {
                this._nextLink = pathWithQuery;
            },
            enumerable: true,
            configurable: true
        });
        return CollectionNode;
    })(Node);
    kurve.CollectionNode = CollectionNode;
    var Attachment = (function (_super) {
        __extends(Attachment, _super);
        function Attachment(graph, path, context, attachmentId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + (attachmentId ? "/" + attachmentId : ""));
            this.context = context;
            this.GetAttachment = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2(Attachment.scopes[_this.context])); };
        }
        Attachment.scopes = {
            messages: [Scopes.Mail.Read],
            events: [Scopes.Calendars.Read],
        };
        return Attachment;
    })(Node);
    kurve.Attachment = Attachment;
    var Attachments = (function (_super) {
        __extends(Attachments, _super);
        function Attachments(graph, path, context) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/attachments");
            this.context = context;
            this.$ = function (attachmentId) { return new Attachment(_this.graph, _this.path, _this.context, attachmentId); };
            this.GetAttachments = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, _this.$, _this.scopesForV2(Attachment.scopes[_this.context])); };
        }
        return Attachments;
    })(CollectionNode);
    kurve.Attachments = Attachments;
    var Message = (function (_super) {
        __extends(Message, _super);
        function Message(graph, path, messageId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + (messageId ? "/" + messageId : ""));
            this.GetMessage = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.Mail.Read])); };
            this.SendMessage = function (odataQuery) { return _this.graph.Post(null, _this.pathWithQuery(odataQuery, "/microsoft.graph.sendMail"), _this, _this.scopesForV2([Scopes.Mail.Send])); };
        }
        Object.defineProperty(Message.prototype, "attachments", {
            get: function () { return new Attachments(this.graph, this.path, "messages"); },
            enumerable: true,
            configurable: true
        });
        return Message;
    })(Node);
    kurve.Message = Message;
    var Messages = (function (_super) {
        __extends(Messages, _super);
        function Messages(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/messages");
            this.$ = function (messageId) { return new Message(_this.graph, _this.path, messageId); };
            this.GetMessages = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, _this.$, _this.scopesForV2([Scopes.Mail.Read])); };
            this.CreateMessage = function (object, odataQuery) { return _this.graph.Post(object, _this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.Mail.ReadWrite])); };
        }
        return Messages;
    })(CollectionNode);
    kurve.Messages = Messages;
    var Event = (function (_super) {
        __extends(Event, _super);
        function Event(graph, path, eventId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + (eventId ? "/" + eventId : ""));
            this.GetEvent = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.Calendars.Read])); };
        }
        Object.defineProperty(Event.prototype, "attachments", {
            get: function () { return new Attachments(this.graph, this.path, "events"); },
            enumerable: true,
            configurable: true
        });
        return Event;
    })(Node);
    kurve.Event = Event;
    var Events = (function (_super) {
        __extends(Events, _super);
        function Events(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/events");
            this.$ = function (eventId) { return new Event(_this.graph, _this.path, eventId); };
            this.GetEvents = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, _this.$, _this.scopesForV2([Scopes.Calendars.Read])); };
        }
        return Events;
    })(CollectionNode);
    kurve.Events = Events;
    var CalendarView = (function (_super) {
        __extends(CalendarView, _super);
        function CalendarView(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + CalendarView.suffix);
            this.$ = function (eventId) { return new Event(_this.graph, _this.path, eventId); }; // need to adjust this path
            this.dateRange = function (startDate, endDate) { return ("startDateTime=" + startDate.toISOString() + "&endDateTime=" + endDate.toISOString()); };
            this.GetCalendarView = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, _this.$, _this.scopesForV2([Scopes.Calendars.Read])); };
        }
        CalendarView.suffix = "/calendarView";
        return CalendarView;
    })(CollectionNode);
    kurve.CalendarView = CalendarView;
    var MailFolder = (function (_super) {
        __extends(MailFolder, _super);
        function MailFolder(graph, path, mailFolderId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + (mailFolderId ? "/" + mailFolderId : ""));
            this.GetMailFolder = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.Mail.Read])); };
        }
        return MailFolder;
    })(Node);
    kurve.MailFolder = MailFolder;
    var MailFolders = (function (_super) {
        __extends(MailFolders, _super);
        function MailFolders(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/mailFolders");
            this.$ = function (mailFolderId) { return new MailFolder(_this.graph, _this.path, mailFolderId); };
            this.GetMailFolders = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, _this.$, _this.scopesForV2([Scopes.Mail.Read])); };
        }
        return MailFolders;
    })(CollectionNode);
    kurve.MailFolders = MailFolders;
    var Photo = (function (_super) {
        __extends(Photo, _super);
        function Photo(graph, path, context) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/photo");
            this.context = context;
            this.GetPhotoProperties = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2(Photo.scopes[_this.context])); };
            this.GetPhotoImage = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery, "/$value"), _this, _this.scopesForV2(Photo.scopes[_this.context]), "blob"); };
        }
        Photo.scopes = {
            user: [Scopes.User.ReadBasicAll],
            group: [Scopes.Group.ReadAll],
            contact: [Scopes.Contacts.Read]
        };
        return Photo;
    })(Node);
    kurve.Photo = Photo;
    var Manager = (function (_super) {
        __extends(Manager, _super);
        function Manager(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/manager");
            this.GetManager = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.User.ReadAll])); };
        }
        return Manager;
    })(Node);
    kurve.Manager = Manager;
    var MemberOf = (function (_super) {
        __extends(MemberOf, _super);
        function MemberOf(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/memberOf");
            this.GetGroups = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, Groups.$(_this.graph), _this.scopesForV2([Scopes.User.ReadAll])); };
        }
        return MemberOf;
    })(CollectionNode);
    kurve.MemberOf = MemberOf;
    var DirectReport = (function (_super) {
        __extends(DirectReport, _super);
        function DirectReport(graph, path, userId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/" + userId);
            this.graph = graph;
            // seems like this should re-root its response under Users
            this.GetDirectReport = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.User.Read])); };
        }
        return DirectReport;
    })(Node);
    kurve.DirectReport = DirectReport;
    var DirectReports = (function (_super) {
        __extends(DirectReports, _super);
        function DirectReports(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/directReports");
            this.$ = function (userId) { return new DirectReport(_this.graph, _this.path, userId); };
            this.GetDirectReports = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, Users.$(_this.graph), _this.scopesForV2([Scopes.User.Read])); };
        }
        return DirectReports;
    })(CollectionNode);
    kurve.DirectReports = DirectReports;
    var User = (function (_super) {
        __extends(User, _super);
        function User(graph, path, userId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, userId ? path + "/" + userId : path + "/me");
            this.graph = graph;
            this.GetUser = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.User.Read])); };
        }
        Object.defineProperty(User.prototype, "messages", {
            get: function () { return new Messages(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "events", {
            get: function () { return new Events(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "calendarView", {
            get: function () { return new CalendarView(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "mailFolders", {
            get: function () { return new MailFolders(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "photo", {
            get: function () { return new Photo(this.graph, this.path, "user"); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "manager", {
            get: function () { return new Manager(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "directReports", {
            get: function () { return new DirectReports(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "memberOf", {
            get: function () { return new MemberOf(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        return User;
    })(Node);
    kurve.User = User;
    var Users = (function (_super) {
        __extends(Users, _super);
        function Users(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/users");
            this.$ = function (userId) { return new User(_this.graph, _this.path, userId); };
            this.GetUsers = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, _this.$, _this.scopesForV2([Scopes.User.Read])); };
        }
        Users.$ = function (graph) { return graph.users.$; };
        return Users;
    })(CollectionNode);
    kurve.Users = Users;
    var Group = (function (_super) {
        __extends(Group, _super);
        function Group(graph, path, groupId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/" + groupId);
            this.graph = graph;
            this.GetGroup = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.Group.ReadAll])); };
        }
        return Group;
    })(Node);
    kurve.Group = Group;
    var Groups = (function (_super) {
        __extends(Groups, _super);
        function Groups(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/groups");
            this.$ = function (groupId) { return new Group(_this.graph, _this.path, groupId); };
            this.GetGroups = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, _this.$, _this.scopesForV2([Scopes.Group.ReadAll])); };
        }
        Groups.$ = function (graph) { return graph.groups.$; };
        return Groups;
    })(CollectionNode);
    kurve.Groups = Groups;
})(kurve || (kurve = {}));
//*********************************************************
//
//Kurve js, https://github.com/microsoftdx/kurvejs
//
//Copyright (c) Microsoft Corporation
//All rights reserved.
//
// MIT License:
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// ""Software""), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//*********************************************************

//# sourceMappingURL=kurve.js.map