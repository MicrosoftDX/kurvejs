{"version":3,"sources":["kurve.ts"],"names":[],"mappings":"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","file":"kurve.js","sourcesContent":["// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license at the bottom of this file.\r\nmodule kurve  {\r\n    \r\n// Adapted from the original source: https://github.com/DirtyHairy/typescript-deferred\r\n\r\n\r\n\r\n  export class Error {\r\n        public status: number;\r\n        public statusText: string;\r\n        public text: string;\r\n        public other: any;\r\n    }\r\n    \r\n    function DispatchDeferred(closure: () => void) {\r\n        setTimeout(closure, 0);\r\n    }\r\n\r\n     enum PromiseState { Pending, ResolutionInProgress, Resolved, Rejected }\r\n\r\n    export interface PromiseCallback<T> {\r\n        (error: Error, result?: T): void;\r\n    }\r\n\r\n    class Client {\r\n        constructor(\r\n            private _dispatcher: (closure: () => void) => void,\r\n            private _successCB: any,\r\n            private _errorCB: any\r\n        ) {\r\n            this.result = new Deferred<any, any>(_dispatcher);\r\n        }\r\n\r\n        resolve(value: any, defer: boolean): void {\r\n            if (typeof (this._successCB) !== 'function') {\r\n                this.result.resolve(value);\r\n                return;\r\n            }\r\n\r\n            if (defer) {\r\n                this._dispatcher(() => this._dispatchCallback(this._successCB, value));\r\n            } else {\r\n                this._dispatchCallback(this._successCB, value);\r\n            }\r\n        }\r\n\r\n        reject(error: any, defer: boolean): void {\r\n            if (typeof (this._errorCB) !== 'function') {\r\n                this.result.reject(error);\r\n                return;\r\n            }\r\n\r\n            if (defer) {\r\n                this._dispatcher(() => this._dispatchCallback(this._errorCB, error));\r\n            } else {\r\n                this._dispatchCallback(this._errorCB, error);\r\n            }\r\n        }\r\n\r\n        private _dispatchCallback(callback: (arg: any) => any, arg: any): void {\r\n            var result: any,\r\n                then: any,\r\n                type: string;\r\n\r\n            try {\r\n                result = callback(arg);\r\n                this.result.resolve(result);\r\n            } catch (err) {\r\n                this.result.reject(err);\r\n                return;\r\n            }\r\n        }\r\n\r\n        result: Deferred<any, any>;\r\n    }\r\n\r\n    export class Deferred<T, E>  {\r\n        private _dispatcher: (closure: () => void)=> void;\r\n\r\n        constructor();\r\n        constructor(dispatcher: (closure: () => void) => void);\r\n        constructor(dispatcher?: (closure: () => void) => void) {\r\n            if (dispatcher)\r\n                this._dispatcher = dispatcher;\r\n            else\r\n                this._dispatcher = DispatchDeferred;\r\n            this.promise = new Promise<T, E>(this);\r\n        }\r\n\r\n        private DispatchDeferred(closure: () => void) {\r\n            setTimeout(closure, 0);\r\n        }\r\n\r\n        then(successCB: any, errorCB: any): any {\r\n            if (typeof (successCB) !== 'function' && typeof (errorCB) !== 'function') {\r\n                return this.promise;\r\n            }\r\n\r\n            var client = new Client(this._dispatcher, successCB, errorCB);\r\n\r\n            switch (this._state) {\r\n                case PromiseState.Pending:\r\n                case PromiseState.ResolutionInProgress:\r\n                    this._stack.push(client);\r\n                    break;\r\n\r\n                case PromiseState.Resolved:\r\n                    client.resolve(this._value, true);\r\n                    break;\r\n\r\n                case PromiseState.Rejected:\r\n                    client.reject(this._error, true);\r\n                    break;\r\n            }\r\n\r\n            return client.result.promise;\r\n        }\r\n\r\n        resolve(value?: T): Deferred<T, E>;\r\n\r\n        resolve(value?: Promise<T, E>): Deferred<T, E>;\r\n\r\n        resolve(value?: any): Deferred<T, E> {\r\n            if (this._state !== PromiseState.Pending) {\r\n                return this;\r\n            }\r\n\r\n            return this._resolve(value);\r\n        }\r\n\r\n        private _resolve(value: any): Deferred<T, E> {\r\n            var type = typeof (value),\r\n                then: any,\r\n                pending = true;\r\n\r\n            try {\r\n                if (value !== null &&\r\n                    (type === 'object' || type === 'function') &&\r\n                    typeof (then = value.then) === 'function') {\r\n                    if (value === this.promise) {\r\n                        throw new TypeError('recursive resolution');\r\n                    }\r\n\r\n                    this._state = PromiseState.ResolutionInProgress;\r\n                    then.call(value,\r\n                        (result: any): void => {\r\n                            if (pending) {\r\n                                pending = false;\r\n                                this._resolve(result);\r\n                            }\r\n                        },\r\n                        (error: any): void => {\r\n                            if (pending) {\r\n                                pending = false;\r\n                                this._reject(error);\r\n                            }\r\n                        }\r\n                    );\r\n                } else {\r\n                    this._state = PromiseState.ResolutionInProgress;\r\n\r\n                    this._dispatcher(() => {\r\n                        this._state = PromiseState.Resolved;\r\n                        this._value = value;\r\n\r\n                        var i: number,\r\n                            stackSize = this._stack.length;\r\n\r\n                        for (i = 0; i < stackSize; i++) {\r\n                            this._stack[i].resolve(value, false);\r\n                        }\r\n\r\n                        this._stack.splice(0, stackSize);\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                if (pending) {\r\n                    this._reject(err);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        }\r\n\r\n        reject(error?: E): Deferred<T, E> {\r\n            if (this._state !== PromiseState.Pending) {\r\n                return this;\r\n            }\r\n\r\n            return this._reject(error);\r\n        }\r\n\r\n        private _reject(error?: any): Deferred<T, E> {\r\n            this._state = PromiseState.ResolutionInProgress;\r\n\r\n            this._dispatcher(() => {\r\n                this._state = PromiseState.Rejected;\r\n                this._error = error;\r\n\r\n                var stackSize = this._stack.length,\r\n                    i = 0;\r\n\r\n                for (i = 0; i < stackSize; i++) {\r\n                    this._stack[i].reject(error, false);\r\n                }\r\n\r\n                this._stack.splice(0, stackSize);\r\n            });\r\n\r\n            return this;\r\n        }\r\n\r\n        promise: Promise<T, E>;\r\n\r\n        private _stack: Array<Client> = [];\r\n        private _state = PromiseState.Pending;\r\n        private _value: T;\r\n        private _error: any;\r\n    }\r\n\r\n    export class Promise<T, E>  {\r\n        constructor(private _deferred: Deferred<T, E>) { }\r\n\r\n        then<R>(\r\n            successCallback?: (result: T) => R,\r\n            errorCallback?: (error: E) => R\r\n        );\r\n\r\n        then(successCallback: any, errorCallback: any): any {\r\n            return this._deferred.then(successCallback, errorCallback);\r\n        }\r\n\r\n        fail<R>(\r\n            errorCallback?: (error: E) => R\r\n        );\r\n\r\n        fail(errorCallback: any): any {\r\n            return this._deferred.then(undefined, errorCallback);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\n\r\n\r\n    export enum EndPointVersion {\r\n        v1=1,\r\n        v2=2\r\n    }\r\n\r\n    export enum Mode {\r\n        Client = 1,\r\n        Node = 2\r\n    }\r\n\r\n    class CachedToken {\r\n        constructor(\r\n            public id: string,\r\n            public scopes: string[],\r\n            public resource: string,\r\n            public token: string,\r\n            public expiry: Date) {};\r\n\r\n        public get isExpired() {\r\n            return this.expiry <= new Date(new Date().getTime() + 60000);\r\n        }\r\n\r\n        public hasScopes(requiredScopes: string[]) {\r\n            if (!this.scopes) {\r\n                return false;\r\n            }\r\n\r\n            return requiredScopes.every(requiredScope => {\r\n                return this.scopes.some(actualScope => requiredScope === actualScope);\r\n            });\r\n        }\r\n    }\r\n\r\n    interface CachedTokenDictionary {\r\n        [index: string]: CachedToken;\r\n    }\r\n\r\n    export interface TokenStorage {\r\n        add(key: string, token: any);\r\n        remove(key: string);\r\n        getAll(): any[];\r\n        clear();\r\n    }\r\n\r\n    class TokenCache {\r\n        private cachedTokens: CachedTokenDictionary;\r\n\r\n        constructor(private tokenStorage: TokenStorage) {\r\n            this.cachedTokens = {};\r\n            if (tokenStorage) {\r\n                tokenStorage.getAll().forEach(({ id, scopes, resource, token, expiry }) => {\r\n                    var cachedToken = new CachedToken(id, scopes, resource, token, new Date(expiry));\r\n                    if (cachedToken.isExpired) {\r\n                        this.tokenStorage.remove(cachedToken.id);\r\n                    } else {\r\n                        this.cachedTokens[cachedToken.id] = cachedToken;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        public add(token: CachedToken) {\r\n            this.cachedTokens[token.id] = token;\r\n            this.tokenStorage && this.tokenStorage.add(token.id, token);\r\n        }\r\n\r\n        public getForResource(resource: string): CachedToken {\r\n            var cachedToken = this.cachedTokens[resource];\r\n            if (cachedToken && cachedToken.isExpired) {\r\n                this.remove(resource);\r\n                return null;\r\n            }\r\n            return cachedToken;\r\n        }\r\n\r\n        public getForScopes(scopes: string[]): CachedToken {\r\n            for (var key in this.cachedTokens) {\r\n                var cachedToken = this.cachedTokens[key];\r\n\r\n                if (cachedToken.hasScopes(scopes)) {\r\n                    if (cachedToken.isExpired) {\r\n                        this.remove(key);\r\n                    } else {\r\n                        return cachedToken;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        public clear() {\r\n            this.cachedTokens = {};\r\n            this.tokenStorage && this.tokenStorage.clear();\r\n        }\r\n\r\n        private remove(key) {\r\n            this.tokenStorage && this.tokenStorage.remove(key);\r\n            delete this.cachedTokens[key];\r\n        }\r\n    }\r\n\r\n    export class IdToken {\r\n        public Token: string;\r\n        public IssuerIdentifier: string;\r\n        public SubjectIdentifier: string;\r\n        public Audience: string;\r\n        public Expiry: Date;\r\n        public UPN: string;\r\n        public TenantId: string;\r\n        public FamilyName: string;\r\n        public GivenName: string;\r\n        public Name: string;\r\n        public PreferredUsername: string;\r\n        public FullToken: any;\r\n\r\n    }\r\n\r\n    export interface IdentitySettings {\r\n        clientId: string;\r\n        appSecret?: string;\r\n        tokenProcessingUri: string;\r\n        version: EndPointVersion;\r\n        tokenStorage?: TokenStorage;\r\n        mode: Mode;\r\n    }\r\n\r\n    export class Identity {\r\n        public clientId: string;\r\n        private state: string;\r\n        private version: EndPointVersion;\r\n        private nonce: string;\r\n        private idToken: IdToken;\r\n        private loginCallback: (error: Error) => void;\r\n        private getTokenCallback: (token: string, error: Error) => void;\r\n        private tokenProcessorUrl: string;\r\n        private tokenCache: TokenCache;\r\n        private refreshTimer: any;\r\n        private policy: string = \"\";\r\n        private mode: Mode = Mode.Client;\r\n        private appSecret: string;\r\n        private NodePersistDataCallBack: (key: string, value: string, expiry: Date) => void;\r\n        private NodeRetrieveDataCallBack: (key: string) => string;\r\n        private req: any;\r\n        private res: any;\r\n        private https: any;\r\n\r\n\r\n        constructor(identitySettings: IdentitySettings) {\r\n            this.clientId = identitySettings.clientId;\r\n            this.tokenProcessorUrl = identitySettings.tokenProcessingUri;\r\n//          this.req = new XMLHttpRequest();\r\n            if (identitySettings.version)\r\n                this.version = identitySettings.version;\r\n            else\r\n                this.version = EndPointVersion.v1;\r\n            if (identitySettings.appSecret)\r\n                this.appSecret=identitySettings.appSecret;\r\n            this.mode = identitySettings.mode;\r\n\r\n            if (this.mode === Mode.Client) {\r\n\r\n                this.tokenCache = new TokenCache(identitySettings.tokenStorage);\r\n\r\n                //Callback handler from other windows\r\n                window.addEventListener(\"message\", event => {\r\n                    if (event.data.type === \"id_token\") {\r\n                        if (event.data.error) {\r\n                            var e: Error = new Error();\r\n                            e.text = event.data.error;\r\n                            this.loginCallback(e);\r\n\r\n                        } else {\r\n                            //check for state\r\n                            if (this.state !== event.data.state) {\r\n                                var error = new Error();\r\n                                error.statusText = \"Invalid state\";\r\n                                this.loginCallback(error);\r\n                            } else {\r\n                                this.decodeIdToken(event.data.token);\r\n                                this.loginCallback(null);\r\n                            }\r\n                        }\r\n                    } else if (event.data.type === \"access_token\") {\r\n                        if (event.data.error) {\r\n                            var e: Error = new Error();\r\n                            e.text = event.data.error;\r\n                            this.getTokenCallback(null, e);\r\n\r\n                        } else {\r\n                            var token: string = event.data.token;\r\n                            var iframe = document.getElementById(\"tokenIFrame\");\r\n                            iframe.parentNode.removeChild(iframe);\r\n\r\n                            if (event.data.state !== this.state) {\r\n                                var error = new Error();\r\n                                error.statusText = \"Invalid state\";\r\n                                this.getTokenCallback(null, error);\r\n                            }\r\n                            else {\r\n                                this.getTokenCallback(token, null);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        private parseQueryString(str: string) {\r\n            var queryString = str || window.location.search || '';\r\n            var keyValPairs: any[] = [];\r\n            var params: any = {};\r\n            queryString = queryString.replace(/.*?\\?/, \"\");\r\n\r\n            if (queryString.length) {\r\n                keyValPairs = queryString.split('&');\r\n                for (var pairNum in keyValPairs) {\r\n                    var key = keyValPairs[pairNum].split('=')[0];\r\n                    if (!key.length) continue;\r\n                    if (typeof params[key] === 'undefined')\r\n                        params[key] = [];\r\n                    params[key].push(keyValPairs[pairNum].split('=')[1]);\r\n                }\r\n            }\r\n            return params;\r\n        }\r\n\r\n        private token(s: string, url: string) {\r\n            var start = url.indexOf(s);\r\n            if (start < 0) return null;\r\n            var end = url.indexOf(\"&\", start + s.length);\r\n            return url.substring(start, ((end > 0) ? end : url.length));\r\n        }\r\n\r\n        public checkForIdentityRedirect(): boolean {\r\n            var params = this.parseQueryString(window.location.href);\r\n            var idToken = this.token(\"#id_token=\", window.location.href);\r\n            var accessToken = this.token(\"#access_token\", window.location.href);\r\n            if (idToken) {\r\n                if (true || this.state === params[\"state\"][0]) { //BUG? When you are in a pure redirect system you don't remember your state or nonce so don't check.\r\n                    this.decodeIdToken(idToken);\r\n                    this.loginCallback && this.loginCallback(null);\r\n                } else {\r\n                    var error = new Error();\r\n                    error.statusText = \"Invalid state\";\r\n                    this.loginCallback && this.loginCallback(error);\r\n                }\r\n                return true;\r\n            }\r\n            else if (accessToken) {\r\n                throw \"Should not get here.  This should be handled via the iframe approach.\"\r\n            }\r\n            return false;\r\n        }\r\n\r\n        private decodeIdToken(idToken: string): void {\r\n\r\n            var decodedToken = this.base64Decode(idToken.substring(idToken.indexOf('.') + 1, idToken.lastIndexOf('.')));\r\n            var decodedTokenJSON = JSON.parse(decodedToken);\r\n            var expiryDate = new Date(new Date('01/01/1970 0:0 UTC').getTime() + parseInt(decodedTokenJSON.exp) * 1000);\r\n            this.idToken = new IdToken();\r\n            this.idToken.FullToken = decodedTokenJSON;\r\n            this.idToken.Token = idToken;\r\n            this.idToken.Expiry = expiryDate;\r\n            this.idToken.UPN = decodedTokenJSON.upn;\r\n            this.idToken.TenantId = decodedTokenJSON.tid;\r\n            this.idToken.FamilyName = decodedTokenJSON.family_name;\r\n            this.idToken.GivenName = decodedTokenJSON.given_name;\r\n            this.idToken.Name = decodedTokenJSON.name;\r\n            this.idToken.PreferredUsername = decodedTokenJSON.preferred_username;\r\n\r\n            var expiration: Number = expiryDate.getTime() - new Date().getTime() - 300000;\r\n\r\n            this.refreshTimer = setTimeout((() => {\r\n                this.renewIdToken();\r\n            }), expiration);\r\n        }\r\n\r\n        private decodeAccessToken(accessToken: string, resource?:string, scopes?:string[]): CachedToken {\r\n            var decodedToken = this.base64Decode(accessToken.substring(accessToken.indexOf('.') + 1, accessToken.lastIndexOf('.')));\r\n            var decodedTokenJSON = JSON.parse(decodedToken);\r\n            var expiryDate = new Date(new Date('01/01/1970 0:0 UTC').getTime() + parseInt(decodedTokenJSON.exp) * 1000);\r\n            var key = resource || scopes.join(\" \");\r\n\r\n            var token = new CachedToken(key, scopes, resource, accessToken, expiryDate);\r\n            return token;\r\n        }\r\n\r\n        public getIdToken(): any {\r\n            return this.idToken;\r\n        }\r\n        public isLoggedIn(): boolean {\r\n            if (!this.idToken) return false;\r\n            return (this.idToken.Expiry > new Date());\r\n        }\r\n\r\n        private renewIdToken(): void {\r\n            clearTimeout(this.refreshTimer);\r\n            this.login(() => { });\r\n        }\r\n\r\n        public getCurrentEndPointVersion(): EndPointVersion {\r\n            return this.version;\r\n        }\r\n\r\n        public getAccessTokenAsync(resource: string): Promise<string,Error> {\r\n\r\n            var d = new Deferred<string,Error>();\r\n            this.getAccessToken(resource, ((error, token) => {\r\n                if (error) {\r\n                    d.reject(error);\r\n                } else {\r\n                    d.resolve(token);\r\n                }\r\n            }));\r\n            return d.promise;\r\n        }\r\n\r\n        public getAccessToken(resource: string, callback: PromiseCallback<string>): void {\r\n            if (this.version !== EndPointVersion.v1) {\r\n                var e = new Error();\r\n                e.statusText = \"Currently this identity class is using v2 OAuth mode. You need to use getAccessTokenForScopes() method\";\r\n                callback(e);\r\n                return;\r\n            }\r\n            if (this.mode === Mode.Client) {\r\n                var token = this.tokenCache.getForResource(resource);\r\n                if (token) {\r\n                    return callback(null, token.token);\r\n                }\r\n\r\n                //If we got this far, we need to go get this token\r\n\r\n                //Need to create the iFrame to invoke the acquire token\r\n                this.getTokenCallback = ((token: string, error: Error) => {\r\n                    if (error) {\r\n                        callback(error);\r\n                    }\r\n                    else {\r\n                        var t = this.decodeAccessToken(token, resource);\r\n                        this.tokenCache.add(t);\r\n                        callback(null, token);\r\n                    }\r\n                });\r\n\r\n                this.nonce = \"token\" + this.generateNonce();\r\n                this.state = \"token\" + this.generateNonce();\r\n\r\n                var iframe = document.createElement('iframe');\r\n                iframe.style.display = \"none\";\r\n                iframe.id = \"tokenIFrame\";\r\n\r\n                iframe.src = this.tokenProcessorUrl + \"?clientId=\" + encodeURIComponent(this.clientId) +\r\n                    \"&resource=\" + encodeURIComponent(resource) +\r\n                    \"&redirectUri=\" + encodeURIComponent(this.tokenProcessorUrl) +\r\n                    \"&state=\" + encodeURIComponent(this.state) +\r\n                    \"&version=\" + encodeURIComponent(this.version.toString()) +\r\n                    \"&nonce=\" + encodeURIComponent(this.nonce) +\r\n                    \"&op=token\";\r\n\r\n                document.body.appendChild(iframe);\r\n            } else {\r\n                var cookies = this.parseNodeCookies(this.req);\r\n                var upn = this.NodeRetrieveDataCallBack(\"session|\" + cookies[\"kurveSession\"]);\r\n                var code = this.NodeRetrieveDataCallBack(\"code|\" + upn);\r\n\r\n                var post_data = \"grant_type=authorization_code\" +\r\n                    \"&client_id=\" + encodeURIComponent(this.clientId) +\r\n                    \"&code=\" + encodeURIComponent(code) +\r\n                    \"&redirect_uri=\" + encodeURIComponent(this.tokenProcessorUrl) +\r\n                    \"&resource=\" + encodeURIComponent(resource) +\r\n                    \"&client_secret=\" + encodeURIComponent(this.appSecret);\r\n\r\n                var post_options = {\r\n                    host: 'login.microsoftonline.com',\r\n                    port: '443',\r\n                    path: '/common/oauth2/token',\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/x-www-form-urlencoded',\r\n                        'Content-Length': post_data.length,\r\n                        accept: '*/*'\r\n                    }\r\n                };\r\n\r\n                var post_req = this.https.request(post_options, (response) => {\r\n                    response.setEncoding('utf8');\r\n                    response.on('data', (chunk) => {\r\n                        var chunkJson = JSON.parse(chunk);\r\n                        var t = this.decodeAccessToken(chunkJson.access_token, resource);\r\n                        // this.tokenCache.add(t); //TODO: Persist/retrieve token cache no server\r\n                        callback(null, chunkJson.access_token);\r\n                    });\r\n                });\r\n\r\n                post_req.write(post_data);\r\n                post_req.end();\r\n            }\r\n        }\r\n\r\n        private parseNodeCookies(req) {\r\n            var list = {};\r\n            var rc = req.headers.cookie;\r\n\r\n            rc && rc.split(';').forEach(function (cookie) {\r\n                var parts = cookie.split('=');\r\n                list[parts.shift().trim()] = decodeURI(parts.join('='));\r\n            });\r\n\r\n            return list;\r\n        }\r\n        public handleNodeCallback(req: any, res: any, https: any, crypto: any, persistDataCallback: (key: string, value: string, expiry: Date) => void, retrieveDataCallback: (key: string) => string): Promise<boolean, Error> {\r\n            this.NodePersistDataCallBack = persistDataCallback;\r\n            this.NodeRetrieveDataCallBack = retrieveDataCallback;\r\n            var url: string = <string>req.url;\r\n\r\n            this.req = req;\r\n            this.res = res;\r\n            this.https = https;\r\n\r\n            var params = this.parseQueryString(url);\r\n            var code = this.token(\"code=\", url);\r\n            var accessToken = this.token(\"#access_token\", url);\r\n            var cookies = this.parseNodeCookies(req);\r\n\r\n            var d = new Deferred<boolean, Error>();\r\n\r\n            if (this.version === EndPointVersion.v1) {\r\n\r\n                if (code) {\r\n                    var codeFromRequest = params[\"code\"][0];\r\n                    var stateFromRequest = params[\"state\"][0];\r\n                    var cachedState = retrieveDataCallback(\"state|\" + stateFromRequest);\r\n                    if (cachedState) {\r\n                        if (cachedState === \"waiting\") {\r\n                            var expiry = new Date(new Date().getTime() + 86400000);\r\n                            persistDataCallback(\"state|\" + stateFromRequest, \"done\", expiry);\r\n\r\n                            var post_data = \"grant_type=authorization_code\" +\r\n                                \"&client_id=\" + encodeURIComponent(this.clientId) +\r\n                                \"&code=\" + encodeURIComponent(codeFromRequest) +\r\n                                \"&redirect_uri=\" + encodeURIComponent(this.tokenProcessorUrl) +\r\n                                \"&resource=\" + encodeURIComponent(\"https://graph.microsoft.com\") +\r\n                                \"&client_secret=\" + encodeURIComponent(this.appSecret);\r\n\r\n                            var post_options = {\r\n                                host: 'login.microsoftonline.com',\r\n                                port: '443',\r\n                                path: '/common/oauth2/token',\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                                    'Content-Length': post_data.length,\r\n                                    accept: '*/*'\r\n                                }\r\n                            };\r\n\r\n                            var post_req = https.request(post_options, (response) => {\r\n                                response.setEncoding('utf8');\r\n                                response.on('data', (chunk) => {\r\n                                    var chunkJson = JSON.parse(chunk);\r\n                                    var decodedToken = JSON.parse(this.base64Decode(chunkJson.access_token.substring(chunkJson.access_token.indexOf('.') + 1, chunkJson.access_token.lastIndexOf('.'))));\r\n                                    var upn = decodedToken.upn;\r\n                                    var sha = crypto.createHash('sha256');\r\n                                    sha.update(Math.random().toString());\r\n                                    var sessionID = sha.digest('hex');\r\n                                    var expiry = new Date(new Date().getTime() + 30 * 60 * 1000);\r\n                                    persistDataCallback(\"session|\" + sessionID, upn, expiry);\r\n                                    persistDataCallback(\"code|\" + upn, codeFromRequest, expiry);\r\n                                    res.writeHead(302, {\r\n                                        'Set-Cookie': 'kurveSession=' + sessionID,\r\n                                        'Location': '/'\r\n                                    });\r\n                                    res.end();\r\n                                    d.resolve(false);\r\n\r\n                                });\r\n                            });\r\n\r\n                            post_req.write(post_data);\r\n                            post_req.end();\r\n                        } else {\r\n                            //same state has been reused, not allowed\r\n                            res.writeHead(500, \"Replay detected\", { 'content-type': 'text/plain' });\r\n                            res.end(\"Replay detected\");\r\n                            d.resolve(false);\r\n                        }\r\n                    }\r\n                    else {\r\n                        //state doesn't match any of our cached ones\r\n                        res.writeHead(500, \"State doesn't match\", { 'content-type': 'text/plain' });\r\n                        res.end(\"State doesn't match\");\r\n                        d.resolve(false);\r\n                    }\r\n                    return d.promise;\r\n\r\n                } else {\r\n                    if (cookies[\"kurveSession\"]) {\r\n                        var upn = retrieveDataCallback(\"session|\" + cookies[\"kurveSession\"]);\r\n                        if (upn) {\r\n                            d.resolve(true);\r\n                            return d.promise;\r\n                        }\r\n                    }\r\n                    var state: string = this.generateNonce();\r\n                    var expiry = new Date(new Date().getTime() + 900000);\r\n\r\n                    persistDataCallback(\"state|\" + state, \"waiting\", expiry);\r\n\r\n                    var url = \"https://login.microsoftonline.com/common/oauth2/authorize?response_type=code&client_id=\" +\r\n                        encodeURIComponent(this.clientId) +\r\n                        \"&redirect_uri=\" + encodeURIComponent(this.tokenProcessorUrl) +\r\n                        \"&state=\" + encodeURIComponent(state);\r\n\r\n                    res.writeHead(302, { 'Location': url });\r\n\r\n                    res.end();\r\n                    d.resolve(false);\r\n                    return d.promise;\r\n                }\r\n            } else {\r\n                //TODO: v2\r\n                d.resolve(false);\r\n                return d.promise;\r\n            }\r\n        }\r\n        public getAccessTokenForScopesAsync(scopes: string[], promptForConsent = false): Promise<string, Error> {\r\n\r\n            var d = new Deferred<string, Error>();\r\n            this.getAccessTokenForScopes(scopes, promptForConsent, (token, error) => {\r\n                if (error) {\r\n                    d.reject(error);\r\n                } else {\r\n                    d.resolve(token);\r\n                }\r\n            });\r\n            return d.promise;\r\n        }\r\n\r\n        public getAccessTokenForScopes(scopes: string[], promptForConsent, callback: (token: string, error: Error) => void): void {\r\n            if (this.version !== EndPointVersion.v2) {\r\n                var e = new Error();\r\n                e.statusText = \"Dynamic scopes require v2 mode. Currently this identity class is using v1\";\r\n                callback(null, e);\r\n                return;\r\n            }\r\n\r\n            var token = this.tokenCache.getForScopes(scopes);\r\n            if (token) {\r\n                return callback(token.token, null);\r\n            }\r\n\r\n            //If we got this far, we don't have a valid cached token, so will need to get one.\r\n\r\n            //Need to create the iFrame to invoke the acquire token\r\n\r\n            this.getTokenCallback = ((token: string, error: Error) => {\r\n                if (error) {\r\n                    if (promptForConsent || !error.text) {\r\n                        callback(null, error);\r\n                    } else if (error.text.indexOf(\"AADSTS65001\")>=0) {\r\n                        //We will need to try getting the consent\r\n                        this.getAccessTokenForScopes(scopes, true, this.getTokenCallback);\r\n                    } else {\r\n                        callback(null, error);\r\n                    }\r\n                }\r\n                else {\r\n                    var t = this.decodeAccessToken(token, null, scopes);\r\n                    this.tokenCache.add(t);\r\n                    callback(token, null);\r\n                }\r\n            });\r\n\r\n            this.nonce = \"token\" + this.generateNonce();\r\n            this.state = \"token\" + this.generateNonce();\r\n\r\n            if (!promptForConsent) {\r\n                var iframe = document.createElement('iframe');\r\n                iframe.style.display = \"none\";\r\n                iframe.id = \"tokenIFrame\";\r\n                iframe.src = this.tokenProcessorUrl + \"?clientId=\" + encodeURIComponent(this.clientId) +\r\n                    \"&scopes=\" + encodeURIComponent(scopes.join(\" \")) +\r\n                    \"&redirectUri=\" + encodeURIComponent(this.tokenProcessorUrl) +\r\n                    \"&version=\" + encodeURIComponent(this.version.toString()) +\r\n                    \"&state=\" + encodeURIComponent(this.state) +\r\n                    \"&nonce=\" + encodeURIComponent(this.nonce) +\r\n                    \"&login_hint=\" + encodeURIComponent(this.idToken.PreferredUsername) +\r\n                    \"&domain_hint=\" + encodeURIComponent(this.idToken.TenantId === \"9188040d-6c67-4c5b-b112-36a304b66dad\" ? \"consumers\" : \"organizations\") +\r\n                    \"&op=token\";\r\n                document.body.appendChild(iframe);\r\n            } else {\r\n                window.open(this.tokenProcessorUrl + \"?clientId=\" + encodeURIComponent(this.clientId) +\r\n                    \"&scopes=\" + encodeURIComponent(scopes.join(\" \")) +\r\n                    \"&redirectUri=\" + encodeURIComponent(this.tokenProcessorUrl) +\r\n                    \"&version=\" + encodeURIComponent(this.version.toString()) +\r\n                    \"&state=\" + encodeURIComponent(this.state) +\r\n                    \"&nonce=\" + encodeURIComponent(this.nonce) +\r\n                    \"&op=token\"\r\n                    , \"_blank\");\r\n            }\r\n        }\r\n\r\n        public loginAsync(loginSettings?: { scopes?: string[], policy?: string, tenant?: string }): Promise<void, Error> {\r\n        //TODO: Not node compatible\r\n            var d = new Deferred<void, Error>();\r\n            this.login((error) => {\r\n                if (error) {\r\n                    d.reject(error);\r\n                }\r\n                else {\r\n                    d.resolve(null);\r\n                }\r\n            }, loginSettings);\r\n            return d.promise;\r\n        }\r\n\r\n        public login(callback: (error: Error) => void, loginSettings?: { scopes?: string[], policy?: string, tenant?: string }): void {\r\n        //TODO: Not node compatible\r\n            this.loginCallback = callback;\r\n            if (!loginSettings) loginSettings = {};\r\n            if (loginSettings.policy) this.policy = loginSettings.policy;\r\n\r\n            if (loginSettings.scopes && this.version === EndPointVersion.v1) {\r\n                var e = new Error();\r\n                e.text = \"Scopes can only be used with OAuth v2.\";\r\n                callback(e);\r\n                return;\r\n            }\r\n\r\n            if (loginSettings.policy && !loginSettings.tenant) {\r\n                var e = new Error();\r\n                e.text = \"In order to use policy (AAD B2C) a tenant must be specified as well.\";\r\n                callback(e);\r\n                return;\r\n            }\r\n            this.state = \"login\" + this.generateNonce();\r\n            this.nonce = \"login\" + this.generateNonce();\r\n            var loginURL = this.tokenProcessorUrl + \"?clientId=\" + encodeURIComponent(this.clientId) +\r\n                \"&redirectUri=\" + encodeURIComponent(this.tokenProcessorUrl) +\r\n                \"&state=\" + encodeURIComponent(this.state) +\r\n                \"&nonce=\" + encodeURIComponent(this.nonce) +\r\n                \"&version=\" + encodeURIComponent(this.version.toString()) +\r\n                \"&op=login\" +\r\n                \"&p=\" + encodeURIComponent(this.policy);\r\n            if (loginSettings.tenant) {\r\n                loginURL += \"&tenant=\" + encodeURIComponent(loginSettings.tenant);\r\n            }\r\n            if (this.version === EndPointVersion.v2) {\r\n                    if (!loginSettings.scopes) loginSettings.scopes = [];\r\n                    if (loginSettings.scopes.indexOf(\"profile\") < 0)\r\n                        loginSettings.scopes.push(\"profile\");\r\n                    if (loginSettings.scopes.indexOf(\"openid\") < 0)\r\n                        loginSettings.scopes.push(\"openid\");\r\n\r\n                    loginURL += \"&scopes=\" + encodeURIComponent(loginSettings.scopes.join(\" \"));\r\n            }\r\n            window.open(loginURL, \"_blank\");\r\n        }\r\n\r\n\r\n        public loginNoWindowAsync(toUrl?: string): Promise<void, Error> {\r\n        //TODO: Not node compatible\r\n            var d = new Deferred<void, Error>();\r\n            this.loginNoWindow((error) => {\r\n                if (error) {\r\n                    d.reject(error);\r\n                }\r\n                else {\r\n                    d.resolve(null);\r\n                }\r\n            }, toUrl);\r\n            return d.promise;\r\n        }\r\n\r\n        public loginNoWindow(callback: (error: Error) => void, toUrl?: string): void {\r\n        //TODO: Not node compatible\r\n            this.loginCallback = callback;\r\n            this.state = \"clientId=\" + this.clientId + \"&\" + \"tokenProcessorUrl=\" + this.tokenProcessorUrl\r\n            this.nonce = this.generateNonce();\r\n\r\n            var redirected = this.checkForIdentityRedirect();\r\n            if (!redirected) {\r\n                var redirectUri = (toUrl) ? toUrl : window.location.href.split(\"#\")[0];  // default the no login window scenario to return to the current page\r\n                var url = \"https://login.microsoftonline.com/common/oauth2/authorize?response_type=id_token\" +\r\n                    \"&client_id=\" + encodeURIComponent(this.clientId) +\r\n                    \"&redirect_uri=\" + encodeURIComponent(redirectUri) +\r\n                    \"&state=\" + encodeURIComponent(this.state) +\r\n                    \"&nonce=\" + encodeURIComponent(this.nonce);\r\n                window.location.href = url;\r\n            }\r\n        }\r\n\r\n        public logOut(): void {\r\n        //TODO: Not node compatible\r\n            this.tokenCache.clear();\r\n            var url = \"https://login.microsoftonline.com/common/oauth2/logout?post_logout_redirect_uri=\" + encodeURI(window.location.href);\r\n            window.location.href = url;\r\n        }\r\n\r\n        private base64Decode(encodedString: string): string {\r\n            var e: any = {}, i: number, b = 0, c: number, x: number, l = 0, a: any, r = '', w = String.fromCharCode, L = encodedString.length;\r\n            var A = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n            for (i = 0; i < 64; i++) { e[A.charAt(i)] = i; }\r\n            for (x = 0; x < L; x++) {\r\n                c = e[encodedString.charAt(x)];\r\n                b = (b << 6) + c;\r\n                l += 6;\r\n                while (l >= 8) {\r\n                    ((a = (b >>> (l -= 8)) & 0xff) || (x < (L - 2))) && (r += w(a));\r\n                }\r\n            }\r\n            return r;\r\n        }\r\n\r\n        private generateNonce(): string {\r\n            var text = \"\";\r\n            var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n            for (var i = 0; i < 32; i++) {\r\n                text += chars.charAt(Math.floor(Math.random() * chars.length));\r\n            }\r\n            return text;\r\n        }\r\n    }\r\n\r\n\r\n\n\r\n    export class Graph {\r\n        private req: XMLHttpRequest = null;\r\n        private accessToken: string = null;\r\n        KurveIdentity: Identity = null;\r\n        private defaultResourceID: string = \"https://graph.microsoft.com\";\r\n        private baseUrl: string = \"https://graph.microsoft.com/v1.0\";\r\n        private https: any;\r\n        private mode: Mode;\r\n\r\n        constructor(identityInfo: { identity: Identity }, mode: Mode, https?: any);\r\n        constructor(identityInfo: { defaultAccessToken: string },mode:Mode, https?: any);\r\n        constructor(identityInfo: any, mode: Mode, https?: any) {\r\n            if (https) this.https = https;\r\n            this.mode = mode;\r\n            if (identityInfo.defaultAccessToken) {\r\n                this.accessToken = identityInfo.defaultAccessToken;\r\n            } else {\r\n                this.KurveIdentity = identityInfo.identity;\r\n            }\r\n        }\r\n\r\n        get me() { return new User(this, this.baseUrl); }\r\n        get users() { return new Users(this, this.baseUrl); }\r\n        get groups() { return new Groups(this, this.baseUrl); }\r\n\r\n        public Get<Model, N extends Node>(path:string, self:N, scopes?:string[], responseType?:string): Promise<Singleton<Model, N>, Error> {\r\n            console.log(\"GET\", path, scopes);\r\n            var d = new Deferred<Singleton<Model, N>, Error>();\r\n\r\n            this.get(path, (error, result) => {\r\n                if (!responseType){\r\n                    var jsonResult = JSON.parse(result) ;\r\n\r\n                    if (jsonResult.error) {\r\n                        var errorODATA = new Error();\r\n                        errorODATA.other = jsonResult.error;\r\n                        d.reject(errorODATA);\r\n                        return;\r\n                    }\r\n                    d.resolve(new Singleton<Model, N>(jsonResult, self));\r\n                } else {\r\n                    d.resolve(new Singleton<Model, N>(result, self));\r\n                }\r\n\r\n                \r\n            }, responseType, scopes);\r\n\r\n            return d.promise;\r\n         }\r\n\r\n        public GetCollection<Model, N extends CollectionNode>(path:string, self:N, next:N, scopes?:string[]): Promise<Collection<Model, N>, Error> {\r\n            console.log(\"GET collection\", path, scopes);\r\n            var d = new Deferred<Collection<Model, N>, Error>();\r\n\r\n            this.get(path, (error, result) => {\r\n                var jsonResult = JSON.parse(result) ;\r\n\r\n                if (jsonResult.error) {\r\n                    var errorODATA = new Error();\r\n                    errorODATA.other = jsonResult.error;\r\n                    d.reject(errorODATA);\r\n                    return;\r\n                }\r\n\r\n                d.resolve(new Collection<Model,N>(jsonResult, self, next))\r\n            }, null, scopes);\r\n\r\n            return d.promise;\r\n         }\r\n\r\n        public Post<Model, N extends Node>(object:Model, path:string, self:N, scopes?:string[]): Promise<Singleton<Model, N>, Error> {\r\n            console.log(\"POST\", path, scopes);\r\n            var d = new Deferred<Singleton<Model, N>, Error>();\r\n            \r\n/*\r\n            this.post(object, path, (error, result) => {\r\n                var jsonResult = JSON.parse(result) ;\r\n\r\n                if (jsonResult.error) {\r\n                    var errorODATA = new Error();\r\n                    errorODATA.other = jsonResult.error;\r\n                    d.reject(errorODATA);\r\n                    return;\r\n                }\r\n\r\n                d.resolve(new Response<Model, N>({}, self));\r\n            });\r\n*/\r\n            return d.promise;\r\n         }\r\n \r\n        public get(url: string, callback: PromiseCallback<string>, responseType?: string, scopes?: string[]): void {\r\n            if (this.mode === Mode.Client) {\r\n                var xhr = new XMLHttpRequest();\r\n                if (responseType)\r\n                    xhr.responseType = responseType;\r\n                xhr.onreadystatechange = () => {\r\n                    if (xhr.readyState === 4)\r\n                        if (xhr.status === 200)\r\n                            callback(null, responseType ? xhr.response : xhr.responseText);\r\n                        else\r\n                            callback(this.generateError(xhr));\r\n                }\r\n\r\n                xhr.open(\"GET\", url);\r\n                this.addAccessTokenAndSend(xhr, (addTokenError: Error) => {\r\n                    if (addTokenError) {\r\n                        callback(addTokenError);\r\n                    }\r\n                }, scopes);\r\n            } else {\r\n                var token = this.findAccessToken((token, error) => {\r\n                    var path = url.substr(27, url.length);\r\n                    var options = {\r\n                        host: 'graph.microsoft.com',\r\n                        port: '443',\r\n                        path: path,\r\n                        method: 'GET',\r\n                        headers: {\r\n                           'Content-Type': responseType?responseType:'application/json',\r\n                            accept: '*/*',\r\n                            'Authorization': 'Bearer ' + token\r\n                        }\r\n                    };\r\n\r\n                    var post_req = this.https.request(options, (response) => {\r\n                        response.setEncoding('utf8');\r\n                        response.on('data', (chunk) => {\r\n                            callback(null, chunk);\r\n                        });\r\n                    });\r\n\r\n                    post_req.end();\r\n\r\n                }, scopes);\r\n            }\r\n        }\r\n        private findAccessToken(callback: (token: string, error: Error) => void, scopes?: string[]): void {\r\n            if (this.accessToken) {\r\n                callback(this.accessToken, null);\r\n            } else {\r\n                //Using the integrated Identity object\r\n\r\n                if (scopes) {\r\n                    //v2 scope based tokens\r\n                    this.KurveIdentity.getAccessTokenForScopes(scopes, false, ((token: string, error: Error) => {\r\n                        if (error)\r\n                            callback(null, error);\r\n                        else {\r\n                            callback(token, null);\r\n                        }\r\n                    }));\r\n\r\n                }\r\n                else {\r\n                    //v1 resource based tokens\r\n                    this.KurveIdentity.getAccessToken(this.defaultResourceID, ((error: Error, token: string) => {\r\n                        if (error)\r\n                            callback(null, error);\r\n                        else {\r\n                            callback(token, null);\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        public post(object:string, url: string, callback: PromiseCallback<string>, responseType?: string, scopes?:string[]): void {\r\n/*\r\n            var xhr = new XMLHttpRequest();\r\n            if (responseType)\r\n                xhr.responseType = responseType;\r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState === 4)\r\n                    if (xhr.status === 202)\r\n                        callback(null, responseType ? xhr.response : xhr.responseText);\r\n                    else\r\n                        callback(this.generateError(xhr));\r\n            }\r\n            xhr.send(object)\r\n            xhr.open(\"GET\", url);\r\n            this.addAccessTokenAndSend(xhr, (addTokenError: Error) => {\r\n                if (addTokenError) {\r\n                    callback(addTokenError);\r\n                }\r\n            }, scopes);\r\n*/\r\n        }\r\n\r\n        private generateError(xhr: XMLHttpRequest): Error {\r\n            var response = new Error();\r\n            response.status = xhr.status;\r\n            response.statusText = xhr.statusText;\r\n            if (xhr.responseType === '' || xhr.responseType === 'text')\r\n                response.text = xhr.responseText;\r\n            else\r\n                response.other = xhr.response;\r\n            return response;\r\n\r\n        }\r\n\r\n        private addAccessTokenAndSend(xhr: XMLHttpRequest, callback: (error: Error) => void, scopes?: string[]): void {\r\n            this.findAccessToken((token, error) => {\r\n                if (token) {\r\n                    xhr.setRequestHeader('Authorization', 'Bearer ' + token);\r\n                    xhr.send();\r\n                } else {\r\n                    callback(error);\r\n                }\r\n            }, scopes);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\n\r\n\r\nexport interface ItemBody {\r\n    contentType?: string;\r\n    content?: string;\r\n}\r\n\r\nexport interface EmailAddress {\r\n    name?: string;\r\n    address?: string;\r\n}\r\n\r\nexport interface Recipient {\r\n    emailAddress?: EmailAddress;\r\n}\r\n\r\nexport interface UserDataModel {\r\n    businessPhones?: string;\r\n    displayName?: string;\r\n    givenName?: string;\r\n    jobTitle?: string;\r\n    mail?: string;\r\n    mobilePhone?: string;\r\n    officeLocation?: string;\r\n    preferredLanguage?: string;\r\n    surname?: string;\r\n    userPrincipalName?: string;\r\n    id?: string;\r\n}\r\n\r\nexport interface ProfilePhotoDataModel {\r\n    id?: string;\r\n    height?: Number;\r\n    width?: Number;\r\n}\r\n\r\nexport interface MessageDataModel {\r\n    attachments?: AttachmentDataModel[];\r\n    bccRecipients?: Recipient[];\r\n    body?: ItemBody;\r\n    bodyPreview?: string;\r\n    categories?: string[]\r\n    ccRecipients?: Recipient[];\r\n    changeKey?: string;\r\n    conversationId?: string;\r\n    createdDateTime?: string;\r\n    from?: Recipient;\r\n    graph?: any;\r\n    hasAttachments?: boolean;\r\n    id?: string;\r\n    importance?: string;\r\n    isDeliveryReceiptRequested?: boolean;\r\n    isDraft?: boolean;\r\n    isRead?: boolean;\r\n    isReadReceiptRequested?: boolean;\r\n    lastModifiedDateTime?: string;\r\n    parentFolderId?: string;\r\n    receivedDateTime?: string;\r\n    replyTo?: Recipient[]\r\n    sender?: Recipient;\r\n    sentDateTime?: string;\r\n    subject?: string;\r\n    toRecipients?: Recipient[];\r\n    webLink?: string;\r\n}\r\n\r\nexport interface Attendee {\r\n    status?: ResponseStatus;\r\n    type?: string;\r\n    emailAddress?: EmailAddress;\r\n}\r\n\r\nexport interface DateTimeTimeZone {\r\n    dateTime?: string;\r\n    timeZone?: string;\r\n}\r\n\r\nexport interface PatternedRecurrence { }\r\n\r\nexport interface ResponseStatus {\r\n    response?: string;\r\n    time?: string\r\n}\r\n\r\nexport interface Location {\r\n    displayName?: string;\r\n    address?: any;\r\n}\r\n\r\nexport interface EventDataModel {\r\n    attendees?: Attendee[];\r\n    body?: ItemBody;\r\n    bodyPreview?: string;\r\n    categories?: string[];\r\n    changeKey?: string;\r\n    createdDateTime?: string;\r\n    end?: DateTimeTimeZone;\r\n    hasAttachments?: boolean;\r\n    iCalUId?: string;\r\n    id?: string;\r\n    IDBCursor?: string;\r\n    importance?: string;\r\n    isAllDay?: boolean;\r\n    isCancelled?: boolean;\r\n    isOrganizer?: boolean;\r\n    isReminderOn?: boolean;\r\n    lastModifiedDateTime?: string;\r\n    location?: Location;\r\n    organizer?: Recipient;\r\n    originalEndTimeZone?: string;\r\n    originalStartTimeZone?: string;\r\n    recurrence?: PatternedRecurrence;\r\n    reminderMinutesBeforeStart?: number;\r\n    responseRequested?: boolean;\r\n    responseStatus?: ResponseStatus;\r\n    sensitivity?: string;\r\n    seriesMasterId?: string;\r\n    showAs?: string;\r\n    start?: DateTimeTimeZone;\r\n    subject?: string;\r\n    type?: string;\r\n    webLink?: string;\r\n}\r\n\r\nexport interface GroupDataModel {\r\n    id?: string;\r\n    description?: string;\r\n    displayName?: string;\r\n    groupTypes?: string[];\r\n    mail?: string;\r\n    mailEnabled?: Boolean;\r\n    mailNickname?: string;\r\n    onPremisesLastSyncDateTime?: Date;\r\n    onPremisesSecurityIdentifier?: string;\r\n    onPremisesSyncEnabled?: Boolean;\r\n    proxyAddresses?: string[];\r\n    securityEnabled?: Boolean;\r\n    visibility?: string;\r\n}\r\n\r\nexport interface MailFolderDataModel {\r\n    id?: string;\r\n    displayName?: string;\r\n    childFolderCount?: number;\r\n    unreadItemCount?: number;\r\n    totalItemCount?: number;\r\n}\r\n\r\nexport interface AttachmentDataModel {\r\n    contentId?: string;\r\n    id?: string;\r\n    isInline?: boolean;\r\n    lastModifiedDateTime?: Date;\r\n    name?: string;\r\n    size?: number;\r\n\r\n    /* File Attachments */\r\n    contentBytes?: string;\r\n    contentLocation?: string;\r\n    contentType?: string;\r\n}\r\n\r\n\n\r\n\r\n/*\r\n\r\nRequestBuilder allows you to discover and access the Microsoft Graph using Visual Studio Code intellisense.\r\n\r\nJust start typing and see how intellisense helps you explore the graph:\r\n\r\n    graph.                      me, users\r\n    graph.me.                   events, messages, calendarView, mailFolders, GetUser, odata, select, ...\r\n    graph.me.events.            GetEvents, $, odata, select, ...\r\n    graph.me.events.$           (eventId:string) => Event\r\n    graph.me.events.$(\"123\").   GetEvent, odata, select, ...\r\n\r\nEach endpoint exposes the set of available Graph operations through strongly typed methods:\r\n\r\n    graph.me.GetUser() => UserDataModel\r\n        GET \"/me\"\r\n    graph.me.events.GetEvents => EventDataModel[]\r\n        GET \"/me/events\"\r\n    graph.me.events.CreateEvent(event:EventDataModel) \r\n        POST \"/me/events\"\r\n\r\nCertain Graph endpoints are implemented as OData \"Functions\". These are not treated as Graph nodes. They're just methods: \r\n\r\n    graph.me.events.$(\"123\").DeclineEvent(eventResponse:EventResponse)\r\n        POST \"/me/events/123/microsoft.graph.decline\r\n\r\nGraph operations are exposed through Promises:\r\n\r\n    graph.me.messages\r\n    .GetMessages()\r\n    .then(collection =>\r\n        collection.items.forEach(message =>\r\n            console.log(message.subject)\r\n        )\r\n    )\r\n\r\nAll operations return a \"self\" property which allows you to continue along the Graph path from the point where you left off:\r\n\r\n    graph.me.messages.$(\"123\").GetMessage().then(singleton =>\r\n        console.log(singleton.item.subject);\r\n        singleton.self.attachments.GetAttachments().then(collection => // singleton.self === graph.me.messages.$(\"123\")\r\n            collection.items.forEach(attachment => \r\n                console.log(attachment.contentBytes)\r\n            )\r\n        )\r\n    )\r\n\r\nOperations which return paginated collections can return a \"next\" request object. This can be utilized in a recursive function:\r\n\r\n    ListMessageSubjects(messages:Messages, odata?:string) {\r\n        messages.GetMessages(odata).then(collection => {\r\n            collection.items.forEach(message => console.log(message.subject));\r\n            if (collection.next)\r\n                ListMessageSubjects(collection.next); // don't need odata after the first time\r\n        })\r\n    }\r\n    ListMessageSubjects(graph.me.messages, new OData().select(\"subject\").toString());\r\n    \r\n(With async/await support, an iteration pattern can be used intead of recursion)\r\n\r\nEvery Graph operation may include OData queries:\r\n\r\n    graph.me.messages.GetMessages(\"$select=subject,id&$orderby=id\")\r\n        /me/messages/$select=subject,id&$orderby=id\r\n\r\nThere is an optional OData helper to aid in constructing more complex queries:\r\n\r\n    graph.me.messages.GetMessages(new OData()\r\n        .select(\"subject\", \"id\")\r\n        .orderby(\"id\")\r\n    )\r\n        /me/messages/$select=subject,id&$orderby=id\r\n\r\nSome operations include parameters which transform into OData queries \r\n\r\n    graph.me.calendarView.GetCalendarView([start],[end], [odataQuery])\r\n        /me/calendarView?startDateTime=[start]&endDateTime=[end]&[odataQuery]\r\n\r\nNote: This initial stab only includes a few familiar pieces of the Microsoft Graph.\r\n*/\r\n\r\n\r\nexport class Scopes {\r\n    private static rootUrl = \"https://graph.microsoft.com/\";\r\n    static General = {\r\n        OpenId: \"openid\",\r\n        OfflineAccess: \"offline_access\",\r\n    }\r\n    static User = {\r\n        Read: Scopes.rootUrl + \"User.Read\",\r\n        ReadAll: Scopes.rootUrl + \"User.Read.All\",\r\n        ReadWrite: Scopes.rootUrl + \"User.ReadWrite\",\r\n        ReadWriteAll: Scopes.rootUrl + \"User.ReadWrite.All\",\r\n        ReadBasicAll: Scopes.rootUrl + \"User.ReadBasic.All\",\r\n    }\r\n    static Contacts = {\r\n        Read: Scopes.rootUrl + \"Contacts.Read\",\r\n        ReadWrite: Scopes.rootUrl + \"Contacts.ReadWrite\",\r\n    }\r\n    static Directory = {\r\n        ReadAll: Scopes.rootUrl + \"Directory.Read.All\",\r\n        ReadWriteAll: Scopes.rootUrl + \"Directory.ReadWrite.All\",\r\n        AccessAsUserAll: Scopes.rootUrl + \"Directory.AccessAsUser.All\",\r\n    }\r\n    static Group = {\r\n        ReadAll: Scopes.rootUrl + \"Group.Read.All\",\r\n        ReadWriteAll: Scopes.rootUrl + \"Group.ReadWrite.All\",\r\n        AccessAsUserAll: Scopes.rootUrl + \"Directory.AccessAsUser.All\"\r\n    }\r\n    static Mail = {\r\n        Read: Scopes.rootUrl + \"Mail.Read\",\r\n        ReadWrite: Scopes.rootUrl + \"Mail.ReadWrite\",\r\n        Send: Scopes.rootUrl + \"Mail.Send\",\r\n    }\r\n    static Calendars = {\r\n        Read: Scopes.rootUrl + \"Calendars.Read\",\r\n        ReadWrite: Scopes.rootUrl + \"Calendars.ReadWrite\",\r\n    }\r\n    static Files = {\r\n        Read: Scopes.rootUrl + \"Files.Read\",\r\n        ReadAll: Scopes.rootUrl + \"Files.Read.All\",\r\n        ReadWrite: Scopes.rootUrl + \"Files.ReadWrite\",\r\n        ReadWriteAppFolder: Scopes.rootUrl + \"Files.ReadWrite.AppFolder\",\r\n        ReadWriteSelected: Scopes.rootUrl + \"Files.ReadWrite.Selected\",\r\n    }\r\n    static Tasks = {\r\n        ReadWrite: Scopes.rootUrl + \"Tasks.ReadWrite\",\r\n    }\r\n    static People = {\r\n        Read: Scopes.rootUrl + \"People.Read\",\r\n        ReadWrite: Scopes.rootUrl + \"People.ReadWrite\",\r\n    }\r\n    static Notes = {\r\n        Create: Scopes.rootUrl + \"Notes.Create\",\r\n        ReadWriteCreatedByApp: Scopes.rootUrl + \"Notes.ReadWrite.CreatedByApp\",\r\n        Read: Scopes.rootUrl + \"Notes.Read\",\r\n        ReadAll: Scopes.rootUrl + \"Notes.Read.All\",\r\n        ReadWriteAll: Scopes.rootUrl + \"Notes.ReadWrite.All\",\r\n    }\r\n}\r\n\r\nlet queryUnion = (query1:string, query2:string) => (query1 ? query1 + (query2 ? \"&\" + query2 : \"\" ) : query2); \r\n\r\nexport class OData {\r\n    constructor(public query?:string) {\r\n    }\r\n    \r\n    toString = () => this.query;\r\n\r\n    odata = (query:string) => {\r\n        this.query = queryUnion(this.query, query);\r\n        return this;\r\n    }\r\n\r\n    select   = (...fields:string[])  => this.odata(`$select=${fields.join(\",\")}`);\r\n    expand   = (...fields:string[])  => this.odata(`$expand=${fields.join(\",\")}`);\r\n    filter   = (query:string)        => this.odata(`$filter=${query}`);\r\n    orderby  = (...fields:string[])  => this.odata(`$orderby=${fields.join(\",\")}`);\r\n    top      = (items:Number)        => this.odata(`$top=${items}`);\r\n    skip     = (items:Number)        => this.odata(`$skip=${items}`);\r\n}\r\n\r\ntype ODataQuery = OData | string;\r\n\r\nlet pathWithQuery = (path:string, odataQuery?:ODataQuery) => {\r\n    let query = odataQuery && odataQuery.toString();\r\n    return path + (query ? \"?\" + query : \"\");\r\n}\r\n\r\nexport class Singleton<Model, N extends Node> {\r\n    constructor(public raw:any, public self:N) {\r\n    }\r\n\r\n    public get item() {\r\n        return this.raw as Model;\r\n    }\r\n}\r\n\r\nexport class Collection<Model, N extends CollectionNode> {\r\n    constructor(public raw:any, public self:N, public next:N) {\r\n        let nextLink = this.raw[\"@odata.nextLink\"];\r\n        if (nextLink) {\r\n            this.next.nextLink = nextLink;\r\n        } else {\r\n            this.next = undefined;\r\n        }\r\n    }\r\n\r\n    get items() {\r\n        return (this.raw.value ? this.raw.value : [this.raw]) as Model[];\r\n    }\r\n}\r\n\r\nexport abstract class Node {\r\n    constructor(protected graph:Graph, protected path:string) {\r\n    }\r\n\r\n    //Only adds scopes when linked to a v2 Oauth of kurve identity\r\n    protected scopesForV2 = (scopes: string[]) =>\r\n        this.graph.KurveIdentity && this.graph.KurveIdentity.getCurrentEndPointVersion() === EndPointVersion.v2 ? scopes : null;\r\n    \r\n    pathWithQuery = (odataQuery?:ODataQuery, pathSuffix:string = \"\") => pathWithQuery(this.path + pathSuffix, odataQuery);\r\n}\r\n\r\nexport abstract class CollectionNode extends Node {    \r\n    private _nextLink:string;   // this is only set when the collection in question is from a nextLink\r\n\r\n    pathWithQuery = (odataQuery?:ODataQuery, pathSuffix:string = \"\") => this._nextLink || pathWithQuery(this.path + pathSuffix, odataQuery);\r\n    \r\n    set nextLink(pathWithQuery:string) {\r\n        this._nextLink = pathWithQuery;\r\n    }\r\n}\r\n\r\nexport class Attachment extends Node {\r\n    constructor(graph:Graph, path:string=\"\", private context:string, attachmentId?:string) {\r\n        super(graph, path + (attachmentId ? \"/\" + attachmentId : \"\"));\r\n    }\r\n\r\n    static scopes = {\r\n        messages: [Scopes.Mail.Read],\r\n        events: [Scopes.Calendars.Read],\r\n    }\r\n\r\n    GetAttachment = (odataQuery?:ODataQuery) => this.graph.Get<AttachmentDataModel, Attachment>(this.pathWithQuery(odataQuery), this, this.scopesForV2(Attachment.scopes[this.context]));\r\n/*    \r\n    PATCH = this.graph.PATCH<AttachmentDataModel>(this.path, this.query);\r\n    DELETE = this.graph.DELETE<AttachmentDataModel>(this.path, this.query);\r\n*/\r\n}\r\n\r\nexport class Attachments extends CollectionNode {\r\n    constructor(graph:Graph, path:string=\"\", private context:string) {\r\n        super(graph, path + \"/attachments\");\r\n    }\r\n\r\n    $ = (attachmentId:string) => new Attachment(this.graph, this.path, this.context, attachmentId);\r\n    \r\n    GetAttachments = (odataQuery?:ODataQuery) => this.graph.GetCollection<AttachmentDataModel, Attachments>(this.pathWithQuery(odataQuery), this, new Attachments(this.graph, null, this.context), this.scopesForV2(Attachment.scopes[this.context]));\r\n/*\r\n    POST = this.graph.POST<AttachmentDataModel>(this.path, this.query);\r\n*/\r\n}\r\n\r\nexport class Message extends Node {\r\n    constructor(graph:Graph, path:string=\"\", messageId?:string) {\r\n        super(graph, path + (messageId ? \"/\" + messageId : \"\"));\r\n    }\r\n    \r\n    get attachments() { return new Attachments(this.graph, this.path, \"messages\"); }\r\n\r\n    GetMessage  = (odataQuery?:ODataQuery) => this.graph.Get<MessageDataModel, Message>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.Mail.Read]));\r\n    SendMessage = (odataQuery?:ODataQuery) => this.graph.Post<MessageDataModel, Message>(null, this.pathWithQuery(odataQuery, \"/microsoft.graph.sendMail\"), this, this.scopesForV2([Scopes.Mail.Send]));\r\n/*\r\n    PATCH = this.graph.PATCH<MessageDataModel>(this.path, this.query);\r\n    DELETE = this.graph.DELETE<MessageDataModel>(this.path, this.query);\r\n*/\r\n}\r\n\r\nexport class Messages extends CollectionNode {\r\n    constructor(graph:Graph, path:string=\"\") {\r\n        super(graph, path + \"/messages\");\r\n    }\r\n\r\n    $ = (messageId:string) => new Message(this.graph, this.path, messageId);\r\n\r\n    GetMessages     = (odataQuery?:ODataQuery) => this.graph.GetCollection<MessageDataModel, Messages>(this.pathWithQuery(odataQuery), this, new Messages(this.graph), this.scopesForV2([Scopes.Mail.Read]));\r\n    CreateMessage   = (object:MessageDataModel, odataQuery?:ODataQuery) => this.graph.Post<MessageDataModel, Messages>(object, this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.Mail.ReadWrite]));\r\n}\r\n\r\nexport class Event extends Node {\r\n    constructor(graph:Graph, path:string=\"\", eventId:string) {\r\n        super(graph, path + (eventId ? \"/\" + eventId : \"\"));\r\n    }\r\n\r\n    get attachments() { return new Attachments(this.graph, this.path, \"events\"); }\r\n\r\n    GetEvent = (odataQuery?:ODataQuery) => this.graph.Get<EventDataModel, Event>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.Calendars.Read]));\r\n/*\r\n    PATCH = this.graph.PATCH<EventDataModel>(this.path, this.query);\r\n    DELETE = this.graph.DELETE<EventDataModel>(this.path, this.query);\r\n*/\r\n}\r\n\r\n\r\nexport class Events extends CollectionNode {\r\n    constructor(graph:Graph, path:string=\"\") {\r\n        super(graph, path + \"/events\");\r\n    }\r\n\r\n    $ = (eventId:string) => new Event(this.graph, this.path, eventId);\r\n\r\n    GetEvents = (odataQuery?:ODataQuery) => this.graph.GetCollection<EventDataModel, Events>(this.pathWithQuery(odataQuery), this, new Events(this.graph), this.scopesForV2([Scopes.Calendars.Read]));\r\n/*\r\n    POST = this.graph.POST<EventDataModel>(this.path, this.query);\r\n*/\r\n}\r\n\r\nexport class CalendarView extends CollectionNode {\r\n    constructor(graph:Graph, path:string=\"\") {\r\n        super(graph, path + \"/calendarView\");\r\n    }\r\n    \r\n    dateRange = (startDate:Date, endDate:Date) => `startDateTime=${startDate.toISOString()}&endDateTime=${endDate.toISOString()}`\r\n\r\n    GetCalendarView = (odataQuery?:ODataQuery) => this.graph.GetCollection<EventDataModel, CalendarView>(this.pathWithQuery(odataQuery), this, new CalendarView(this.graph), this.scopesForV2([Scopes.Calendars.Read]));\r\n}\r\n\r\n\r\nexport class MailFolder extends Node {\r\n    constructor(graph:Graph, path:string=\"\", mailFolderId:string) {\r\n        super(graph, path + (mailFolderId ? \"/\" + mailFolderId : \"\"));\r\n    }\r\n\r\n\r\n    GetMailFolder = (odataQuery?:ODataQuery) => this.graph.Get<MailFolderDataModel, MailFolder>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.Mail.Read]));\r\n}\r\n\r\nexport class MailFolders extends CollectionNode {\r\n    constructor(graph:Graph, path:string=\"\") {\r\n        super(graph, path + \"/mailFolders\");\r\n    }\r\n\r\n    $ = (mailFolderId:string) => new MailFolder(this.graph, this.path, mailFolderId);\r\n\r\n    GetMailFolders = (odataQuery?:ODataQuery) => this.graph.GetCollection<MailFolderDataModel, MailFolders>(this.pathWithQuery(odataQuery), this, new MailFolders(this.graph), this.scopesForV2([Scopes.Mail.Read]));\r\n}\r\n\r\n\r\nexport class Photo extends Node {    \r\n    constructor(graph:Graph, path:string=\"\", private context:string) {\r\n        super(graph, path + \"/photo\" );\r\n    }\r\n\r\n    static scopes = {\r\n        user: [Scopes.User.ReadBasicAll],\r\n        group: [Scopes.Group.ReadAll],\r\n        contact: [Scopes.Contacts.Read]\r\n    }\r\n\r\n    GetPhotoProperties = (odataQuery?:ODataQuery) => this.graph.Get<ProfilePhotoDataModel, Photo>(this.pathWithQuery(odataQuery), this, this.scopesForV2(Photo.scopes[this.context]));\r\n    GetPhotoImage = (odataQuery?:ODataQuery) => this.graph.Get<any, any>(this.pathWithQuery(odataQuery, \"/$value\"), this, this.scopesForV2(Photo.scopes[this.context]), \"blob\");\r\n}\r\n\r\nexport class Manager extends Node {\r\n    constructor(graph:Graph, path:string=\"\") {\r\n        super(graph, path + \"/manager\" );\r\n    }\r\n\r\n    GetManager = (odataQuery?:ODataQuery) => this.graph.Get<UserDataModel, Manager>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.User.ReadAll]));\r\n}\r\n\r\nexport class MemberOf extends CollectionNode {\r\n    constructor(graph:Graph, path:string=\"\") {\r\n        super(graph, path + \"/memberOf\");\r\n    }\r\n\r\n    GetGroups = (odataQuery?:ODataQuery) => this.graph.GetCollection<GroupDataModel, MemberOf>(this.pathWithQuery(odataQuery), this, new MemberOf(this.graph), this.scopesForV2([Scopes.User.ReadAll]));\r\n}\r\n\r\nexport class DirectReport extends Node {\r\n    constructor(protected graph:Graph, path:string=\"\", userId?:string) {\r\n        super(graph, path + \"/\" + userId);\r\n    }\r\n    \r\n    GetDirectReport = (odataQuery?:ODataQuery) => this.graph.Get<UserDataModel, DirectReport>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.User.Read]));\r\n}\r\n    \r\nexport class DirectReports extends CollectionNode {\r\n    constructor(graph:Graph, path:string=\"\") {\r\n        super(graph, path + \"/directReports\");\r\n    }\r\n\r\n    $ = (userId:string) => new DirectReport(this.graph, this.path, userId);\r\n\r\n    GetDirectReports = (odataQuery?:ODataQuery) => this.graph.GetCollection<UserDataModel, DirectReports>(this.pathWithQuery(odataQuery), this, new DirectReports(this.graph), this.scopesForV2([Scopes.User.Read]));\r\n}\r\n\r\nexport class User extends Node {\r\n    constructor(protected graph:Graph, path:string=\"\", userId?:string) {\r\n        super(graph, userId ? path + \"/\" + userId : path + \"/me\");\r\n    }\r\n\r\n    get messages()      { return new Messages(this.graph, this.path); }\r\n    get events()        { return new Events(this.graph, this.path); }\r\n    get calendarView()  { return new CalendarView(this.graph, this.path); }\r\n    get mailFolders()   { return new MailFolders(this.graph, this.path) }\r\n    get photo()         { return new Photo(this.graph, this.path, \"user\"); }\r\n    get manager()       { return new Manager(this.graph, this.path); }\r\n    get directReports() { return new DirectReports(this.graph, this.path); }\r\n    get memberOf()      { return new MemberOf(this.graph, this.path); }\r\n\r\n    GetUser = (odataQuery?:ODataQuery) => this.graph.Get<UserDataModel, User>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.User.Read]));\r\n/*\r\n    PATCH = this.graph.PATCH<UserDataModel>(this.path, this.query);\r\n    DELETE = this.graph.DELETE<UserDataModel>(this.path, this.query);\r\n*/\r\n}\r\n\r\nexport class Users extends CollectionNode {\r\n    constructor(graph:Graph, path:string=\"\") {\r\n        super(graph, path + \"/users\");\r\n    }\r\n\r\n    $ = (userId:string) => new User(this.graph, this.path, userId);\r\n\r\n    GetUsers = (odataQuery?:ODataQuery) => this.graph.GetCollection<UserDataModel, Users>(this.pathWithQuery(odataQuery), this, new Users(this.graph), this.scopesForV2([Scopes.User.Read]));\r\n/*\r\n    CreateUser = this.graph.POST<UserDataModel>(this.path, this.query);\r\n*/\r\n}\r\n\r\nexport class Group extends Node {\r\n    constructor(protected graph:Graph, path:string=\"\", groupId:string) {\r\n        super(graph, path + \"/\" + groupId);\r\n    }\r\n\r\n    GetGroup = (odataQuery?:ODataQuery) => this.graph.Get<GroupDataModel, Group>(this.pathWithQuery(odataQuery), this, this.scopesForV2([Scopes.Group.ReadAll]));\r\n}\r\n\r\nexport class Groups extends CollectionNode {\r\n    constructor(graph:Graph, path:string=\"\") {\r\n        super(graph, path + \"/groups\");\r\n    }\r\n\r\n    $ = (groupId:string) => new Group(this.graph, this.path, groupId);\r\n\r\n    GetGroups = (odataQuery?:ODataQuery) => this.graph.GetCollection<GroupDataModel, Groups>(this.pathWithQuery(odataQuery), this, new Groups(this.graph), this.scopesForV2([Scopes.Group.ReadAll]));\r\n}\r\n\r\n\r\n}\r\n\r\n//*********************************************************\r\n//\r\n//Kurve js, https://github.com/microsoftdx/kurvejs\r\n//\r\n//Copyright (c) Microsoft Corporation\r\n//All rights reserved.\r\n//\r\n// MIT License:\r\n// Permission is hereby granted, free of charge, to any person obtaining\r\n// a copy of this software and associated documentation files (the\r\n// \"\"Software\"\"), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to\r\n// permit persons to whom the Software is furnished to do so, subject to\r\n// the following conditions:\r\n\r\n\r\n\r\n\r\n// The above copyright notice and this permission notice shall be\r\n// included in all copies or substantial portions of the Software.\r\n\r\n\r\n\r\n\r\n// THE SOFTWARE IS PROVIDED \"\"AS IS\"\", WITHOUT WARRANTY OF ANY KIND,\r\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n//\r\n//*********************************************************\r\n\r\n"],"sourceRoot":"/source/"}
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license at the bottom of this file.
var kurve;
(function (kurve) {
    // Adapted from the original source: https://github.com/DirtyHairy/typescript-deferred
    var Error = (function () {
        function Error() {
        }
        return Error;
    }());
    kurve.Error = Error;
    function DispatchDeferred(closure) {
        setTimeout(closure, 0);
    }
    var PromiseState;
    (function (PromiseState) {
        PromiseState[PromiseState["Pending"] = 0] = "Pending";
        PromiseState[PromiseState["ResolutionInProgress"] = 1] = "ResolutionInProgress";
        PromiseState[PromiseState["Resolved"] = 2] = "Resolved";
        PromiseState[PromiseState["Rejected"] = 3] = "Rejected";
    })(PromiseState || (PromiseState = {}));
    var Client = (function () {
        function Client(_dispatcher, _successCB, _errorCB) {
            this._dispatcher = _dispatcher;
            this._successCB = _successCB;
            this._errorCB = _errorCB;
            this.result = new Deferred(_dispatcher);
        }
        Client.prototype.resolve = function (value, defer) {
            var _this = this;
            if (typeof (this._successCB) !== 'function') {
                this.result.resolve(value);
                return;
            }
            if (defer) {
                this._dispatcher(function () { return _this._dispatchCallback(_this._successCB, value); });
            }
            else {
                this._dispatchCallback(this._successCB, value);
            }
        };
        Client.prototype.reject = function (error, defer) {
            var _this = this;
            if (typeof (this._errorCB) !== 'function') {
                this.result.reject(error);
                return;
            }
            if (defer) {
                this._dispatcher(function () { return _this._dispatchCallback(_this._errorCB, error); });
            }
            else {
                this._dispatchCallback(this._errorCB, error);
            }
        };
        Client.prototype._dispatchCallback = function (callback, arg) {
            var result, then, type;
            try {
                result = callback(arg);
                this.result.resolve(result);
            }
            catch (err) {
                this.result.reject(err);
                return;
            }
        };
        return Client;
    }());
    var Deferred = (function () {
        function Deferred(dispatcher) {
            this._stack = [];
            this._state = PromiseState.Pending;
            if (dispatcher)
                this._dispatcher = dispatcher;
            else
                this._dispatcher = DispatchDeferred;
            this.promise = new Promise(this);
        }
        Deferred.prototype.DispatchDeferred = function (closure) {
            setTimeout(closure, 0);
        };
        Deferred.prototype.then = function (successCB, errorCB) {
            if (typeof (successCB) !== 'function' && typeof (errorCB) !== 'function') {
                return this.promise;
            }
            var client = new Client(this._dispatcher, successCB, errorCB);
            switch (this._state) {
                case PromiseState.Pending:
                case PromiseState.ResolutionInProgress:
                    this._stack.push(client);
                    break;
                case PromiseState.Resolved:
                    client.resolve(this._value, true);
                    break;
                case PromiseState.Rejected:
                    client.reject(this._error, true);
                    break;
            }
            return client.result.promise;
        };
        Deferred.prototype.resolve = function (value) {
            if (this._state !== PromiseState.Pending) {
                return this;
            }
            return this._resolve(value);
        };
        Deferred.prototype._resolve = function (value) {
            var _this = this;
            var type = typeof (value), then, pending = true;
            try {
                if (value !== null &&
                    (type === 'object' || type === 'function') &&
                    typeof (then = value.then) === 'function') {
                    if (value === this.promise) {
                        throw new TypeError('recursive resolution');
                    }
                    this._state = PromiseState.ResolutionInProgress;
                    then.call(value, function (result) {
                        if (pending) {
                            pending = false;
                            _this._resolve(result);
                        }
                    }, function (error) {
                        if (pending) {
                            pending = false;
                            _this._reject(error);
                        }
                    });
                }
                else {
                    this._state = PromiseState.ResolutionInProgress;
                    this._dispatcher(function () {
                        _this._state = PromiseState.Resolved;
                        _this._value = value;
                        var i, stackSize = _this._stack.length;
                        for (i = 0; i < stackSize; i++) {
                            _this._stack[i].resolve(value, false);
                        }
                        _this._stack.splice(0, stackSize);
                    });
                }
            }
            catch (err) {
                if (pending) {
                    this._reject(err);
                }
            }
            return this;
        };
        Deferred.prototype.reject = function (error) {
            if (this._state !== PromiseState.Pending) {
                return this;
            }
            return this._reject(error);
        };
        Deferred.prototype._reject = function (error) {
            var _this = this;
            this._state = PromiseState.ResolutionInProgress;
            this._dispatcher(function () {
                _this._state = PromiseState.Rejected;
                _this._error = error;
                var stackSize = _this._stack.length, i = 0;
                for (i = 0; i < stackSize; i++) {
                    _this._stack[i].reject(error, false);
                }
                _this._stack.splice(0, stackSize);
            });
            return this;
        };
        return Deferred;
    }());
    kurve.Deferred = Deferred;
    var Promise = (function () {
        function Promise(_deferred) {
            this._deferred = _deferred;
        }
        Promise.prototype.then = function (successCallback, errorCallback) {
            return this._deferred.then(successCallback, errorCallback);
        };
        Promise.prototype.fail = function (errorCallback) {
            return this._deferred.then(undefined, errorCallback);
        };
        return Promise;
    }());
    kurve.Promise = Promise;
    (function (EndPointVersion) {
        EndPointVersion[EndPointVersion["v1"] = 1] = "v1";
        EndPointVersion[EndPointVersion["v2"] = 2] = "v2";
    })(kurve.EndPointVersion || (kurve.EndPointVersion = {}));
    var EndPointVersion = kurve.EndPointVersion;
    (function (Mode) {
        Mode[Mode["Client"] = 1] = "Client";
        Mode[Mode["Node"] = 2] = "Node";
    })(kurve.Mode || (kurve.Mode = {}));
    var Mode = kurve.Mode;
    var CachedToken = (function () {
        function CachedToken(id, scopes, resource, token, expiry) {
            this.id = id;
            this.scopes = scopes;
            this.resource = resource;
            this.token = token;
            this.expiry = expiry;
        }
        ;
        Object.defineProperty(CachedToken.prototype, "isExpired", {
            get: function () {
                return this.expiry <= new Date(new Date().getTime() + 60000);
            },
            enumerable: true,
            configurable: true
        });
        CachedToken.prototype.hasScopes = function (requiredScopes) {
            var _this = this;
            if (!this.scopes) {
                return false;
            }
            return requiredScopes.every(function (requiredScope) {
                return _this.scopes.some(function (actualScope) { return requiredScope === actualScope; });
            });
        };
        return CachedToken;
    }());
    var TokenCache = (function () {
        function TokenCache(tokenStorage) {
            var _this = this;
            this.tokenStorage = tokenStorage;
            this.cachedTokens = {};
            if (tokenStorage) {
                tokenStorage.getAll().forEach(function (_a) {
                    var id = _a.id, scopes = _a.scopes, resource = _a.resource, token = _a.token, expiry = _a.expiry;
                    var cachedToken = new CachedToken(id, scopes, resource, token, new Date(expiry));
                    if (cachedToken.isExpired) {
                        _this.tokenStorage.remove(cachedToken.id);
                    }
                    else {
                        _this.cachedTokens[cachedToken.id] = cachedToken;
                    }
                });
            }
        }
        TokenCache.prototype.add = function (token) {
            this.cachedTokens[token.id] = token;
            this.tokenStorage && this.tokenStorage.add(token.id, token);
        };
        TokenCache.prototype.getForResource = function (resource) {
            var cachedToken = this.cachedTokens[resource];
            if (cachedToken && cachedToken.isExpired) {
                this.remove(resource);
                return null;
            }
            return cachedToken;
        };
        TokenCache.prototype.getForScopes = function (scopes) {
            for (var key in this.cachedTokens) {
                var cachedToken = this.cachedTokens[key];
                if (cachedToken.hasScopes(scopes)) {
                    if (cachedToken.isExpired) {
                        this.remove(key);
                    }
                    else {
                        return cachedToken;
                    }
                }
            }
            return null;
        };
        TokenCache.prototype.clear = function () {
            this.cachedTokens = {};
            this.tokenStorage && this.tokenStorage.clear();
        };
        TokenCache.prototype.remove = function (key) {
            this.tokenStorage && this.tokenStorage.remove(key);
            delete this.cachedTokens[key];
        };
        return TokenCache;
    }());
    var IdToken = (function () {
        function IdToken() {
        }
        return IdToken;
    }());
    kurve.IdToken = IdToken;
    var Identity = (function () {
        function Identity(identitySettings) {
            var _this = this;
            this.policy = "";
            this.mode = Mode.Client;
            this.clientId = identitySettings.clientId;
            this.tokenProcessorUrl = identitySettings.tokenProcessingUri;
            //          this.req = new XMLHttpRequest();
            if (identitySettings.version)
                this.version = identitySettings.version;
            else
                this.version = EndPointVersion.v1;
            if (identitySettings.appSecret)
                this.appSecret = identitySettings.appSecret;
            this.mode = identitySettings.mode;
            if (this.mode === Mode.Client) {
                this.tokenCache = new TokenCache(identitySettings.tokenStorage);
                //Callback handler from other windows
                window.addEventListener("message", function (event) {
                    if (event.data.type === "id_token") {
                        if (event.data.error) {
                            var e = new Error();
                            e.text = event.data.error;
                            _this.loginCallback(e);
                        }
                        else {
                            //check for state
                            if (_this.state !== event.data.state) {
                                var error = new Error();
                                error.statusText = "Invalid state";
                                _this.loginCallback(error);
                            }
                            else {
                                _this.decodeIdToken(event.data.token);
                                _this.loginCallback(null);
                            }
                        }
                    }
                    else if (event.data.type === "access_token") {
                        if (event.data.error) {
                            var e = new Error();
                            e.text = event.data.error;
                            _this.getTokenCallback(null, e);
                        }
                        else {
                            var token = event.data.token;
                            var iframe = document.getElementById("tokenIFrame");
                            iframe.parentNode.removeChild(iframe);
                            if (event.data.state !== _this.state) {
                                var error = new Error();
                                error.statusText = "Invalid state";
                                _this.getTokenCallback(null, error);
                            }
                            else {
                                _this.getTokenCallback(token, null);
                            }
                        }
                    }
                });
            }
        }
        Identity.prototype.parseQueryString = function (str) {
            var queryString = str || window.location.search || '';
            var keyValPairs = [];
            var params = {};
            queryString = queryString.replace(/.*?\?/, "");
            if (queryString.length) {
                keyValPairs = queryString.split('&');
                for (var pairNum in keyValPairs) {
                    var key = keyValPairs[pairNum].split('=')[0];
                    if (!key.length)
                        continue;
                    if (typeof params[key] === 'undefined')
                        params[key] = [];
                    params[key].push(keyValPairs[pairNum].split('=')[1]);
                }
            }
            return params;
        };
        Identity.prototype.token = function (s, url) {
            var start = url.indexOf(s);
            if (start < 0)
                return null;
            var end = url.indexOf("&", start + s.length);
            return url.substring(start, ((end > 0) ? end : url.length));
        };
        Identity.prototype.checkForIdentityRedirect = function () {
            var params = this.parseQueryString(window.location.href);
            var idToken = this.token("#id_token=", window.location.href);
            var accessToken = this.token("#access_token", window.location.href);
            if (idToken) {
                if (true || this.state === params["state"][0]) {
                    this.decodeIdToken(idToken);
                    this.loginCallback && this.loginCallback(null);
                }
                else {
                    var error = new Error();
                    error.statusText = "Invalid state";
                    this.loginCallback && this.loginCallback(error);
                }
                return true;
            }
            else if (accessToken) {
                throw "Should not get here.  This should be handled via the iframe approach.";
            }
            return false;
        };
        Identity.prototype.decodeIdToken = function (idToken) {
            var _this = this;
            var decodedToken = this.base64Decode(idToken.substring(idToken.indexOf('.') + 1, idToken.lastIndexOf('.')));
            var decodedTokenJSON = JSON.parse(decodedToken);
            var expiryDate = new Date(new Date('01/01/1970 0:0 UTC').getTime() + parseInt(decodedTokenJSON.exp) * 1000);
            this.idToken = new IdToken();
            this.idToken.FullToken = decodedTokenJSON;
            this.idToken.Token = idToken;
            this.idToken.Expiry = expiryDate;
            this.idToken.UPN = decodedTokenJSON.upn;
            this.idToken.TenantId = decodedTokenJSON.tid;
            this.idToken.FamilyName = decodedTokenJSON.family_name;
            this.idToken.GivenName = decodedTokenJSON.given_name;
            this.idToken.Name = decodedTokenJSON.name;
            this.idToken.PreferredUsername = decodedTokenJSON.preferred_username;
            var expiration = expiryDate.getTime() - new Date().getTime() - 300000;
            this.refreshTimer = setTimeout((function () {
                _this.renewIdToken();
            }), expiration);
        };
        Identity.prototype.decodeAccessToken = function (accessToken, resource, scopes) {
            var decodedToken = this.base64Decode(accessToken.substring(accessToken.indexOf('.') + 1, accessToken.lastIndexOf('.')));
            var decodedTokenJSON = JSON.parse(decodedToken);
            var expiryDate = new Date(new Date('01/01/1970 0:0 UTC').getTime() + parseInt(decodedTokenJSON.exp) * 1000);
            var key = resource || scopes.join(" ");
            var token = new CachedToken(key, scopes, resource, accessToken, expiryDate);
            return token;
        };
        Identity.prototype.getIdToken = function () {
            return this.idToken;
        };
        Identity.prototype.isLoggedIn = function () {
            if (!this.idToken)
                return false;
            return (this.idToken.Expiry > new Date());
        };
        Identity.prototype.renewIdToken = function () {
            clearTimeout(this.refreshTimer);
            this.login(function () { });
        };
        Identity.prototype.getCurrentEndPointVersion = function () {
            return this.version;
        };
        Identity.prototype.getAccessTokenAsync = function (resource) {
            var d = new Deferred();
            this.getAccessToken(resource, (function (error, token) {
                if (error) {
                    d.reject(error);
                }
                else {
                    d.resolve(token);
                }
            }));
            return d.promise;
        };
        Identity.prototype.getAccessToken = function (resource, callback) {
            var _this = this;
            if (this.version !== EndPointVersion.v1) {
                var e = new Error();
                e.statusText = "Currently this identity class is using v2 OAuth mode. You need to use getAccessTokenForScopes() method";
                callback(e);
                return;
            }
            if (this.mode === Mode.Client) {
                var token = this.tokenCache.getForResource(resource);
                if (token) {
                    return callback(null, token.token);
                }
                //If we got this far, we need to go get this token
                //Need to create the iFrame to invoke the acquire token
                this.getTokenCallback = (function (token, error) {
                    if (error) {
                        callback(error);
                    }
                    else {
                        var t = _this.decodeAccessToken(token, resource);
                        _this.tokenCache.add(t);
                        callback(null, token);
                    }
                });
                this.nonce = "token" + this.generateNonce();
                this.state = "token" + this.generateNonce();
                var iframe = document.createElement('iframe');
                iframe.style.display = "none";
                iframe.id = "tokenIFrame";
                iframe.src = this.tokenProcessorUrl + "?clientId=" + encodeURIComponent(this.clientId) +
                    "&resource=" + encodeURIComponent(resource) +
                    "&redirectUri=" + encodeURIComponent(this.tokenProcessorUrl) +
                    "&state=" + encodeURIComponent(this.state) +
                    "&version=" + encodeURIComponent(this.version.toString()) +
                    "&nonce=" + encodeURIComponent(this.nonce) +
                    "&op=token";
                document.body.appendChild(iframe);
            }
            else {
                var cookies = this.parseNodeCookies(this.req);
                var upn = this.NodeRetrieveDataCallBack("session|" + cookies["kurveSession"]);
                var code = this.NodeRetrieveDataCallBack("code|" + upn);
                var post_data = "grant_type=authorization_code" +
                    "&client_id=" + encodeURIComponent(this.clientId) +
                    "&code=" + encodeURIComponent(code) +
                    "&redirect_uri=" + encodeURIComponent(this.tokenProcessorUrl) +
                    "&resource=" + encodeURIComponent(resource) +
                    "&client_secret=" + encodeURIComponent(this.appSecret);
                var post_options = {
                    host: 'login.microsoftonline.com',
                    port: '443',
                    path: '/common/oauth2/token',
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Content-Length': post_data.length,
                        accept: '*/*'
                    }
                };
                var post_req = this.https.request(post_options, function (response) {
                    response.setEncoding('utf8');
                    response.on('data', function (chunk) {
                        var chunkJson = JSON.parse(chunk);
                        var t = _this.decodeAccessToken(chunkJson.access_token, resource);
                        // this.tokenCache.add(t); //TODO: Persist/retrieve token cache no server
                        callback(null, chunkJson.access_token);
                    });
                });
                post_req.write(post_data);
                post_req.end();
            }
        };
        Identity.prototype.parseNodeCookies = function (req) {
            var list = {};
            var rc = req.headers.cookie;
            rc && rc.split(';').forEach(function (cookie) {
                var parts = cookie.split('=');
                list[parts.shift().trim()] = decodeURI(parts.join('='));
            });
            return list;
        };
        Identity.prototype.handleNodeCallback = function (req, res, https, crypto, persistDataCallback, retrieveDataCallback) {
            var _this = this;
            this.NodePersistDataCallBack = persistDataCallback;
            this.NodeRetrieveDataCallBack = retrieveDataCallback;
            var url = req.url;
            this.req = req;
            this.res = res;
            this.https = https;
            var params = this.parseQueryString(url);
            var code = this.token("code=", url);
            var accessToken = this.token("#access_token", url);
            var cookies = this.parseNodeCookies(req);
            var d = new Deferred();
            if (this.version === EndPointVersion.v1) {
                if (code) {
                    var codeFromRequest = params["code"][0];
                    var stateFromRequest = params["state"][0];
                    var cachedState = retrieveDataCallback("state|" + stateFromRequest);
                    if (cachedState) {
                        if (cachedState === "waiting") {
                            var expiry = new Date(new Date().getTime() + 86400000);
                            persistDataCallback("state|" + stateFromRequest, "done", expiry);
                            var post_data = "grant_type=authorization_code" +
                                "&client_id=" + encodeURIComponent(this.clientId) +
                                "&code=" + encodeURIComponent(codeFromRequest) +
                                "&redirect_uri=" + encodeURIComponent(this.tokenProcessorUrl) +
                                "&resource=" + encodeURIComponent("https://graph.microsoft.com") +
                                "&client_secret=" + encodeURIComponent(this.appSecret);
                            var post_options = {
                                host: 'login.microsoftonline.com',
                                port: '443',
                                path: '/common/oauth2/token',
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/x-www-form-urlencoded',
                                    'Content-Length': post_data.length,
                                    accept: '*/*'
                                }
                            };
                            var post_req = https.request(post_options, function (response) {
                                response.setEncoding('utf8');
                                response.on('data', function (chunk) {
                                    var chunkJson = JSON.parse(chunk);
                                    var decodedToken = JSON.parse(_this.base64Decode(chunkJson.access_token.substring(chunkJson.access_token.indexOf('.') + 1, chunkJson.access_token.lastIndexOf('.'))));
                                    var upn = decodedToken.upn;
                                    var sha = crypto.createHash('sha256');
                                    sha.update(Math.random().toString());
                                    var sessionID = sha.digest('hex');
                                    var expiry = new Date(new Date().getTime() + 30 * 60 * 1000);
                                    persistDataCallback("session|" + sessionID, upn, expiry);
                                    persistDataCallback("code|" + upn, codeFromRequest, expiry);
                                    res.writeHead(302, {
                                        'Set-Cookie': 'kurveSession=' + sessionID,
                                        'Location': '/'
                                    });
                                    res.end();
                                    d.resolve(false);
                                });
                            });
                            post_req.write(post_data);
                            post_req.end();
                        }
                        else {
                            //same state has been reused, not allowed
                            res.writeHead(500, "Replay detected", { 'content-type': 'text/plain' });
                            res.end("Replay detected");
                            d.resolve(false);
                        }
                    }
                    else {
                        //state doesn't match any of our cached ones
                        res.writeHead(500, "State doesn't match", { 'content-type': 'text/plain' });
                        res.end("State doesn't match");
                        d.resolve(false);
                    }
                    return d.promise;
                }
                else {
                    if (cookies["kurveSession"]) {
                        var upn = retrieveDataCallback("session|" + cookies["kurveSession"]);
                        if (upn) {
                            d.resolve(true);
                            return d.promise;
                        }
                    }
                    var state = this.generateNonce();
                    var expiry = new Date(new Date().getTime() + 900000);
                    persistDataCallback("state|" + state, "waiting", expiry);
                    var url = "https://login.microsoftonline.com/common/oauth2/authorize?response_type=code&client_id=" +
                        encodeURIComponent(this.clientId) +
                        "&redirect_uri=" + encodeURIComponent(this.tokenProcessorUrl) +
                        "&state=" + encodeURIComponent(state);
                    res.writeHead(302, { 'Location': url });
                    res.end();
                    d.resolve(false);
                    return d.promise;
                }
            }
            else {
                //TODO: v2
                d.resolve(false);
                return d.promise;
            }
        };
        Identity.prototype.getAccessTokenForScopesAsync = function (scopes, promptForConsent) {
            if (promptForConsent === void 0) { promptForConsent = false; }
            var d = new Deferred();
            this.getAccessTokenForScopes(scopes, promptForConsent, function (token, error) {
                if (error) {
                    d.reject(error);
                }
                else {
                    d.resolve(token);
                }
            });
            return d.promise;
        };
        Identity.prototype.getAccessTokenForScopes = function (scopes, promptForConsent, callback) {
            var _this = this;
            if (this.version !== EndPointVersion.v2) {
                var e = new Error();
                e.statusText = "Dynamic scopes require v2 mode. Currently this identity class is using v1";
                callback(null, e);
                return;
            }
            var token = this.tokenCache.getForScopes(scopes);
            if (token) {
                return callback(token.token, null);
            }
            //If we got this far, we don't have a valid cached token, so will need to get one.
            //Need to create the iFrame to invoke the acquire token
            this.getTokenCallback = (function (token, error) {
                if (error) {
                    if (promptForConsent || !error.text) {
                        callback(null, error);
                    }
                    else if (error.text.indexOf("AADSTS65001") >= 0) {
                        //We will need to try getting the consent
                        _this.getAccessTokenForScopes(scopes, true, _this.getTokenCallback);
                    }
                    else {
                        callback(null, error);
                    }
                }
                else {
                    var t = _this.decodeAccessToken(token, null, scopes);
                    _this.tokenCache.add(t);
                    callback(token, null);
                }
            });
            this.nonce = "token" + this.generateNonce();
            this.state = "token" + this.generateNonce();
            if (!promptForConsent) {
                var iframe = document.createElement('iframe');
                iframe.style.display = "none";
                iframe.id = "tokenIFrame";
                iframe.src = this.tokenProcessorUrl + "?clientId=" + encodeURIComponent(this.clientId) +
                    "&scopes=" + encodeURIComponent(scopes.join(" ")) +
                    "&redirectUri=" + encodeURIComponent(this.tokenProcessorUrl) +
                    "&version=" + encodeURIComponent(this.version.toString()) +
                    "&state=" + encodeURIComponent(this.state) +
                    "&nonce=" + encodeURIComponent(this.nonce) +
                    "&login_hint=" + encodeURIComponent(this.idToken.PreferredUsername) +
                    "&domain_hint=" + encodeURIComponent(this.idToken.TenantId === "9188040d-6c67-4c5b-b112-36a304b66dad" ? "consumers" : "organizations") +
                    "&op=token";
                document.body.appendChild(iframe);
            }
            else {
                window.open(this.tokenProcessorUrl + "?clientId=" + encodeURIComponent(this.clientId) +
                    "&scopes=" + encodeURIComponent(scopes.join(" ")) +
                    "&redirectUri=" + encodeURIComponent(this.tokenProcessorUrl) +
                    "&version=" + encodeURIComponent(this.version.toString()) +
                    "&state=" + encodeURIComponent(this.state) +
                    "&nonce=" + encodeURIComponent(this.nonce) +
                    "&op=token", "_blank");
            }
        };
        Identity.prototype.loginAsync = function (loginSettings) {
            //TODO: Not node compatible
            var d = new Deferred();
            this.login(function (error) {
                if (error) {
                    d.reject(error);
                }
                else {
                    d.resolve(null);
                }
            }, loginSettings);
            return d.promise;
        };
        Identity.prototype.login = function (callback, loginSettings) {
            //TODO: Not node compatible
            this.loginCallback = callback;
            if (!loginSettings)
                loginSettings = {};
            if (loginSettings.policy)
                this.policy = loginSettings.policy;
            if (loginSettings.scopes && this.version === EndPointVersion.v1) {
                var e = new Error();
                e.text = "Scopes can only be used with OAuth v2.";
                callback(e);
                return;
            }
            if (loginSettings.policy && !loginSettings.tenant) {
                var e = new Error();
                e.text = "In order to use policy (AAD B2C) a tenant must be specified as well.";
                callback(e);
                return;
            }
            this.state = "login" + this.generateNonce();
            this.nonce = "login" + this.generateNonce();
            var loginURL = this.tokenProcessorUrl + "?clientId=" + encodeURIComponent(this.clientId) +
                "&redirectUri=" + encodeURIComponent(this.tokenProcessorUrl) +
                "&state=" + encodeURIComponent(this.state) +
                "&nonce=" + encodeURIComponent(this.nonce) +
                "&version=" + encodeURIComponent(this.version.toString()) +
                "&op=login" +
                "&p=" + encodeURIComponent(this.policy);
            if (loginSettings.tenant) {
                loginURL += "&tenant=" + encodeURIComponent(loginSettings.tenant);
            }
            if (this.version === EndPointVersion.v2) {
                if (!loginSettings.scopes)
                    loginSettings.scopes = [];
                if (loginSettings.scopes.indexOf("profile") < 0)
                    loginSettings.scopes.push("profile");
                if (loginSettings.scopes.indexOf("openid") < 0)
                    loginSettings.scopes.push("openid");
                loginURL += "&scopes=" + encodeURIComponent(loginSettings.scopes.join(" "));
            }
            window.open(loginURL, "_blank");
        };
        Identity.prototype.loginNoWindowAsync = function (toUrl) {
            //TODO: Not node compatible
            var d = new Deferred();
            this.loginNoWindow(function (error) {
                if (error) {
                    d.reject(error);
                }
                else {
                    d.resolve(null);
                }
            }, toUrl);
            return d.promise;
        };
        Identity.prototype.loginNoWindow = function (callback, toUrl) {
            //TODO: Not node compatible
            this.loginCallback = callback;
            this.state = "clientId=" + this.clientId + "&" + "tokenProcessorUrl=" + this.tokenProcessorUrl;
            this.nonce = this.generateNonce();
            var redirected = this.checkForIdentityRedirect();
            if (!redirected) {
                var redirectUri = (toUrl) ? toUrl : window.location.href.split("#")[0]; // default the no login window scenario to return to the current page
                var url = "https://login.microsoftonline.com/common/oauth2/authorize?response_type=id_token" +
                    "&client_id=" + encodeURIComponent(this.clientId) +
                    "&redirect_uri=" + encodeURIComponent(redirectUri) +
                    "&state=" + encodeURIComponent(this.state) +
                    "&nonce=" + encodeURIComponent(this.nonce);
                window.location.href = url;
            }
        };
        Identity.prototype.logOut = function () {
            //TODO: Not node compatible
            this.tokenCache.clear();
            var url = "https://login.microsoftonline.com/common/oauth2/logout?post_logout_redirect_uri=" + encodeURI(window.location.href);
            window.location.href = url;
        };
        Identity.prototype.base64Decode = function (encodedString) {
            var e = {}, i, b = 0, c, x, l = 0, a, r = '', w = String.fromCharCode, L = encodedString.length;
            var A = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
            for (i = 0; i < 64; i++) {
                e[A.charAt(i)] = i;
            }
            for (x = 0; x < L; x++) {
                c = e[encodedString.charAt(x)];
                b = (b << 6) + c;
                l += 6;
                while (l >= 8) {
                    ((a = (b >>> (l -= 8)) & 0xff) || (x < (L - 2))) && (r += w(a));
                }
            }
            return r;
        };
        Identity.prototype.generateNonce = function () {
            var text = "";
            var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            for (var i = 0; i < 32; i++) {
                text += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            return text;
        };
        return Identity;
    }());
    kurve.Identity = Identity;
    var Graph = (function () {
        function Graph(identityInfo, mode, https) {
            this.req = null;
            this.accessToken = null;
            this.KurveIdentity = null;
            this.defaultResourceID = "https://graph.microsoft.com";
            this.baseUrl = "https://graph.microsoft.com/v1.0";
            if (https)
                this.https = https;
            this.mode = mode;
            if (identityInfo.defaultAccessToken) {
                this.accessToken = identityInfo.defaultAccessToken;
            }
            else {
                this.KurveIdentity = identityInfo.identity;
            }
        }
        Object.defineProperty(Graph.prototype, "me", {
            get: function () { return new User(this, this.baseUrl); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Graph.prototype, "users", {
            get: function () { return new Users(this, this.baseUrl); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(Graph.prototype, "groups", {
            get: function () { return new Groups(this, this.baseUrl); },
            enumerable: true,
            configurable: true
        });
        Graph.prototype.Get = function (path, self, scopes, responseType) {
            console.log("GET", path, scopes);
            var d = new Deferred();
            this.get(path, function (error, result) {
                if (!responseType) {
                    var jsonResult = JSON.parse(result);
                    if (jsonResult.error) {
                        var errorODATA = new Error();
                        errorODATA.other = jsonResult.error;
                        d.reject(errorODATA);
                        return;
                    }
                    d.resolve(new Singleton(jsonResult, self));
                }
                else {
                    d.resolve(new Singleton(result, self));
                }
            }, responseType, scopes);
            return d.promise;
        };
        Graph.prototype.GetCollection = function (path, self, next, scopes) {
            console.log("GET collection", path, scopes);
            var d = new Deferred();
            this.get(path, function (error, result) {
                var jsonResult = JSON.parse(result);
                if (jsonResult.error) {
                    var errorODATA = new Error();
                    errorODATA.other = jsonResult.error;
                    d.reject(errorODATA);
                    return;
                }
                d.resolve(new Collection(jsonResult, self, next));
            }, null, scopes);
            return d.promise;
        };
        Graph.prototype.Post = function (object, path, self, scopes) {
            console.log("POST", path, scopes);
            var d = new Deferred();
            /*
                        this.post(object, path, (error, result) => {
                            var jsonResult = JSON.parse(result) ;
            
                            if (jsonResult.error) {
                                var errorODATA = new Error();
                                errorODATA.other = jsonResult.error;
                                d.reject(errorODATA);
                                return;
                            }
            
                            d.resolve(new Response<Model, N>({}, self));
                        });
            */
            return d.promise;
        };
        Graph.prototype.get = function (url, callback, responseType, scopes) {
            var _this = this;
            if (this.mode === Mode.Client) {
                var xhr = new XMLHttpRequest();
                if (responseType)
                    xhr.responseType = responseType;
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4)
                        if (xhr.status === 200)
                            callback(null, responseType ? xhr.response : xhr.responseText);
                        else
                            callback(_this.generateError(xhr));
                };
                xhr.open("GET", url);
                this.addAccessTokenAndSend(xhr, function (addTokenError) {
                    if (addTokenError) {
                        callback(addTokenError);
                    }
                }, scopes);
            }
            else {
                var token = this.findAccessToken(function (token, error) {
                    var path = url.substr(27, url.length);
                    var options = {
                        host: 'graph.microsoft.com',
                        port: '443',
                        path: path,
                        method: 'GET',
                        headers: {
                            'Content-Type': responseType ? responseType : 'application/json',
                            accept: '*/*',
                            'Authorization': 'Bearer ' + token
                        }
                    };
                    var post_req = _this.https.request(options, function (response) {
                        response.setEncoding('utf8');
                        response.on('data', function (chunk) {
                            callback(null, chunk);
                        });
                    });
                    post_req.end();
                }, scopes);
            }
        };
        Graph.prototype.findAccessToken = function (callback, scopes) {
            if (this.accessToken) {
                callback(this.accessToken, null);
            }
            else {
                //Using the integrated Identity object
                if (scopes) {
                    //v2 scope based tokens
                    this.KurveIdentity.getAccessTokenForScopes(scopes, false, (function (token, error) {
                        if (error)
                            callback(null, error);
                        else {
                            callback(token, null);
                        }
                    }));
                }
                else {
                    //v1 resource based tokens
                    this.KurveIdentity.getAccessToken(this.defaultResourceID, (function (error, token) {
                        if (error)
                            callback(null, error);
                        else {
                            callback(token, null);
                        }
                    }));
                }
            }
        };
        Graph.prototype.post = function (object, url, callback, responseType, scopes) {
            /*
                        var xhr = new XMLHttpRequest();
                        if (responseType)
                            xhr.responseType = responseType;
                        xhr.onreadystatechange = () => {
                            if (xhr.readyState === 4)
                                if (xhr.status === 202)
                                    callback(null, responseType ? xhr.response : xhr.responseText);
                                else
                                    callback(this.generateError(xhr));
                        }
                        xhr.send(object)
                        xhr.open("GET", url);
                        this.addAccessTokenAndSend(xhr, (addTokenError: Error) => {
                            if (addTokenError) {
                                callback(addTokenError);
                            }
                        }, scopes);
            */
        };
        Graph.prototype.generateError = function (xhr) {
            var response = new Error();
            response.status = xhr.status;
            response.statusText = xhr.statusText;
            if (xhr.responseType === '' || xhr.responseType === 'text')
                response.text = xhr.responseText;
            else
                response.other = xhr.response;
            return response;
        };
        Graph.prototype.addAccessTokenAndSend = function (xhr, callback, scopes) {
            this.findAccessToken(function (token, error) {
                if (token) {
                    xhr.setRequestHeader('Authorization', 'Bearer ' + token);
                    xhr.send();
                }
                else {
                    callback(error);
                }
            }, scopes);
        };
        return Graph;
    }());
    kurve.Graph = Graph;
    /*
    
    RequestBuilder allows you to discover and access the Microsoft Graph using Visual Studio Code intellisense.
    
    Just start typing and see how intellisense helps you explore the graph:
    
        graph.                      me, users
        graph.me.                   events, messages, calendarView, mailFolders, GetUser, odata, select, ...
        graph.me.events.            GetEvents, $, odata, select, ...
        graph.me.events.$           (eventId:string) => Event
        graph.me.events.$("123").   GetEvent, odata, select, ...
    
    Each endpoint exposes the set of available Graph operations through strongly typed methods:
    
        graph.me.GetUser() => UserDataModel
            GET "/me"
        graph.me.events.GetEvents => EventDataModel[]
            GET "/me/events"
        graph.me.events.CreateEvent(event:EventDataModel)
            POST "/me/events"
    
    Certain Graph endpoints are implemented as OData "Functions". These are not treated as Graph nodes. They're just methods:
    
        graph.me.events.$("123").DeclineEvent(eventResponse:EventResponse)
            POST "/me/events/123/microsoft.graph.decline
    
    Graph operations are exposed through Promises:
    
        graph.me.messages
        .GetMessages()
        .then(collection =>
            collection.items.forEach(message =>
                console.log(message.subject)
            )
        )
    
    All operations return a "self" property which allows you to continue along the Graph path from the point where you left off:
    
        graph.me.messages.$("123").GetMessage().then(singleton =>
            console.log(singleton.item.subject);
            singleton.self.attachments.GetAttachments().then(collection => // singleton.self === graph.me.messages.$("123")
                collection.items.forEach(attachment =>
                    console.log(attachment.contentBytes)
                )
            )
        )
    
    Operations which return paginated collections can return a "next" request object. This can be utilized in a recursive function:
    
        ListMessageSubjects(messages:Messages, odata?:string) {
            messages.GetMessages(odata).then(collection => {
                collection.items.forEach(message => console.log(message.subject));
                if (collection.next)
                    ListMessageSubjects(collection.next); // don't need odata after the first time
            })
        }
        ListMessageSubjects(graph.me.messages, new OData().select("subject").toString());
        
    (With async/await support, an iteration pattern can be used intead of recursion)
    
    Every Graph operation may include OData queries:
    
        graph.me.messages.GetMessages("$select=subject,id&$orderby=id")
            /me/messages/$select=subject,id&$orderby=id
    
    There is an optional OData helper to aid in constructing more complex queries:
    
        graph.me.messages.GetMessages(new OData()
            .select("subject", "id")
            .orderby("id")
        )
            /me/messages/$select=subject,id&$orderby=id
    
    Some operations include parameters which transform into OData queries
    
        graph.me.calendarView.GetCalendarView([start],[end], [odataQuery])
            /me/calendarView?startDateTime=[start]&endDateTime=[end]&[odataQuery]
    
    Note: This initial stab only includes a few familiar pieces of the Microsoft Graph.
    */
    var Scopes = (function () {
        function Scopes() {
        }
        Scopes.rootUrl = "https://graph.microsoft.com/";
        Scopes.General = {
            OpenId: "openid",
            OfflineAccess: "offline_access",
        };
        Scopes.User = {
            Read: Scopes.rootUrl + "User.Read",
            ReadAll: Scopes.rootUrl + "User.Read.All",
            ReadWrite: Scopes.rootUrl + "User.ReadWrite",
            ReadWriteAll: Scopes.rootUrl + "User.ReadWrite.All",
            ReadBasicAll: Scopes.rootUrl + "User.ReadBasic.All",
        };
        Scopes.Contacts = {
            Read: Scopes.rootUrl + "Contacts.Read",
            ReadWrite: Scopes.rootUrl + "Contacts.ReadWrite",
        };
        Scopes.Directory = {
            ReadAll: Scopes.rootUrl + "Directory.Read.All",
            ReadWriteAll: Scopes.rootUrl + "Directory.ReadWrite.All",
            AccessAsUserAll: Scopes.rootUrl + "Directory.AccessAsUser.All",
        };
        Scopes.Group = {
            ReadAll: Scopes.rootUrl + "Group.Read.All",
            ReadWriteAll: Scopes.rootUrl + "Group.ReadWrite.All",
            AccessAsUserAll: Scopes.rootUrl + "Directory.AccessAsUser.All"
        };
        Scopes.Mail = {
            Read: Scopes.rootUrl + "Mail.Read",
            ReadWrite: Scopes.rootUrl + "Mail.ReadWrite",
            Send: Scopes.rootUrl + "Mail.Send",
        };
        Scopes.Calendars = {
            Read: Scopes.rootUrl + "Calendars.Read",
            ReadWrite: Scopes.rootUrl + "Calendars.ReadWrite",
        };
        Scopes.Files = {
            Read: Scopes.rootUrl + "Files.Read",
            ReadAll: Scopes.rootUrl + "Files.Read.All",
            ReadWrite: Scopes.rootUrl + "Files.ReadWrite",
            ReadWriteAppFolder: Scopes.rootUrl + "Files.ReadWrite.AppFolder",
            ReadWriteSelected: Scopes.rootUrl + "Files.ReadWrite.Selected",
        };
        Scopes.Tasks = {
            ReadWrite: Scopes.rootUrl + "Tasks.ReadWrite",
        };
        Scopes.People = {
            Read: Scopes.rootUrl + "People.Read",
            ReadWrite: Scopes.rootUrl + "People.ReadWrite",
        };
        Scopes.Notes = {
            Create: Scopes.rootUrl + "Notes.Create",
            ReadWriteCreatedByApp: Scopes.rootUrl + "Notes.ReadWrite.CreatedByApp",
            Read: Scopes.rootUrl + "Notes.Read",
            ReadAll: Scopes.rootUrl + "Notes.Read.All",
            ReadWriteAll: Scopes.rootUrl + "Notes.ReadWrite.All",
        };
        return Scopes;
    }());
    kurve.Scopes = Scopes;
    var queryUnion = function (query1, query2) { return (query1 ? query1 + (query2 ? "&" + query2 : "") : query2); };
    var OData = (function () {
        function OData(query) {
            var _this = this;
            this.query = query;
            this.toString = function () { return _this.query; };
            this.odata = function (query) {
                _this.query = queryUnion(_this.query, query);
                return _this;
            };
            this.select = function () {
                var fields = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    fields[_i - 0] = arguments[_i];
                }
                return _this.odata("$select=" + fields.join(","));
            };
            this.expand = function () {
                var fields = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    fields[_i - 0] = arguments[_i];
                }
                return _this.odata("$expand=" + fields.join(","));
            };
            this.filter = function (query) { return _this.odata("$filter=" + query); };
            this.orderby = function () {
                var fields = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    fields[_i - 0] = arguments[_i];
                }
                return _this.odata("$orderby=" + fields.join(","));
            };
            this.top = function (items) { return _this.odata("$top=" + items); };
            this.skip = function (items) { return _this.odata("$skip=" + items); };
        }
        return OData;
    }());
    kurve.OData = OData;
    var pathWithQuery = function (path, odataQuery) {
        var query = odataQuery && odataQuery.toString();
        return path + (query ? "?" + query : "");
    };
    var Singleton = (function () {
        function Singleton(raw, self) {
            this.raw = raw;
            this.self = self;
        }
        Object.defineProperty(Singleton.prototype, "item", {
            get: function () {
                return this.raw;
            },
            enumerable: true,
            configurable: true
        });
        return Singleton;
    }());
    kurve.Singleton = Singleton;
    var Collection = (function () {
        function Collection(raw, self, next) {
            this.raw = raw;
            this.self = self;
            this.next = next;
            var nextLink = this.raw["@odata.nextLink"];
            if (nextLink) {
                this.next.nextLink = nextLink;
            }
            else {
                this.next = undefined;
            }
        }
        Object.defineProperty(Collection.prototype, "items", {
            get: function () {
                return (this.raw.value ? this.raw.value : [this.raw]);
            },
            enumerable: true,
            configurable: true
        });
        return Collection;
    }());
    kurve.Collection = Collection;
    var Node = (function () {
        function Node(graph, path) {
            var _this = this;
            this.graph = graph;
            this.path = path;
            //Only adds scopes when linked to a v2 Oauth of kurve identity
            this.scopesForV2 = function (scopes) {
                return _this.graph.KurveIdentity && _this.graph.KurveIdentity.getCurrentEndPointVersion() === EndPointVersion.v2 ? scopes : null;
            };
            this.pathWithQuery = function (odataQuery, pathSuffix) {
                if (pathSuffix === void 0) { pathSuffix = ""; }
                return pathWithQuery(_this.path + pathSuffix, odataQuery);
            };
        }
        return Node;
    }());
    kurve.Node = Node;
    var CollectionNode = (function (_super) {
        __extends(CollectionNode, _super);
        function CollectionNode() {
            var _this = this;
            _super.apply(this, arguments);
            this.pathWithQuery = function (odataQuery, pathSuffix) {
                if (pathSuffix === void 0) { pathSuffix = ""; }
                return _this._nextLink || pathWithQuery(_this.path + pathSuffix, odataQuery);
            };
        }
        Object.defineProperty(CollectionNode.prototype, "nextLink", {
            set: function (pathWithQuery) {
                this._nextLink = pathWithQuery;
            },
            enumerable: true,
            configurable: true
        });
        return CollectionNode;
    }(Node));
    kurve.CollectionNode = CollectionNode;
    var Attachment = (function (_super) {
        __extends(Attachment, _super);
        function Attachment(graph, path, context, attachmentId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + (attachmentId ? "/" + attachmentId : ""));
            this.context = context;
            this.GetAttachment = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2(Attachment.scopes[_this.context])); };
        }
        Attachment.scopes = {
            messages: [Scopes.Mail.Read],
            events: [Scopes.Calendars.Read],
        };
        return Attachment;
    }(Node));
    kurve.Attachment = Attachment;
    var Attachments = (function (_super) {
        __extends(Attachments, _super);
        function Attachments(graph, path, context) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/attachments");
            this.context = context;
            this.$ = function (attachmentId) { return new Attachment(_this.graph, _this.path, _this.context, attachmentId); };
            this.GetAttachments = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, new Attachments(_this.graph, null, _this.context), _this.scopesForV2(Attachment.scopes[_this.context])); };
        }
        return Attachments;
    }(CollectionNode));
    kurve.Attachments = Attachments;
    var Message = (function (_super) {
        __extends(Message, _super);
        function Message(graph, path, messageId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + (messageId ? "/" + messageId : ""));
            this.GetMessage = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.Mail.Read])); };
            this.SendMessage = function (odataQuery) { return _this.graph.Post(null, _this.pathWithQuery(odataQuery, "/microsoft.graph.sendMail"), _this, _this.scopesForV2([Scopes.Mail.Send])); };
        }
        Object.defineProperty(Message.prototype, "attachments", {
            get: function () { return new Attachments(this.graph, this.path, "messages"); },
            enumerable: true,
            configurable: true
        });
        return Message;
    }(Node));
    kurve.Message = Message;
    var Messages = (function (_super) {
        __extends(Messages, _super);
        function Messages(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/messages");
            this.$ = function (messageId) { return new Message(_this.graph, _this.path, messageId); };
            this.GetMessages = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, new Messages(_this.graph), _this.scopesForV2([Scopes.Mail.Read])); };
            this.CreateMessage = function (object, odataQuery) { return _this.graph.Post(object, _this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.Mail.ReadWrite])); };
        }
        return Messages;
    }(CollectionNode));
    kurve.Messages = Messages;
    var Event = (function (_super) {
        __extends(Event, _super);
        function Event(graph, path, eventId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + (eventId ? "/" + eventId : ""));
            this.GetEvent = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.Calendars.Read])); };
        }
        Object.defineProperty(Event.prototype, "attachments", {
            get: function () { return new Attachments(this.graph, this.path, "events"); },
            enumerable: true,
            configurable: true
        });
        return Event;
    }(Node));
    kurve.Event = Event;
    var Events = (function (_super) {
        __extends(Events, _super);
        function Events(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/events");
            this.$ = function (eventId) { return new Event(_this.graph, _this.path, eventId); };
            this.GetEvents = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, new Events(_this.graph), _this.scopesForV2([Scopes.Calendars.Read])); };
        }
        return Events;
    }(CollectionNode));
    kurve.Events = Events;
    var CalendarView = (function (_super) {
        __extends(CalendarView, _super);
        function CalendarView(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/calendarView");
            this.dateRange = function (startDate, endDate) { return ("startDateTime=" + startDate.toISOString() + "&endDateTime=" + endDate.toISOString()); };
            this.GetCalendarView = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, new CalendarView(_this.graph), _this.scopesForV2([Scopes.Calendars.Read])); };
        }
        return CalendarView;
    }(CollectionNode));
    kurve.CalendarView = CalendarView;
    var MailFolder = (function (_super) {
        __extends(MailFolder, _super);
        function MailFolder(graph, path, mailFolderId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + (mailFolderId ? "/" + mailFolderId : ""));
            this.GetMailFolder = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.Mail.Read])); };
        }
        return MailFolder;
    }(Node));
    kurve.MailFolder = MailFolder;
    var MailFolders = (function (_super) {
        __extends(MailFolders, _super);
        function MailFolders(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/mailFolders");
            this.$ = function (mailFolderId) { return new MailFolder(_this.graph, _this.path, mailFolderId); };
            this.GetMailFolders = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, new MailFolders(_this.graph), _this.scopesForV2([Scopes.Mail.Read])); };
        }
        return MailFolders;
    }(CollectionNode));
    kurve.MailFolders = MailFolders;
    var Photo = (function (_super) {
        __extends(Photo, _super);
        function Photo(graph, path, context) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/photo");
            this.context = context;
            this.GetPhotoProperties = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2(Photo.scopes[_this.context])); };
            this.GetPhotoImage = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery, "/$value"), _this, _this.scopesForV2(Photo.scopes[_this.context]), "blob"); };
        }
        Photo.scopes = {
            user: [Scopes.User.ReadBasicAll],
            group: [Scopes.Group.ReadAll],
            contact: [Scopes.Contacts.Read]
        };
        return Photo;
    }(Node));
    kurve.Photo = Photo;
    var Manager = (function (_super) {
        __extends(Manager, _super);
        function Manager(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/manager");
            this.GetManager = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.User.ReadAll])); };
        }
        return Manager;
    }(Node));
    kurve.Manager = Manager;
    var MemberOf = (function (_super) {
        __extends(MemberOf, _super);
        function MemberOf(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/memberOf");
            this.GetGroups = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, new MemberOf(_this.graph), _this.scopesForV2([Scopes.User.ReadAll])); };
        }
        return MemberOf;
    }(CollectionNode));
    kurve.MemberOf = MemberOf;
    var DirectReport = (function (_super) {
        __extends(DirectReport, _super);
        function DirectReport(graph, path, userId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/" + userId);
            this.graph = graph;
            this.GetDirectReport = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.User.Read])); };
        }
        return DirectReport;
    }(Node));
    kurve.DirectReport = DirectReport;
    var DirectReports = (function (_super) {
        __extends(DirectReports, _super);
        function DirectReports(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/directReports");
            this.$ = function (userId) { return new DirectReport(_this.graph, _this.path, userId); };
            this.GetDirectReports = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, new DirectReports(_this.graph), _this.scopesForV2([Scopes.User.Read])); };
        }
        return DirectReports;
    }(CollectionNode));
    kurve.DirectReports = DirectReports;
    var User = (function (_super) {
        __extends(User, _super);
        function User(graph, path, userId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, userId ? path + "/" + userId : path + "/me");
            this.graph = graph;
            this.GetUser = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.User.Read])); };
        }
        Object.defineProperty(User.prototype, "messages", {
            get: function () { return new Messages(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "events", {
            get: function () { return new Events(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "calendarView", {
            get: function () { return new CalendarView(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "mailFolders", {
            get: function () { return new MailFolders(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "photo", {
            get: function () { return new Photo(this.graph, this.path, "user"); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "manager", {
            get: function () { return new Manager(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "directReports", {
            get: function () { return new DirectReports(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(User.prototype, "memberOf", {
            get: function () { return new MemberOf(this.graph, this.path); },
            enumerable: true,
            configurable: true
        });
        return User;
    }(Node));
    kurve.User = User;
    var Users = (function (_super) {
        __extends(Users, _super);
        function Users(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/users");
            this.$ = function (userId) { return new User(_this.graph, _this.path, userId); };
            this.GetUsers = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, new Users(_this.graph), _this.scopesForV2([Scopes.User.Read])); };
        }
        return Users;
    }(CollectionNode));
    kurve.Users = Users;
    var Group = (function (_super) {
        __extends(Group, _super);
        function Group(graph, path, groupId) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/" + groupId);
            this.graph = graph;
            this.GetGroup = function (odataQuery) { return _this.graph.Get(_this.pathWithQuery(odataQuery), _this, _this.scopesForV2([Scopes.Group.ReadAll])); };
        }
        return Group;
    }(Node));
    kurve.Group = Group;
    var Groups = (function (_super) {
        __extends(Groups, _super);
        function Groups(graph, path) {
            var _this = this;
            if (path === void 0) { path = ""; }
            _super.call(this, graph, path + "/groups");
            this.$ = function (groupId) { return new Group(_this.graph, _this.path, groupId); };
            this.GetGroups = function (odataQuery) { return _this.graph.GetCollection(_this.pathWithQuery(odataQuery), _this, new Groups(_this.graph), _this.scopesForV2([Scopes.Group.ReadAll])); };
        }
        return Groups;
    }(CollectionNode));
    kurve.Groups = Groups;
})(kurve || (kurve = {}));
//*********************************************************
//
//Kurve js, https://github.com/microsoftdx/kurvejs
//
//Copyright (c) Microsoft Corporation
//All rights reserved.
//
// MIT License:
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the
// ""Software""), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to
// permit persons to whom the Software is furnished to do so, subject to
// the following conditions:
// The above copyright notice and this permission notice shall be
// included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//*********************************************************

//# sourceMappingURL=kurve.js.map
